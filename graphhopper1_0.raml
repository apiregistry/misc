#%RAML 1.0
title: Route Optimization
version: '1.0'
baseUri: graphhopper.com/api/1/vrp
description: Our Route Optimization API solves the so called vehicle routing problem fast. It calculates an optimal tour for a set of vehicles, services and constraints
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  api_key:
    type: Pass Through
types:
  Activity:
    type: object
    properties:
      arr_time?:
        type: integer
        description: arrival time at this activity in ms
        format: int64
      distance?:
        type: integer
        description: cumulated distance from start to this activity in m
        format: int64
      driving_time?:
        type: integer
        description: driving time of driver in ms
        format: int64
      end_time?:
        type: integer
        description: end time of and thus departure time at this activity
        format: int64
      id?:
        type: string
        description: id referring to the underlying service or shipment, i.e. the shipment or service this activity belongs to
      load_after?:
        type: array
        description: Array with size/capacity dimensions after this activity
        items:
          type: integer
          description: dimension value
          format: int32
      load_before?:
        type: array
        description: Array with size/capacity dimensions before this activity
        items:
          type: integer
          description: dimension value
          format: int32
      location_id?:
        type: string
        description: id that refers to address
      type?:
        type: string
        description: type of activity
        enum:
        - start
        - end
        - service
        - pickupShipment
        - deliverShipment
        - pickup
        - delivery
      waiting_time?:
        type: integer
        description: waiting time at this activity in ms
        format: int64
  Address:
    type: object
    properties:
      lat?:
        type: number
        description: latitude
        format: double
      location_id?:
        type: string
        description: Unique identifier of location
      lon?:
        type: number
        description: longitude
        format: double
  Algorithm:
    type: object
    properties:
      objective?:
        type: string
        enum:
        - transport_time
        - completion_time
      problem_type?:
        type: string
        enum:
        - min
        - min-max
  Break:
    type: object
    properties:
      duration?:
        type: integer
        description: duration of break
        format: int64
      earliest?:
        type: integer
        description: earliest start of break
        format: int64
      initial_driving_time?:
        type: integer
        description: initial driving time, i.e. the time your driver has already spent for driving
        format: int64
      latest?:
        type: integer
        description: latest start of break
        format: int64
      max_driving_time?:
        type: integer
        description: max driving time without break
        format: int64
      possible_split?:
        type: array
        description: array of splits
        items:
          type: integer
          format: int64
  CostMatrix:
    type: object
    properties:
      profile?:
        type: string
        description: vehicle profile or empty if catch all fallback
      type?:
        type: string
        description: type of cost matrix, currently default or google are supported
        enum:
        - default
        - google
      url?:
        type: string
        description: URL of matrix service
  JobId:
    type: object
    properties:
      job_id?:
        type: string
        description: unique id for your job/request with which you can fetch your solution
  Objective:
    type: object
    properties:
      type?:
        type: string
        description: 'type of objective function, i.e. min or min-max '
        enum:
        - min
        - min-max
      value?:
        type: string
        description: objective function value
        enum:
        - completion_time
        - transport_time
        - vehicles
  Relation:
    type: object
    properties:
      ids?:
        type: array
        description: An array of ids that should be related
        items:
          type: string
          description: id of services or special ids of shipments
      type?:
        type: string
        description: identifier of relation
      vehicle_id?:
        type: string
        description: vehicle id
  Request:
    type: object
    properties:
      algorithm?:
        type: Algorithm
      cost_matrices?:
        type: array
        description: An array of cost matrices
        items:
          type: CostMatrix
      objectives?:
        type: array
        description: An array of objectives
        items:
          type: Objective
      relations?:
        type: array
        description: An array of relations
        items:
          type: Relation
      services?:
        type: array
        description: An array of services
        items:
          type: Service
      shipments?:
        type: array
        description: An array of shipments
        items:
          type: Shipment
      vehicle_types?:
        type: array
        description: An array of vehicle types
        items:
          type: VehicleType
      vehicles?:
        type: array
        description: An array of vehicles that can be employed
        items:
          type: Vehicle
    description: Request object that contains the problem to be solved
  Response:
    type: object
    properties:
      copyrights?:
        type: array
        items:
          type: string
          description: attribution
      job_id?:
        type: string
        description: unique identify of job - which you get when posting your request to the large problem solver
      processing_time?:
        type: integer
        description: processing time in ms. if job is still waiting in queue, processing_time is 0
        format: int64
      solution?:
        type: Solution
        description: the solution. only available if status field indicates finished
      status?:
        type: string
        description: indicates the current status of the job
        enum:
        - waiting_in_queue
        - processing
        - finished
      waiting_in_queue?:
        type: integer
        description: waiting time in ms
        format: int64
  Route:
    type: object
    properties:
      activities?:
        type: array
        description: array of activities
        items:
          type: Activity
      completion_time?:
        type: integer
        description: completion time of route in ms
        format: int64
      distance?:
        type: integer
        description: distance of route in meter
        format: int64
      transport_time?:
        type: integer
        description: transport time of route in ms
        format: int64
      vehicle_id?:
        type: string
        description: id of vehicle that operates route
      waiting_time?:
        type: integer
        description: waiting time of route in ms
        format: int64
  Service:
    type: object
    properties:
      address?:
        type: Address
      allowed_vehicles?:
        type: array
        description: array of allowed vehicle ids
        items:
          type: string
      duration?:
        type: integer
        description: duration of service, i.e. time in ms the corresponding activity takes
        format: int64
      id?:
        type: string
        description: Unique identifier of service
      name?:
        type: string
        description: name of service
      priority?:
        type: integer
        description: priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is 2.
        format: int32
      required_skills?:
        type: array
        description: array of required skills
        items:
          type: string
      size?:
        type: array
        description: array of capacity dimensions
        items:
          type: integer
          format: int32
      time_windows?:
        type: array
        description: array of time windows. currently, only a single time window is allowed
        items:
          type: TimeWindow
      type?:
        type: string
        description: type of service
        enum:
        - service
        - pickup
        - delivery
  Shipment:
    type: object
    properties:
      allowed_vehicles?:
        type: array
        description: array of allowed vehicle ids
        items:
          type: string
      delivery?:
        type: Stop
      id?:
        type: string
        description: Unique identifier of service
      name?:
        type: string
        description: name of shipment
      pickup?:
        type: Stop
      priority?:
        type: integer
        description: priority of service, i.e. 1 = high, 2 = normal, 3 = low. default is 2.
        format: int32
      required_skills?:
        type: array
        description: array of required skills
        items:
          type: string
      size?:
        type: array
        description: array of capacity dimensions
        items:
          type: integer
          format: int32
  Solution:
    type: object
    properties:
      costs?:
        type: integer
        description: overall costs of solution
        format: int32
      distance?:
        type: integer
        description: overall travel distance in meters
        format: int32
      max_operation_time?:
        type: integer
        description: operation time of the longest route in ms
        format: int64
      no_unassigned?:
        type: integer
        description: number of jobs that could not be assigned to final solution
        format: int32
      no_vehicles?:
        type: integer
        description: number of employed vehicles
        format: int32
      routes?:
        type: array
        description: An array of routes
        items:
          type: Route
      time?:
        type: integer
        description: overall transport time in ms
        format: int64
      transport_time?:
        type: integer
        description: overall transport time in ms
        format: int64
      unassigned?:
        type: object
        properties:
          services?:
            type: array
            description: An array of ids of unassigned services
            items:
              type: string
              description: id of unassigned service
          shipments?:
            type: array
            description: An array of ids of unassigned shipments
            items:
              type: string
              description: id of unassigned shipments
      waiting_time?:
        type: integer
        description: total waiting time in ms
        format: int64
  Stop:
    type: object
    properties:
      address?:
        type: Address
      duration?:
        type: integer
        description: duration of stop, i.e. time in ms the corresponding activity takes
        format: int64
      time_windows?:
        type: array
        description: array of time windows. currently, only a single time window is allowed
        items:
          type: TimeWindow
  TimeWindow:
    type: object
    properties:
      earliest?:
        type: integer
        description: earliest start time of corresponding activity
        format: int64
      latest?:
        type: integer
        description: latest start time of corresponding activity
        format: int64
  Vehicle:
    type: object
    properties:
      break?:
        type: Break
      earliest_start?:
        type: integer
        description: earliest start of vehicle at its start location
        format: int64
      end_address?:
        type: Address
      latest_end?:
        type: integer
        description: latest end of vehicle at its end location
        format: int64
      return_to_depot?:
        type: boolean
        description: Indicates whether vehicle should return to start address or not. If not, it can end at any service activity.
      skills?:
        type: array
        description: array of skills
        items:
          type: string
      start_address?:
        type: Address
      type_id?:
        type: string
        description: Unique identifier referring to the available vehicle types
      vehicle_id?:
        type: string
        description: Unique identifier of vehicle
  VehicleType:
    type: object
    properties:
      capacity?:
        type: array
        description: array of capacity dimensions
        items:
          type: integer
          format: int32
      profile?:
        type: string
        description: Profile of vehicle type
        example: car
        enum:
        - car
        - bike
        - foot
        - mtb
        - motorcycle
        - racingbike
        - truck
        - small_truck
        - bus
      service_time_factor?:
        type: number
        description: service time factor of vehicle type
        format: double
      speed_factor?:
        type: number
        description: speed_factor of vehicle type
        format: double
      type_id?:
        type: string
        description: Unique identifier for the vehicle type
/optimize:
  post:
    description: |
      This endpoint for solving vehicle routing problems, i.e. traveling salesman or vehicle routing problems, and returns the solution.
    displayName: Solves vehicle routing problems
    queryParameters:
      key:
        type: string
        description: your API key
        displayName: key
    body:
      application/json: Request
    responses:
      200:
        description: A jobId you can use to retrieve your solution from server - see solution endpoint.
        body:
          application/json:
            type: JobId
      400:
        description: Error occurred when reading client request. Request is invalid.
      500:
        description: Error occurred on server side.
/solution:
  /{jobId}:
    uriParameters:
      jobId:
        type: string
        description: Request solution with jobId
        displayName: jobId
    get:
      description: |
        This endpoint returns the solution of a large problems. You can fetch it with the job_id, you have been sent.
      displayName: Return the solution associated to the jobId
      queryParameters:
        key:
          type: string
          description: your API key
          displayName: key
      responses:
        200:
          description: A response containing the solution
          body:
            application/json:
              type: Response
        400:
          description: Error occurred on client side such as invalid input.
        500:
          description: Error occurred on server side.
