#%RAML 1.0
title: Learnifier
version: 1.1.0
baseUri: learnifier.com
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  ActivationError:
    type: object
    properties:
      code?:
        type: integer
        description: Optional error code
        format: int32
      failures?:
        type: array
        items:
          type: ProductFailure
      field?:
        type: string
        description: The input field that the error was related to
      message?:
        type: string
        description: Optional error message
  AddOrganizationUnit:
    type: object
    properties:
      caller?:
        type: commons.uuid
        description: The id of the user that initiated this operation
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      clientNumber?:
        type: string
        description: A client number. Sometimes used when communicating with external system. Must be unique if specified.
        example: X-1234
      country?:
        type: string
        description: The country code that best matches the organization unit. If unspecified the platform default will be set.
        example: se
      displayName:
        type: string
        description: The name shown for the organization unit
        example: Sample Corp
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      parent?:
        type: number
        description: A Organization Unit id of the parent Organization Unit (optional).
  AddOrganizationUnitResponse:
    type: object
    properties:
      ouId?:
        type: integer
        description: The Organization Unit id
        format: int64
  AddParticipant:
    type: object
    properties:
      email?:
        type: commons.email
        description: The email of the user. If no user exists with the specified email a user will be created with default values and the specified email.
        example: user@example.com
      extid?:
        type: string
        description: An optional external id for the participation
      userid?:
        type: commons.uuid
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
  AddProject:
    type: object
    properties:
      country?:
        type: commons.countrycode
        description: The country code. Default value will be used if not specified
        example: SE
      createdBy?:
        type: commons.uuid
        description: The id of the user that created the project. If the creator is not known this value can be *null* or not specified
        example: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
      designId:
        type: integer
        description: The id of the design this project should be based on
        format: int64
      locale?:
        type: string
        description: The primary locale for this project. Default value will be used if not specified
        example: en-US
      name:
        type: string
        description: The internal name of the project
      note?:
        type: string
        description: The internal note field
      timezone?:
        type: string
        description: The main timezone for the project. Do not specify for default timezone
        example: Europe/Stockholm
      userDescription?:
        type: string
        description: The description presented to participants. Do not specify for default value from design
      userTitle?:
        type: string
        description: The title presented to participants. Do not specify for default value from design
  AddUser:
    type: object
    properties:
      displayName?:
        type: string
        description: The name shown when the user is listed
        example: Jane Doe
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      firstName?:
        type: string
        description: The first (given) name of the user
        example: Jane
      hardLock?:
        type: boolean
        description: True if the user should be locked from the system
      homeOrg?:
        type: integer
        description: The primary organization for the user. Must match the id of an Organization Unit.
        format: int64
      locale?:
        type: string
        description: The user's preferred language/locale setting. Affects date and number formatting.
        example: en-US
      primaryEmail?:
        type: string
        description: The primary email for the user. Used for communication from the platform.
        example: jane.doe@example.com
  AddUserGroup:
    type: object
    properties:
      name:
        type: string
        description: Name of group.
        example: Foo
      parent?:
        type: integer
        description: Optional ID of parent group.
        format: int64
  AddUserGroupMember:
    type: object
    properties:
      uuid:
        type: commons.uuid
        description: UUID of user to add to this group.
  AddUserResponse:
    type: object
    properties:
      userId?:
        type: commons.uuid
        description: The user id
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
  Anonimous0:
    type: object
    properties:
      backOfficeRoles?:
        type: array
        items:
          type: BackOfficeRole
      clientRoles?:
        type: array
        description: A list with client roles
        items:
          type: ClientRoles
  Anonimous1:
    type: object
    properties:
      backOfficeRoles?:
        type: array
        items:
          type: BackOfficeRole
      clientRoles?:
        type: array
        description: A list with client roles
        items:
          type: ClientRoles
  BackOfficeRole:
    type: object
    properties:
      id:
        type: string
        description: The id of the role
      name:
        type: string
        description: The name of the role
  ClientRole:
    type: object
    properties:
      id?:
        type: string
        description: The id of the role
      name?:
        type: string
        description: The name of the role
  ClientRoles:
    type: object
    properties:
      id?:
        type: string
        description: An organization unit id
      roles?:
        type: array
        description: A list with client roles
        items:
          type: ClientRole
  CourseDesign:
    type: object
    properties:
      created?:
        type: datetime
        description: The time this entry was created
      createdBy?:
        type: commons.uuid
        description: UUID of the user that created this entry.
      description?:
        type: string
        description: Course description
      enabled:
        type: boolean
        description: True if this design is enabled for use
      locale:
        type: string
        description: BCP-47 locale
      locked?:
        type: datetime
        description: The time when this entry was locked or null
      lockedBy?:
        type: commons.uuid
        description: UUID of the user that has locked this design
      lockedDesign:
        type: boolean
        description: True if this design is locked for editing
      name:
        type: string
        description: The name
      softid?:
        type: string
        description: The soft identifier
      sticky:
        type: boolean
        description: True if this design is sticky
      tags?:
        type: array
        description: Course tags
        items:
          type: string
  Error:
    type: object
    properties:
      code?:
        type: integer
        description: Optional error code
        format: int32
      field?:
        type: string
        description: The input field that the error was related to
      message?:
        type: string
        description: Optional error message
  GlobalUserGroup:
    type: object
    properties:
      created:
        type: datetime
        description: Timestamp when group was created.
      createdBy?:
        type: commons.uuid
        description: UUID of the user that created this group.
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      id:
        type: integer
        description: The id of the group.
        format: int64
      name?:
        type: string
        description: The name of the group.
      parent?:
        type: integer
        description: Id of parent group, null if group has no parent.
        format: int64
      softiId?:
        type: string
        description: Alternative unique ID for the group.
      updated?:
        type: datetime
        description: Timestamp when group was last modified.
      updatedBy?:
        type: commons.uuid
        description: UUID of the user that last updated this group.
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
  GroupId:
    type: object
    properties:
      groupId:
        type: integer
        description: ID of group.
        format: int64
  LoginLink:
    type: object
    properties:
      link?:
        type: commons.url
        description: An full http url
        example: http://www.example.com/login/1234567890
  OrgUnit:
    type: object
    properties:
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      id:
        type: integer
        description: Unique identifier representing a specific organization unit. Id numbers are never reused.
        format: int64
      name?:
        type: string
        description: The name of the client.
      parentId?:
        type: integer
        description: Unique identifier of the parent or *null* if there is no parent.
        format: int64
      type:
        type: string
        description: The organization unit type. The only type is *client* at the moment.
  OrgUnits:
    type: object
    properties:
      orgUnits?:
        type: array
        items:
          type: OrgUnit
  Participation:
    type: object
    properties:
      accessLink?:
        type: commons.url
        description: 'A link to access this particular participation. The link requires
          the user to login. Users that access the platform the first time must set
          a password. This value is null if this participation is not activated. '
        example: http://www.example.com/accesslink/123451
      activated?:
        type: boolean
        description: True if this participation has been activated and can be used
      activitiesCompleted?:
        type: integer
        description: The number of activities completed
        format: int64
      activitiesTotal?:
        type: integer
        description: The total number of activities
        format: int64
      errorMessage?:
        type: string
        description: An optional error message that may describe why the participation is in error state.
      expiration?:
        type: datetime
        description: The timestamp when this participation will expire. Expiration never happens if this value is *null*.
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      firstAccess?:
        type: datetime
        description: The timestamp when the participant accessed the project for the first time. This value can be null
      firstActivation?:
        type: datetime
        description: The timestamp when this participation was first activated. This value can be null
      firstMail?:
        type: datetime
        description: The timestamp when the first mail was sent to this participant. This value can be null
      id?:
        type: integer
        description: Unique identifier representing this participation. Id numbers are never reused
        format: int64
      inError?:
        type: boolean
        description: True if this participation is in an error state. The user is not able to access participations that are in error state.
      lastAccess?:
        type: datetime
        description: The timestamp when the participant accessed the project the last time. This value can be null
      lastActivation?:
        type: datetime
        description: The timestamp when this participation was last activated. This value can be null
      lastMail?:
        type: datetime
        description: The timestamp when the last mail was sent to this participant. This value can be null
      projectId?:
        type: integer
        description: The id of the project this participation belongs to
        format: int64
      userId?:
        type: commons.uuid
        description: The id of the user this participation belongs to
  ProductFailure:
    type: object
    properties:
      message?:
        type: string
        description: The error message
      productId?:
        type: string
        description: A product id
      type?:
        type: string
        description: The technical error type
  Project:
    type: object
    properties:
      adminUrl?:
        type: commons.url
        description: URL to the page where project administration can be done. Administrative access is still required when accessing the url.
        example: http://www.example.com/adminUrl/1234
      country?:
        type: commons.countrycode
        description: The country code
        example: SE
      created?:
        type: datetime
        description: The timestamp when this project was created.
      createdBy?:
        type: commons.uuid
        description: The id of the user that created the project. If the creator is not known this value is *null*
        example: 8c102c8e-fabd-4c8a-b245-4d2d2f77fc4b
      designId?:
        type: integer
        description: The id of the design this project are using or null if no design is used
        format: int64
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      id?:
        type: integer
        description: Unique identifier representing a specific project. Id numbers are never reused.
        format: int64
      locale?:
        type: string
        description: The primary locale for this project
        example: en-US
      name?:
        type: string
        description: The internal name of the project
      note?:
        type: string
        description: The internal note field
      orgId?:
        type: integer
        description: The id of the organization unit this project belongs to
        format: int64
      status?:
        type: string
        description: Project status. Can be either ACTIVATED, NEW or DISABLED
        example: ACTIVATED
        enum:
        - ACTIVATED
        - NEW
        - DISABLED
      timezone?:
        type: string
        description: The main timezone for the project
        example: Europe/Stockholm
      userDescription?:
        type: string
        description: The description presented to participants. This value can be *null*.
      userTitle?:
        type: string
        description: The title presented to participants
  ProjectTeamMember:
    type: object
    properties:
      roles?:
        type: TeamRole
      userid?:
        type: commons.uuid
        description: The id of the user that created the project. If the creator is not known this value is *null*
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
  TeamRole:
    type: object
    properties:
      name?:
        type: string
      roleid?:
        type: commons.uuid
        example: 2afae00f-8357-4b56-94bb-44a3cf0b8ffa
  UpdateOrganizationUnit:
    type: object
    properties:
      caller?:
        type: commons.uuid
        description: The id of the user that initiated this operation
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      clientNumber?:
        type: string
        description: A client number. Sometimes used when communicating with external system. Must be unique if specified.
        example: X-1234
      country?:
        type: string
        description: The country code that best matches the organization unit. If unspecified the platform default will be set.
        example: se
      displayName?:
        type: string
        description: The name shown for the organization unit
        example: Sample Corp
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      parent?:
        type: number
        description: A Organization Unit id of the parent Organization Unit (optional).
  UpdateProject:
    type: object
    properties:
      country?:
        type: commons.countrycode
        description: The country code
        example: SE
      locale?:
        type: string
        description: The primary locale for this project
        example: en-US
      name?:
        type: string
        description: The internal name of the project
      note?:
        type: string
        description: The internal note field
      status?:
        type: string
        description: Project status. Can be either ACTIVATED, NEW or DISABLED
        example: ACTIVATED
        enum:
        - ACTIVATED
        - NEW
        - DISABLED
      timezone?:
        type: string
        description: The main timezone for the project
        example: Europe/Stockholm
      userDescription?:
        type: string
        description: The description presented to participants. This value can be *null*.
      userTitle?:
        type: string
        description: The title presented to participants
  User:
    type: object
    properties:
      authorizationPossible?:
        type: boolean
        description: True if the user can authorize herself/himself
      displayName?:
        type: string
        description: Full name of the user
        example: Jane Doe
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      firstLogin?:
        type: datetime
        description: The timestamp when the first login was made. This value can be *null*.
      firstName?:
        type: string
        description: The first name of the user (or given name)
        example: Jane
      hardLock?:
        type: boolean
        description: True if the user is locked and the lock has been set by an administrator
      homeOrg?:
        type: integer
        description: The primary organization for the user. Must match the id of an Organization Unit.
        format: int64
      id?:
        type: commons.uuid
        description: The id of the user this participation belongs to
        example: 81590981-1e05-4fd5-aa15-15bc4b06cf7f
      lastLogin?:
        type: datetime
        description: The timestamp when the last login was made. This value can be *null*.
      lastName?:
        type: string
        description: The last name of the user (or surname)
        example: Doe
      locked?:
        type: boolean
        description: Lock status. A locked user will not be able to access the platform.
      prefs?:
        type: UserPreferences
      primaryEmail?:
        type: commons.email
        description: The primary email for this user. If the user has no email this value is *null*.
  UserGroup:
    type: object
    properties:
      children?:
        type: array
        description: Children User Groups.
        items:
          type: UserGroup
      globalId?:
        type: integer
        description: Global group ID if this group is based on a global group, otherwise null.
        format: int64
      groupId?:
        type: integer
        description: Unique identifier representing a User Group. Id numbers are never reused.
        format: int64
      name:
        type: string
        description: The name of the User Group.
      parent?:
        type: integer
        description: Unique identifier of the parent or *null* if there is no parent.
        format: int64
      userGroup?:
        type: integer
        description: If of internal user group object that holds the members of this group.
        format: int64
  UserId:
    type: object
    properties:
      uuid:
        type: commons.uuid
        description: UUID of user to add to this group.
        example: aa7685cb-d47e-419e-8541-0d13cdcfe779
  UserParticipationInfo:
    type: object
    properties:
      accessLink?:
        type: commons.url
        description: 'A link to access this particular participation. The link requires
          the user to login. Users that access the platform the first time must set
          a password. This value is null if this participation is not activated. '
        example: http://www.example.com/accesslink/123451
      activated?:
        type: boolean
        description: True if this participation has been activated and can be used
      activitiesCompleted?:
        type: integer
        description: The number of activities completed
        format: int64
      activitiesTotal?:
        type: integer
        description: The total number of activities
        format: int64
      errorMessage?:
        type: string
        description: An optional error message that may describe why the participation is in error state.
      expiration?:
        type: datetime
        description: The timestamp when this participation will expire. Expiration never happens if this value is *null*.
      externalId?:
        type: string
        description: The external id (foreign key). Must not exceed 255 characters.
      firstAccess?:
        type: datetime
        description: The timestamp when the participant accessed the project for the first time. This value can be null
      firstActivation?:
        type: datetime
        description: The timestamp when this participation was first activated. This value can be null
      firstMail?:
        type: datetime
        description: The timestamp when the first mail was sent to this participant. This value can be null
      id?:
        type: integer
        description: Participation id
        format: int64
      inError?:
        type: boolean
        description: True if this participation is in an error state. The user is not able to access participations that are in error state.
      lastAccess?:
        type: datetime
        description: The timestamp when the participant accessed the project the last time. This value can be null
      lastActivation?:
        type: datetime
        description: The timestamp when this participation was last activated. This value can be null
      lastMail?:
        type: datetime
        description: The timestamp when the last mail was sent to this participant. This value can be null
      projectId?:
        type: integer
        description: Project id
        format: int64
      projectName?:
        type: string
        description: The internal name of the project
      projectOrgId?:
        type: integer
        description: The organization id
        format: int64
      projectStatus?:
        type: string
        description: Project status. Can be either ACTIVATED, NEW or DISABLED
        example: ACTIVATED
        enum:
        - ACTIVATED
        - NEW
        - DISABLED
      projectThumbnail?:
        type: commons.url
        description: An url to the project thumbnail. This url can be accessed by anyone.
        example: http://www.example.com/thumbnail.png
      projectUserTitle?:
        type: string
        description: The title presented to participants
  UserPreferences:
    type: object
    properties:
      locale?:
        type: string
        description: The preferred locale. This value can be *null* if no specific preference has been selected.
        example: sv-SE
  UserWithPermissions:
    type:
    - User
    - Anonimous0
/coursedesigns:
  get:
    description: Lists all global course design templates. Only api callers that have full access can call this method.
    displayName: Lists all global course design templates
    responses:
      200:
        description: List with course design templates
        body:
          application/json:
            type: array
            items:
              type: CourseDesign
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/extorgunit:
  get:
    description: |
      Returns information about the organization unit with the specified external id.
    displayName: Get Organization Unit with External Id
    queryParameters:
      extid:
        type: string
        description: The external id of the organization unit
        displayName: extid
    responses:
      200:
        description: A response with an organization unit
        body:
          application/json:
            type: OrgUnit
      404:
        description: Organization Unit not found
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/extparticipation:
  get:
    description: Gets a participation by external id.
    displayName: Gets a participation by external id
    queryParameters:
      extid:
        type: string
        description: The external id of the participation
        displayName: extid
    responses:
      200:
        description: The matching participation
        body:
          application/json:
            type: Participation
      404:
        description: User not found
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/extproject:
  get:
    description: Gets an Organization Unit by external id
    displayName: Gets Organization Unit by external id
    queryParameters:
      extid:
        type: string
        description: The external id of the organization unit
        displayName: extid
    responses:
      200:
        description: The matching project
        body:
          application/json:
            type: Project
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/extuser:
  get:
    description: Gets a user by external id.
    displayName: Gets a user by external id
    queryParameters:
      extid:
        type: string
        description: The external id of the user
        displayName: extid
    responses:
      200:
        description: User was successfully added
        body:
          application/json:
            type: User
      404:
        description: User not found
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/globalusergroups:
  /{groupid}:
    uriParameters:
      groupid:
        type: integer
        description: ID of group
        displayName: groupid
        format: int64
    /members:
      get:
        description: |
          Returns a list of all members in User Groups that are based on the Global Group with this groupid.
        displayName: List of all users in group.
        responses:
          200:
            description: List of users
            body:
              application/json:
                type: array
                items:
                  type: User
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
  get:
    description: |
      Returns a list of Global User Groups. Global User Groups are set up for the realm, and will generate groups that can be used on the client level.
    displayName: List Global User Groups.
    responses:
      200:
        description: List of Global User Groups.
        body:
          application/json:
            type: array
            items:
              type: GlobalUserGroup
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/orgunits:
  /{orgid}:
    uriParameters:
      orgid:
        type: integer
        description: Id of the organization unit
        displayName: orgid
    /projects:
      /{projectid}:
        uriParameters:
          projectid:
            type: integer
            description: Id of the project
            displayName: projectid
        /participants:
          /${participantId}:
            uriParameters:
              participantId:
                type: integer
                description: Participant id
                displayName: participantId
            /activate:
              post:
                description: |
                  Activates a participant so that it can be used
                displayName: Activate participant
                responses:
                  201:
                    description: Participant is activated
                  406:
                    description: The participant could not be activated
                    body:
                      application/json:
                        type: ActivationError
                  422:
                    description: The participant could not be activated due to invalid project state
                    body:
                      application/json:
                        type: Error
                  500:
                    description: Unexpected error
                    body:
                      application/json:
                        type: Error
            /loginlink:
              post:
                description: |
                  Returns a single sign on link for the participant. The link is only usable once and should be used directly. The link expires after a few minutes.

                  This operation requires the *login link* permission.
                displayName: Participant login link
                responses:
                  200:
                    description: A generated one time use login link
                    body:
                      application/json:
                        type: LoginLink
                  422:
                    description: The participant is not in a state where a loginlink is possible to get
                    body:
                      application/json:
                        type: Error
                  500:
                    description: Unexpected error
                    body:
                      application/json:
                        type: Error
            delete:
              description: "Deletes a participant. The user itself will still remain\
                \ but any state related to the project will be deleted. \nIt might\
                \ not be possible due to constraints from the products in the project\
                \ to delete the participant. However\nthis can only be determined\
                \ at the time of the delete. If a delete fails the participant will\
                \ have their inError\nflag set.\n"
              displayName: Deletes a participant
              responses:
                204:
                  description: Participant is deleted
                409:
                  description: The delete failed due to internal constraints
                  body:
                    application/json:
                      type: Error
                500:
                  description: Unexpected error
                  body:
                    application/json:
                      type: Error
          get:
            description: |
              Returns project participants
            displayName: Project participants
            responses:
              200:
                description: Project information
                body:
                  application/json:
                    type: array
                    items:
                      type: Participation
              500:
                description: Unexpected error
                body:
                  application/json:
                    type: Error
          post:
            description: |
              Add a user to the project. Participant information is created for the user. In the body object, only one of either email or userid must be specified. The participant needs to be activated before it the user can access it.
            displayName: Add participant
            body:
              application/json:
                type: object
                properties:
                  backOfficeRoles?:
                    type: array
                    items:
                      type: BackOfficeRole
                  clientRoles?:
                    type: array
                    description: A list with client roles
                    items:
                      type: ClientRoles
            responses:
              201:
                description: Participant was created
                headers:
                  location?:
                    type: string
                    description: Location to the added participant
              409:
                description: Participant with the same email already existed. Location header contains the url to the already existing participant.
                headers:
                  location?:
                    type: string
                    description: Location to the participant
              500:
                description: Unexpected error
                body:
                  application/json:
                    type: Error
        /teammembers:
          get:
            description: |
              Returns the project team members. A team member is a ....
            displayName: Project team members
            responses:
              200:
                description: Project information
                body:
                  application/json:
                    type: array
                    items:
                      type: ProjectTeamMember
              500:
                description: Unexpected error
                body:
                  application/json:
                    type: Error
        get:
          description: |
            Returns project information
          displayName: Project information
          responses:
            200:
              description: Project information
              body:
                application/json:
                  type: Project
            500:
              description: Unexpected error
              body:
                application/json:
                  type: Error
        delete:
          description: |
            Deletes the project. The project can only be deleted if the project do not contain any participants.
          displayName: Deletes the project
          responses:
            204:
              description: The project was deleted
            404:
              description: The project could not be found
            406:
              description: The project could not be delted due to constraints
              body:
                application/json:
                  type: Error
            500:
              description: Unexpected error
              body:
                application/json:
                  type: Error
        patch:
          description: |
            Updates information about a project. Values are only updated if the fields are specified in the input
          displayName: Update project information
          body:
            application/json:
              type: object
              properties:
                backOfficeRoles?:
                  type: array
                  items:
                    type: BackOfficeRole
                clientRoles?:
                  type: array
                  description: A list with client roles
                  items:
                    type: ClientRoles
          responses:
            200:
              description: The project was succesfully updated
              headers:
                location?:
                  type: string
                  description: Location to the added project
              body:
                application/json:
                  type: Project
            500:
              description: Unexpected error
              body:
                application/json:
                  type: Error
      get:
        description: |
          Returns the available projects for the organization unit
        displayName: Organization Unit Projects
        responses:
          200:
            description: A list with projects
            body:
              application/json:
                type: array
                items:
                  type: Project
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
      post:
        description: |
          Creates a new project
        displayName: Create project
        body:
          application/json:
            type: object
            properties:
              backOfficeRoles?:
                type: array
                items:
                  type: BackOfficeRole
              clientRoles?:
                type: array
                description: A list with client roles
                items:
                  type: ClientRoles
        responses:
          201:
            description: The project was succesfully created created.
            headers:
              location?:
                type: string
                description: Location to the added project
            body:
              application/json:
                type: Project
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
    /usergroups:
      /{groupid}:
        uriParameters:
          groupid:
            type: integer
            description: ID of group
            displayName: groupid
            format: int64
        /members:
          /{uuid}:
            uriParameters:
              uuid:
                type: commons.uuid
                description: UUID of user to remove from group.
                displayName: uuid
            delete:
              description: |
                Removes a user from a user group.
              displayName: Remove user group member.
              responses:
                200:
                  description: OK
                500:
                  description: Unexpected error
                  body:
                    application/json:
                      type: Error
          get:
            description: |
              Returns a list of all members in User Groups that are based on the Global Group with this groupid.
            displayName: List of all users in group.
            responses:
              200:
                description: List of users
                body:
                  application/json:
                    type: array
                    items:
                      type: User
              500:
                description: Unexpected error
                body:
                  application/json:
                    type: Error
          post:
            description: |
              Adds a user to user group.
            displayName: Add user group member.
            body:
              application/json:
                type: object
                properties:
                  backOfficeRoles?:
                    type: array
                    items:
                      type: BackOfficeRole
                  clientRoles?:
                    type: array
                    description: A list with client roles
                    items:
                      type: ClientRoles
            responses:
              200:
                description: User ID of added user
                body:
                  application/json:
                    type: UserId
              500:
                description: Unexpected error
                body:
                  application/json:
                    type: Error
        get:
          description: |
            Returns single User Group.
          displayName: Get user group
          responses:
            200:
              description: User Group.
              body:
                application/json:
                  type: UserGroup
            500:
              description: Unexpected error
              body:
                application/json:
                  type: Error
      get:
        description: |
          Returns a list of User Groups for the org unit.
        displayName: List User Groups.
        responses:
          200:
            description: List of User Groups.
            body:
              application/json:
                type: array
                items:
                  type: UserGroup
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
      post:
        description: |
          Create a User Group.
        displayName: Create a User Group.
        body:
          application/json:
            type: object
            properties:
              backOfficeRoles?:
                type: array
                items:
                  type: BackOfficeRole
              clientRoles?:
                type: array
                description: A list with client roles
                items:
                  type: ClientRoles
        responses:
          200:
            description: List of User Groups.
            body:
              application/json:
                type: array
                items:
                  type: GroupId
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
    get:
      description: |
        Returns information about the specified organization unit.
        The response includes the display name, internal and external id and client number.
      displayName: Get Organization Unit
      responses:
        200:
          description: A response with an organization unit
          body:
            application/json:
              type: OrgUnit
        404:
          description: Organization Unit not found
        500:
          description: Unexpected error
          body:
            application/json:
              type: Error
    patch:
      description: Adds an Organization Unit
      displayName: Updates an Organization Unit
      body:
        application/json:
          type: object
          properties:
            backOfficeRoles?:
              type: array
              items:
                type: BackOfficeRole
            clientRoles?:
              type: array
              description: A list with client roles
              items:
                type: ClientRoles
      responses:
        201:
          description: Organization Unit was successfully updated
        409:
          description: An organization with the same clientNumber or external id already existed.
        500:
          description: Unexpected error
          body:
            application/json:
              type: Error
  get:
    description: |
      The orgunits endpoint returns information about the available organization units (orgunits).
      The response includes the display name, internal and external id and client number.
    displayName: Organization Units
    responses:
      200:
        description: A response with organization units
        body:
          application/json:
            type: OrgUnits
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
  post:
    description: Adds an Organization Unit
    displayName: Adds an Organization Unit
    body:
      application/json:
        type: object
        properties:
          backOfficeRoles?:
            type: array
            items:
              type: BackOfficeRole
          clientRoles?:
            type: array
            description: A list with client roles
            items:
              type: ClientRoles
    responses:
      200:
        description: Organization Unit was successfully added
        body:
          application/json:
            type: AddOrganizationUnitResponse
      409:
        description: An organization with the same clientNumber or external id already existed.
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
/users:
  /{userid}:
    uriParameters:
      userid:
        type: string
        description: A user id
        displayName: userid
    /pic?key={APIKEY}:
      uriParameters:
        APIKEY:
          type: string
          displayName: APIKEY
      get:
        description: |
          Returns a thumbnail picture of the user. This can either be a selected picture or an auto generated image. This method doesn't require a full sign in. The api key is sufficient.
          The image is square and is likely, but not necessary, to be in 128x128 PNG format. However the format will always be either PNG, JPEG or GIF.
        displayName: User profile picture
        responses:
          200:
            description: An image. Check the Content-Type header to determine which type the returned image have
          302:
            description: A redirect to the profile
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
    /projectParticipations:
      get:
        description: |
          Returns information about the projects the user is a participant in. Only the projects that the current token have access to will be listed.
        displayName: Returns information about the projects the user is a participant in.
        responses:
          200:
            description: Project participation info
            body:
              application/json:
                type: UserParticipationInfo
          500:
            description: Unexpected error
            body:
              application/json:
                type: Error
    get:
      description: |
        Returns information about a user
      displayName: User information
      responses:
        200:
          description: User information
          body:
            application/json:
              type: User
        500:
          description: Unexpected error
          body:
            application/json:
              type: Error
    patch:
      description: Updates a user. All values that have a key defined in the input will be set. So if a value should not be updated omit it totally from the input, otherwise it will be unset.
      displayName: Updates user information
      body:
        application/json:
          type: object
          properties:
            backOfficeRoles?:
              type: array
              items:
                type: BackOfficeRole
            clientRoles?:
              type: array
              description: A list with client roles
              items:
                type: ClientRoles
      responses:
        201:
          description: User was successfully updated
        409:
          description: A user with the same primary email already existed.
        500:
          description: Unexpected error
          body:
            application/json:
              type: Error
  get:
    description: Lists all users. Only api callers that have full access can call this method.
    displayName: Lists all users
    queryParameters:
      limit?:
        type: integer
        description: The maximum number of users to return
        displayName: limit
        default: 5000
      offset?:
        type: integer
        description: The offset to start listing users from
        displayName: offset
        default: 0
    responses:
      200:
        description: List with users
        headers:
          X-Limit?:
            type: integer
            description: The limit that was used
          X-More?:
            type: boolean
            description: Indicates if there are more users available
          X-Offset?:
            type: integer
            description: The offset that was used
          X-Size?:
            type: integer
            description: The number of users returned
        body:
          application/json:
            type: array
            items:
              type: UserWithPermissions
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
  post:
    description: Adds a user. No two users can have the same email address. Email is saved WITH case but compared regardless of case. Email can be changed for a user assuming it doesn't cause a conflict.
    displayName: Adds a user
    body:
      application/json:
        type: object
        properties:
          backOfficeRoles?:
            type: array
            items:
              type: BackOfficeRole
          clientRoles?:
            type: array
            description: A list with client roles
            items:
              type: ClientRoles
    responses:
      200:
        description: User was successfully added
        body:
          application/json:
            type: AddUserResponse
      409:
        description: A user with the same primary email already existed.
        body:
          application/json:
            type: AddUserResponse
      500:
        description: Unexpected error
        body:
          application/json:
            type: Error
