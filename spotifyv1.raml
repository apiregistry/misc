#%RAML 1.0
title: Spotify
version: v1
baseUri: api.spotify.com/v1
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  oauth_2_0_implicit:
    type: OAuth 2.0
    description: |
      Spotify supports OAuth 2.0 for authenticating all API requests.
    settings:
      authorizationGrants:
      - implicit
      authorizationUri: https://accounts.spotify.com/authorize
      accessTokenUri: https://accounts.spotify.com/authorize
      scopes:
      - playlist-modify-private
      - playlist-modify-public
      - playlist-read-collaborative
      - playlist-read-private
      - user-follow-modify
      - user-follow-read
      - user-library-modify
      - user-library-read
      - user-read-birthdate
      - user-read-email
      - user-read-private
  oauth_2_0_accessCode:
    type: OAuth 2.0
    description: |
      Spotify supports OAuth 2.0 for authenticating all API requests.
    settings:
      authorizationGrants:
      - authorization_code
      authorizationUri: https://accounts.spotify.com/authorize
      accessTokenUri: https://accounts.spotify.com/api/token
      scopes:
      - playlist-modify-private
      - playlist-modify-public
      - playlist-read-collaborative
      - playlist-read-private
      - user-follow-modify
      - user-follow-read
      - user-library-modify
      - user-library-read
      - user-read-birthdate
      - user-read-email
      - user-read-private
types:
  album:
    type: object
    properties:
      album_type?:
        type: string
        description: 'The type of the album: one of ''album'', ''single'', or ''compilation''.'
      artists?:
        type: array
        description: The artists of the album. Each artist object includes a link in href to more detailed information about the artist.
        items:
          type: artist
      available_markets?:
        type: array
        description: 'The markets in which the album is available: ISO 3166-1 alpha-2
          country codes. Note that an album is considered available in a market when
          at least 1 of its tracks is available in that market.'
        items:
          type: string
      copyrights?:
        type: array
        description: The copyright statements of the album.
        items:
          type: object
          properties:
            text?:
              type: string
              description: The copyright text for this album.
            type?:
              type: string
              description: 'The type of copyright: C = the copyright, P = the sound
                recording (performance) copyright.'
      external_ids?:
        type: object
        properties:
          //:
            type: string
            description: 'The identifier type, for example: ''isrc'' - International
              Standard Recording Code, ''ean'' - International Article Number, ''upc''
              - Universal Product Code'
        description: Known external IDs for this album.
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this album.
      genres?:
        type: array
        description: 'A list of the genres used to classify the album. For example:
          ''Prog Rock'', ''Post-Grunge''. (If not yet classified, the array is empty.)'
        items:
          type: string
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the album.
      id?:
        type: string
        description: The Spotify ID for the album.
      images?:
        type: array
        description: The cover art for the album in various sizes, widest first.
        items:
          type: image
      name?:
        type: string
        description: The name of the album.
      popularity?:
        type: integer
        description: The popularity of the album. The value will be between 0 and 100, with 100 being the most popular. The popularity is calculated from the popularity of the album's individual tracks.
      release_date?:
        type: string
        description: The date the album was first released, for example '1981-12-15'. Depending on the precision, it might be shown as '1981' or '1981-12'.
      release_date_precision?:
        type: string
        description: 'The precision with which release_date value is known: ''year'',
          ''month'', or ''day''.'
      tracks?:
        type: track-simple-page
      type?:
        type: string
        description: 'The object type: ''album''.'
      uri?:
        type: string
        description: The Spotify URI for the album.
  album-simple:
    type: object
    properties:
      album_type?:
        type: string
        description: 'The type of the album: one of ''album'', ''single'', or ''compilation''.'
      available_markets?:
        type: array
        description: 'The markets in which the album is available: ISO 3166-1 alpha-2
          country codes. Note that an album is considered available in a market when
          at least 1 of its tracks is available in that market.'
        items:
          type: string
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this album.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the album.
      id?:
        type: string
        description: The Spotify ID for the album.
      images?:
        type: array
        description: The cover art for the album in various sizes, widest first.
        items:
          type: image
      name?:
        type: string
        description: The name of the album.
      type?:
        type: string
        description: 'The object type: ''album''.'
      uri?:
        type: string
        description: The Spotify URI for the album.
  album-simple-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: album-simple
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  album-track-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: track-simple
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  artist:
    type: object
    properties:
      external_urls?:
        type: object
        properties:
          //:
            type: string
        description: Known external URLs for this artist.
      followers?:
        type: followers
      genres?:
        type: array
        description: 'A list of the genres the artist is associated with. For example:
          ''Prog Rock'', ''Post-Grunge''. (If not yet classified, the array is empty.)'
        items:
          type: string
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the artist.
      id?:
        type: string
        description: The Spotify ID for the artist.
      images?:
        type: array
        description: Images of the artist in various sizes, widest first.
        items:
          type: image
      name?:
        type: string
        description: The name of the artist.
      popularity?:
        type: integer
        description: The popularity of the artist. The value will be between 0 and 100, with 100 being the most popular. The artist's popularity is calculated from the popularity of all the artist's tracks.
      type?:
        type: string
        description: 'The object type: ''artist'''
      uri?:
        type: string
        description: The Spotify URI for the artist.
  artist-simple:
    type: object
    properties:
      external_urls?:
        type: object
        properties:
          //:
            type: string
        description: Known external URLs for this artist.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the artist.
      id?:
        type: string
        description: The Spotify ID for the artist.
      name?:
        type: string
        description: The name of the artist.
      type?:
        type: string
        description: 'The object type: ''artist'''
      uri?:
        type: string
        description: The Spotify URI for the artist.
  category:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning full details of the category.
      icons?:
        type: array
        items:
          type: image
      id?:
        type: string
        description: The Spotify category ID of the category.
      name?:
        type: string
        description: The name of the category.
  category-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: category
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  current-user-profile:
    type: object
    properties:
      birthdate?:
        type: string
        description: The user's date-of-birth. This field is only available when the current user has granted access to the user-read-birthdate scope.
      country?:
        type: string
        description: The country of the user, as set in the user's account profile. An ISO 3166-1 alpha-2 country code. This field is only available when the current user has granted access to the user-read-private scope.
      displayName?:
        type: string
        description: The name displayed on the user's profile.
      email?:
        type: string
        description: The user's email address, as entered by the user when creating their account. This email address is unverified; there is no proof that it actually belongs to the user. This field is only available when the current user has granted access to the user-read-email scope.
      external_urls?:
        type: object
        properties:
          //:
            type: string
        description: Known external URLs for this user.
      followers?:
        type: followers
      href?:
        type: string
        description: A link to the Web API endpoint for this user.
      id?:
        type: string
        description: The Spotify ID for this user.
      product?:
        type: string
        description: 'The user''s Spotify subscription level: ''premium'', ''free'',
          etc. (The subscription level ''open'' can be considered the same as ''free''.)
          This field is only available when the current user has granted access to
          the user-read-private scope.'
      type?:
        type: string
        description: 'The object type: ''user'''
      uri?:
        type: string
        description: The Spotify URI for the user.
  featured-playlists:
    type: object
    properties:
      message?:
        type: string
        description: A sentence describing the context for the featured playlists.
      playlists?:
        type: playlist-simple-page
  followers:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the followers; null if not available.
      total?:
        type: integer
        description: The total number of followers.
    description: Information about the followers of the artist.
  image:
    type: object
    properties:
      height?:
        type: integer
        description: 'The image height in pixels. If unknown: null or not returned.'
      url?:
        type: string
        description: The source URL of the image.
      width?:
        type: integer
        description: 'The image width in pixels. If unknown: null or not returned.'
  playlist:
    type: object
    properties:
      collaborative?:
        type: boolean
        description: True if the owner allows other users to modify the playlist.
      description?:
        type: string
        description: The playlist description. Only returned for modified, verified playlists, otherwise null.
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this album.
      followers?:
        type: object
        properties:
          total?:
            type: integer
            description: The total number of followers.
          href?:
            type: string
            description: A link to the Web API endpoint providing full details of the followers; null if not available.
        description: Information about the followers of the playlist.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the playlist.
      id?:
        type: string
        description: The Spotify ID of the playlist.
      images?:
        type: array
        description: The cover art for the album in various sizes, widest first.
        items:
          type: image
      name?:
        type: string
        description: The name of the playlist.
      owner?:
        type: user-profile
      public?:
        type: boolean
        description: 'The playlist''s public/private status: true the playlist is
          public, false the playlist is private, null the playlist status is not relevant.
          For more about public/private status, see Working with Playlists.'
      snapshot_id?:
        type: string
        description: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version
      tracks?:
        type: playlist-track-page
      type?:
        type: string
        description: 'The object type: ''playlist''.'
      uri?:
        type: string
        description: Spotify URI of the playlist.
  playlist-simple:
    type: object
    properties:
      collaborative?:
        type: boolean
        description: True if the owner allows other users to modify the playlist.
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this album.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the playlist.
      id?:
        type: string
        description: The Spotify ID of the playlist.
      images?:
        type: array
        description: The cover art for the album in various sizes, widest first.
        items:
          type: image
      name?:
        type: string
        description: The name of the playlist.
      owner?:
        type: user-profile
      public?:
        type: boolean
        description: 'The playlist''s public/private status: true the playlist is
          public, false the playlist is private, null the playlist status is not relevant.
          For more about public/private status, see Working with Playlists.'
      snapshot_id?:
        type: string
        description: The version identifier for the current playlist. Can be supplied in other requests to target a specific playlist version
      tracks?:
        type: object
        properties:
          total?:
            type: integer
            description: The total number of tracks available to return.
          href?:
            type: string
            description: A link to the Web API endpoint returning the full result of the request.
      type?:
        type: string
        description: 'The object type: ''playlist''.'
      uri?:
        type: string
        description: Spotify URI of the playlist.
  playlist-simple-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: playlist-simple
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  playlist-snapshot:
    type: object
    properties:
      snapshot_id?:
        type: string
        description: The version identifier for the modified playlist. Can be supplied in other requests to target a specific playlist version.
  playlist-track:
    type: object
    properties:
      added_at?:
        type: string
        description: The date and time the track was added in ISO 8601 format. Note that some very old playlists may return null in this field.
      added_by?:
        type: user-profile
      is_local?:
        type: boolean
        description: Whether this track is a [local file](https://developer.spotify.com/web-api/local-files-spotify-playlists/) or not.
      track?:
        type: track
  playlist-track-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: playlist-track
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  saved-track:
    type: object
    properties:
      added_at?:
        type: string
        description: The date and time the track was added in ISO 8601 format. Note that some very old playlists may return null in this field.
      track?:
        type: track
  saved-track-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: saved-track
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  search:
    type: object
    properties:
      albums?:
        type: object
        properties:
          next?:
            type: string
            description: URL to the next page of items. (null if none)
          total?:
            type: integer
            description: The total number of items available to return.
          offset?:
            type: integer
            description: The offset of the items returned (as set in the query or by default).
          previous?:
            type: string
            description: URL to the previous page of items. (null if none)
          limit?:
            type: integer
            description: The maximum number of items in the response (as set in the query or by default).
          href?:
            type: string
            description: A link to the Web API endpoint returning the full result of the request.
          items?:
            type: array
            description: The requested data.
            items:
              type: album-simple
        description: Present if the type of search includes 'album'.
      artists?:
        type: object
        properties:
          next?:
            type: string
            description: URL to the next page of items. (null if none)
          total?:
            type: integer
            description: The total number of items available to return.
          offset?:
            type: integer
            description: The offset of the items returned (as set in the query or by default).
          previous?:
            type: string
            description: URL to the previous page of items. (null if none)
          limit?:
            type: integer
            description: The maximum number of items in the response (as set in the query or by default).
          href?:
            type: string
            description: A link to the Web API endpoint returning the full result of the request.
          items?:
            type: array
            description: The requested data.
            items:
              type: artist
        description: Present if the type of search includes 'artist'.
      tracks?:
        type: object
        properties:
          next?:
            type: string
            description: URL to the next page of items. (null if none)
          total?:
            type: integer
            description: The total number of items available to return.
          offset?:
            type: integer
            description: The offset of the items returned (as set in the query or by default).
          previous?:
            type: string
            description: URL to the previous page of items. (null if none)
          limit?:
            type: integer
            description: The maximum number of items in the response (as set in the query or by default).
          href?:
            type: string
            description: A link to the Web API endpoint returning the full result of the request.
          items?:
            type: array
            description: The requested data.
            items:
              type: track
        description: Present if the type of search includes 'track'.
  track:
    type: object
    properties:
      album?:
        type: album-simple
      artists?:
        type: array
        description: The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
        items:
          type: artist-simple
      available_markets?:
        type: array
        description: 'A list of the countries in which the track can be played, identified
          by their ISO 3166-1 alpha-2 code. '
        items:
          type: string
      disc_number?:
        type: integer
        description: The disc number (usually 1 unless the album consists of more than one disc).
      duration_ms?:
        type: integer
        description: The track length in milliseconds.
      explicit?:
        type: boolean
        description: Whether or not the track has explicit lyrics (true = yes it does; false = no it does not OR unknown).
      external_ids?:
        type: object
        properties:
          //:
            type: string
            description: 'The identifier type, for example: ''isrc'' - International
              Standard Recording Code, ''ean'' - International Article Number, ''upc''
              - Universal Product Code'
        description: Known external IDs for the track.
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this track.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the track.
      id?:
        type: string
        description: The Spotify ID for the track.
      is_playable?:
        type: boolean
        description: Part of the response when Track Relinking is applied. If true, the track is playable in the given market. Otherwise false.
      linked_from?:
        type: object
        properties:
          href?:
            type: string
            description: A link to the Web API endpoint providing full details of the track.
          id?:
            type: string
            description: The Spotify ID for the track.
          type?:
            type: string
            description: 'The object type: ''track''.'
          external_urls?:
            type: object
            properties:
              //:
                type: string
                description: 'The type of the URL, for example: ''spotify'' - The
                  Spotify URL for the object.'
            description: Known external URLs for this track.
          uri?:
            type: string
            description: The Spotify URI for the track.
        description: Part of the response when Track Relinking is applied, and the requested track has been replaced with different track. The track in the linked_from object contains information about the originally requested track.
      name?:
        type: string
        description: The name of the track.
      preview_url?:
        type: string
        description: A URL to a 30 second preview (MP3 format) of the track.
      track_number?:
        type: integer
        description: The number of the track. If an album has several discs, the track number is the number on the specified disc.
      type?:
        type: string
        description: 'The object type: ''track''.'
      uri?:
        type: string
        description: The Spotify URI for the track.
  track-simple:
    type: object
    properties:
      artists?:
        type: array
        description: The artists who performed the track. Each artist object includes a link in href to more detailed information about the artist.
        items:
          type: artist-simple
      available_markets?:
        type: array
        description: 'A list of the countries in which the track can be played, identified
          by their ISO 3166-1 alpha-2 code. '
        items:
          type: string
      disc_number?:
        type: integer
        description: The disc number (usually 1 unless the album consists of more than one disc).
      duration_ms?:
        type: integer
        description: The track length in milliseconds.
      explicit?:
        type: boolean
        description: Whether or not the track has explicit lyrics (true = yes it does; false = no it does not OR unknown).
      external_urls?:
        type: object
        properties:
          //:
            type: string
            description: 'The type of the URL, for example: ''spotify'' - The Spotify
              URL for the object.'
        description: Known external URLs for this track.
      href?:
        type: string
        description: A link to the Web API endpoint providing full details of the track.
      id?:
        type: string
        description: The Spotify ID for the track.
      is_playable?:
        type: boolean
        description: Part of the response when Track Relinking is applied. If true, the track is playable in the given market. Otherwise false.
      linked_from?:
        type: object
        properties:
          href?:
            type: string
            description: A link to the Web API endpoint providing full details of the track.
          id?:
            type: string
            description: The Spotify ID for the track.
          type?:
            type: string
            description: 'The object type: ''track''.'
          external_urls?:
            type: object
            properties:
              //:
                type: string
                description: 'The type of the URL, for example: ''spotify'' - The
                  Spotify URL for the object.'
            description: Known external URLs for this track.
          uri?:
            type: string
            description: The Spotify URI for the track.
        description: Part of the response when Track Relinking is applied, and the requested track has been replaced with different track. The track in the linked_from object contains information about the originally requested track.
      name?:
        type: string
        description: The name of the track.
      preview_url?:
        type: string
        description: A URL to a 30 second preview (MP3 format) of the track.
      track_number?:
        type: integer
        description: The number of the track. If an album has several discs, the track number is the number on the specified disc.
      type?:
        type: string
        description: 'The object type: ''track''.'
      uri?:
        type: string
        description: The Spotify URI for the track.
  track-simple-page:
    type: object
    properties:
      href?:
        type: string
        description: A link to the Web API endpoint returning the full result of the request.
      items?:
        type: array
        description: The requested data.
        items:
          type: track-simple
      limit?:
        type: integer
        description: The maximum number of items in the response (as set in the query or by default).
      next?:
        type: string
        description: URL to the next page of items. (null if none)
      offset?:
        type: integer
        description: The offset of the items returned (as set in the query or by default).
      previous?:
        type: string
        description: URL to the previous page of items. (null if none)
      total?:
        type: integer
        description: The total number of items available to return.
  user-followed:
    type: object
    properties:
      artists?:
        type: object
        properties:
          cursor?:
            type: object
            properties:
              after?:
                type: string
                description: The cursor to use as key to find the next page of items.
            description: The cursors used to find the next set of items.
          next?:
            type: string
            description: URL to the next page of items. (null if none)
          total?:
            type: integer
            description: The total number of items available to return.
          limit?:
            type: integer
            description: The maximum number of items in the response (as set in the query or by default).
          href?:
            type: string
            description: A link to the Web API endpoint returning the full result of the request.
          items?:
            type: array
            description: The requested data.
            items:
              type: artist
        description: Present if the type of followe items is 'artist'.
  user-profile:
    type: object
    properties:
      displayName?:
        type: string
        description: The name displayed on the user's profile.
      external_urls?:
        type: object
        properties:
          //:
            type: string
        description: Known external URLs for this user.
      followers?:
        type: followers
      href?:
        type: string
        description: A link to the Web API endpoint for this user.
      id?:
        type: string
        description: The Spotify ID for this user.
      type?:
        type: string
        description: 'The object type: ''user'''
      uri?:
        type: string
        description: The Spotify URI for the user.
/albums:
  /{id}:
    uriParameters:
      id:
        type: string
        description: The Spotify ID for the album
        displayName: id
    /tracks:
      get:
        description: |
          [Get an Album's Tracks](https://developer.spotify.com/web-api/get-albums-tracks/)
        queryParameters:
          limit?:
            type: integer
            description: The maximum number of items to return
            displayName: limit
            default: 20
            minimum: 0
            maximum: 50
          offset?:
            type: integer
            description: The index of the first item to return
            displayName: offset
            default: 0
          market?:
            type: string
            description: The market (an ISO 3166-1 alpha-2 country code)
            displayName: market
        responses:
          200:
            description: OK
            body:
              application/json:
                type: track-simple-page
    get:
      description: |
        [Get an Album](https://developer.spotify.com/web-api/get-album/)
      queryParameters:
        market?:
          type: string
          description: The market (an ISO 3166-1 alpha-2 country code)
          displayName: market
      responses:
        200:
          description: OK
          body:
            application/json:
              type: album
  get:
    description: |
      [Get Several Albums](https://developer.spotify.com/web-api/get-several-albums/)
    queryParameters:
      ids:
        type: string
        description: A comma-separated list of IDs
        displayName: ids
      market?:
        type: string
        description: The market (an ISO 3166-1 alpha-2 country code)
        displayName: market
    responses:
      200:
        description: OK
        body:
          application/json:
            type: object
            properties:
              albums?:
                type: array
                items:
                  type: album
/artists:
  /{id}:
    uriParameters:
      id:
        type: string
        description: The Spotify ID for the artist
        displayName: id
    /albums:
      get:
        description: |
          [Get an Artist's Albums](https://developer.spotify.com/web-api/get-artists-albums/)
        queryParameters:
          limit?:
            type: integer
            description: The maximum number of items to return
            displayName: limit
            default: 20
            minimum: 0
            maximum: 50
          offset?:
            type: integer
            description: The index of the first item to return
            displayName: offset
            default: 0
          album_type?:
            type: string
            description: Filter by album types
            displayName: album_type
          market?:
            type: string
            description: The market (an ISO 3166-1 alpha-2 country code)
            displayName: market
        responses:
          200:
            description: OK
            body:
              application/json:
                type: album-simple-page
    /related-artists:
      get:
        description: |
          [Get an Artist's Related Artists](https://developer.spotify.com/web-api/get-related-artists/)
        responses:
          200:
            description: OK
            body:
              application/json:
                type: object
                properties:
                  artists?:
                    type: array
                    items:
                      type: artist
    /top-tracks:
      get:
        description: |
          [Get an Artist's Top Tracks](https://developer.spotify.com/web-api/get-artists-top-tracks/)
        queryParameters:
          country:
            type: string
            description: The country (an ISO 3166-1 alpha-2 country code)
            displayName: country
        responses:
          200:
            description: OK
            body:
              application/json:
                type: object
                properties:
                  tracks?:
                    type: array
                    items:
                      type: track
    get:
      description: |
        [Get an Artist](https://developer.spotify.com/web-api/get-artist/)
      responses:
        200:
          description: OK
          body:
            application/json:
              type: artist
  get:
    description: |
      [Get Several Artists](https://developer.spotify.com/web-api/get-several-artists/)
    queryParameters:
      ids:
        type: string
        description: A comma-separated list of IDs
        displayName: ids
    responses:
      200:
        description: OK
        body:
          application/json:
            type: object
            properties:
              artists?:
                type: array
                items:
                  type: artist
/browse:
  /categories:
    /{category_id}:
      uriParameters:
        category_id:
          type: string
          description: The Spotify ID of the category you wish to fetch.
          displayName: category_id
      /playlists:
        get:
          description: |
            [Get a Category's playlists](https://developer.spotify.com/web-api/get-categorys-playlists/)
          queryParameters:
            limit?:
              type: integer
              description: The maximum number of items to return
              displayName: limit
              default: 20
              minimum: 0
              maximum: 50
            offset?:
              type: integer
              description: The index of the first item to return
              displayName: offset
              default: 0
            country?:
              type: string
              description: The country (an ISO 3166-1 alpha-2 country code)
              displayName: country
          headers:
            Accept?:
              type: string
              description: It is used to set specified media type.
              displayName: Accept
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: object
                  properties:
                    playlists?:
                      type: playlist-simple-page
            429:
              description: |
                API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
      get:
        description: |
          [Get a Single Browse Category](https://developer.spotify.com/web-api/get-category/)
        queryParameters:
          country?:
            type: string
            description: The country (an ISO 3166-1 alpha-2 country code)
            displayName: country
          locale?:
            type: string
            description: |
              The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
            displayName: locale
        headers:
          Accept?:
            type: string
            description: It is used to set specified media type.
            displayName: Accept
        responses:
          200:
            description: OK
            body:
              application/json:
                type: category
          429:
            description: |
              API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    get:
      description: |
        [Get a List of Browse Categories](https://developer.spotify.com/web-api/get-list-categories/)
      queryParameters:
        limit?:
          type: integer
          description: The maximum number of items to return
          displayName: limit
          default: 20
          minimum: 0
          maximum: 50
        offset?:
          type: integer
          description: The index of the first item to return
          displayName: offset
          default: 0
        country?:
          type: string
          description: The country (an ISO 3166-1 alpha-2 country code)
          displayName: country
        locale?:
          type: string
          description: |
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
          displayName: locale
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
          body:
            application/json:
              type: category-page
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /featured-playlists:
    get:
      description: |
        [Get a List of Featured Playlists](https://developer.spotify.com/web-api/get-list-featured-playlists/)
      queryParameters:
        limit?:
          type: integer
          description: The maximum number of items to return
          displayName: limit
          default: 20
          minimum: 0
          maximum: 50
        offset?:
          type: integer
          description: The index of the first item to return
          displayName: offset
          default: 0
        country?:
          type: string
          description: The country (an ISO 3166-1 alpha-2 country code)
          displayName: country
        locale?:
          type: string
          description: |
            The desired language, consisting of an ISO 639 language code and an ISO 3166-1 alpha-2 country code, joined by an underscore. For example: es_MX, meaning "Spanish (Mexico)".
          displayName: locale
        timestamp?:
          type: string
          description: |
            A timestamp in ISO 8601 format (yyyy-MM-dd'T'HH:mm:ss) with the user's local time to get results tailored to a specific date and time in the day. If not provided, it defaults to the current UTC time. Example: "2014-10-23T09:00:00" for a user whose local time is 9AM.
          displayName: timestamp
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
          body:
            application/json:
              type: featured-playlists
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  /new-releases:
    get:
      description: |
        [Get a List of New Releases](https://developer.spotify.com/web-api/get-list-new-releases/)
      queryParameters:
        limit?:
          type: integer
          description: The maximum number of items to return
          displayName: limit
          default: 20
          minimum: 0
          maximum: 50
        offset?:
          type: integer
          description: The index of the first item to return
          displayName: offset
          default: 0
        country?:
          type: string
          description: The country (an ISO 3166-1 alpha-2 country code)
          displayName: country
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
          body:
            application/json:
              type: album-simple-page
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
/me:
  /following:
    /contains:
      get:
        description: |
          [Check if Current User Follows Artists or Users](https://developer.spotify.com/web-api/check-current-user-follows/)
        queryParameters:
          type:
            type: string
            description: The type to follow.
            displayName: type
            enum:
            - artist
            - user
          ids:
            type: string
            description: A comma-separated string of the artists or users ids.
            displayName: ids
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: boolean
                  description: True if the user follows the artist/user, false otherwise
    get:
      description: |
        [Get User's Followed Artists](https://developer.spotify.com/web-api/get-followed-artists/)
      queryParameters:
        type:
          type: string
          description: The ID type, currently only artist is supported.
          displayName: type
          enum:
          - artist
        limit?:
          type: integer
          description: The maximum number of items to return
          displayName: limit
          default: 20
          minimum: 0
          maximum: 50
        after?:
          type: string
          description: The last artist ID retrieved from the previous request.
          displayName: after
      responses:
        200:
          description: OK
          body:
            application/json:
              type: user-followed
    delete:
      description: |
        [Unfollow Artists or Users](https://developer.spotify.com/web-api/unfollow-artists-users/)
      queryParameters:
        type:
          type: string
          description: The type to unfollow.
          displayName: type
          enum:
          - artist
          - user
        ids:
          type: string
          description: A comma-separated list of the artists or users ids
          displayName: ids
      responses:
        204:
          description: No Content
    put:
      description: |
        [Follow Artists or Users](https://developer.spotify.com/web-api/follow-artists-users/)
      queryParameters:
        type:
          type: string
          description: The type to follow.
          displayName: type
          enum:
          - artist
          - user
        ids:
          type: string
          description: A comma-separated list of the artists or users ids
          displayName: ids
      responses:
        204:
          description: No Content
  /tracks:
    /contains:
      get:
        description: |
          [Check Current User's Saved Tracks](https://developer.spotify.com/web-api/check-users-saved-tracks/)
        queryParameters:
          ids:
            type: string
            description: A comma-separated list of IDs
            displayName: ids
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: boolean
                  description: True if the track is in user's Your Music library, false otherwise
    get:
      description: |
        [Get Current User's Saved Tracks](https://developer.spotify.com/web-api/get-users-saved-tracks/)
      queryParameters:
        limit?:
          type: integer
          description: The maximum number of items to return
          displayName: limit
          default: 20
          minimum: 0
          maximum: 50
        offset?:
          type: integer
          description: The index of the first item to return
          displayName: offset
          default: 0
        market?:
          type: string
          description: The market (an ISO 3166-1 alpha-2 country code)
          displayName: market
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
          body:
            application/json:
              type: saved-track-page
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    delete:
      description: |
        [Remove Tracks for Current User](https://developer.spotify.com/web-api/remove-tracks-user/)
      queryParameters:
        ids:
          type: string
          description: A comma-separated list of IDs
          displayName: ids
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    put:
      description: |
        [Save Tracks for Current User](https://developer.spotify.com/web-api/save-tracks-user/)
      queryParameters:
        ids:
          type: string
          description: A comma-separated list of IDs
          displayName: ids
      headers:
        Accept?:
          type: string
          description: It is used to set specified media type.
          displayName: Accept
      responses:
        200:
          description: OK
        429:
          description: |
            API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
  get:
    description: |
      [Get Current User's Profile](https://developer.spotify.com/web-api/get-current-users-profile/)
    responses:
      200:
        description: OK
        body:
          application/json:
            type: current-user-profile
/search:
  get:
    description: |
      [Search for an Item](https://developer.spotify.com/web-api/search-item/)
    queryParameters:
      limit?:
        type: integer
        description: The maximum number of items to return
        displayName: limit
        default: 20
        minimum: 0
        maximum: 50
      offset?:
        type: integer
        description: The index of the first item to return
        displayName: offset
        default: 0
      q:
        type: string
        description: 'The search query''s keywords (and optional field filters). The
          search is not case-sensitive: ''roadhouse'' will match ''Roadhouse'', ''roadHouse'',
          etc. Keywords will be matched in any order unless surrounded by quotes,
          thus q=roadhouse&20blues will match both ''Blues Roadhouse'' and ''Roadhouse
          of the Blues''. Quotation marks can be used to limit the match to a phrase:
          q=roadhouse&20blues will match ''My Roadhouse Blues'' but not ''Roadhouse
          of the Blues''. By default, results are returned when a match is found in
          any field of the target object type. Searches can be made more specific
          by specifying an album, artist or track field filter. For example q=album:gold%20artist:abba&type=album
          will search for albums with the text ''gold'' in the album name and the
          text ''abba'' in an artist name. Other possible field filters, depending
          on object types being searched, include year, genre, upc, and isrc. For
          example, q=damian%20genre:reggae-pop&type=artist. The asterisk (*) character
          can, with some limitations, be used as a wildcard (maximum: 2 per query).
          It will match a variable number of non-white-space characters. It cannot
          be used in a quoted phrase, in a field filter, or as the first character
          of the keyword string. Searching for playlists will return results matching
          the playlist''s name and/or description.'
        displayName: q
      type:
        type: string
        description: A comma-separated list of item types to search across. Search results will include hits from all the specified item types; for example q=name:abacab&type=album,track will return both albums and tracks with "abacab" in their name.
        displayName: type
      market?:
        type: string
        description: The market (an ISO 3166-1 alpha-2 country code).  If given, only items with content playable in that market will be returned.
        displayName: market
    responses:
      200:
        description: OK
        body:
          application/json:
            type: search
/tracks:
  /{id}:
    uriParameters:
      id:
        type: string
        displayName: id
    get:
      description: |
        [Get a Track](https://developer.spotify.com/web-api/get-track/)
      queryParameters:
        market?:
          type: string
          description: The market (an ISO 3166-1 alpha-2 country code)
          displayName: market
      responses:
        200:
          description: OK
          body:
            application/json:
              type: track
  get:
    description: |
      [Get Several Tracks](https://developer.spotify.com/web-api/get-several-tracks/)
    queryParameters:
      ids:
        type: string
        description: A comma-separated list of IDs
        displayName: ids
      market?:
        type: string
        description: The market (an ISO 3166-1 alpha-2 country code)
        displayName: market
    responses:
      200:
        description: OK
        body:
          application/json:
            type: object
            properties:
              tracks?:
                type: array
                items:
                  type: track
/users:
  /{user_id}:
    uriParameters:
      user_id:
        type: string
        description: The user's Spotify user ID.
        displayName: user_id
    /playlists:
      /{playlist_id}:
        uriParameters:
          playlist_id:
            type: string
            description: The Spotify playlist ID.
            displayName: playlist_id
        /followers:
          /contains:
            get:
              description: |
                [Check if Users Follow a Playlist](https://developer.spotify.com/web-api/check-user-following-playlist/)
              queryParameters:
                ids:
                  type: string
                  description: A comma-separated list of users ids
                  displayName: ids
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: array
                      items:
                        type: boolean
                        description: True if the user follows the playlist, false otherwise
          delete:
            description: |
              [Unfollow a Playlist](https://developer.spotify.com/web-api/unfollow-playlist/)
            responses:
              200:
                description: OK
          put:
            description: |
              [Follow a Playlist](https://developer.spotify.com/web-api/follow-playlist/)
            body:
              application/json:
                type: object
                properties:
                  name:
                    type: string
                  public?:
                    type: boolean
            responses:
              200:
                description: OK
        /tracks:
          get:
            description: |
              [Get a Playlist's Tracks](https://developer.spotify.com/web-api/get-playlists-tracks/)
            queryParameters:
              limit?:
                type: integer
                description: The maximum number of items to return
                displayName: limit
                default: 20
                minimum: 0
                maximum: 50
              offset?:
                type: integer
                description: The index of the first item to return
                displayName: offset
                default: 0
              fields?:
                type: string
                description: A comma-separated list of fields to filter query
                displayName: fields
              market?:
                type: string
                description: The market (an ISO 3166-1 alpha-2 country code)
                displayName: market
            headers:
              Accept?:
                type: string
                description: It is used to set specified media type.
                displayName: Accept
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: playlist-track-page
              429:
                description: |
                  API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
          delete:
            description: |
              [Remove Tracks from a Playlist](https://developer.spotify.com/web-api/remove-tracks-playlist/)
            headers:
              Accept?:
                type: string
                description: It is used to set specified media type.
                displayName: Accept
            body:
              application/json:
                type: object
                properties:
                  name:
                    type: string
                  public?:
                    type: boolean
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: playlist-snapshot
              429:
                description: |
                  API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
          post:
            description: |
              [Add Tracks to a Playlist](https://developer.spotify.com/web-api/add-tracks-to-playlist/)
            queryParameters:
              position?:
                type: integer
                description: The position to insert the tracks, a zero-based index
                displayName: position
              uris:
                type: string
                description: A comma-separated list of Spotify track URIs to add. A maximum of 100 tracks can be added in one request.
                displayName: uris
            headers:
              Accept?:
                type: string
                description: It is used to set specified media type.
                displayName: Accept
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: playlist-snapshot
              429:
                description: |
                  API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
          put:
            description: |
              [Reorder or replace a Playlist's Tracks](https://developer.spotify.com/web-api/reorder-playlists-tracks/)
            headers:
              Accept?:
                type: string
                description: It is used to set specified media type.
                displayName: Accept
            body:
              application/json:
                type: object
                properties:
                  name:
                    type: string
                  public?:
                    type: boolean
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: playlist-snapshot
              429:
                description: |
                  API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
        get:
          description: |
            [Get a Playlist](https://developer.spotify.com/web-api/get-playlist/)
          queryParameters:
            fields?:
              type: string
              description: A comma-separated list of fields to filter query
              displayName: fields
            market?:
              type: string
              description: The market (an ISO 3166-1 alpha-2 country code)
              displayName: market
          headers:
            Accept?:
              type: string
              description: It is used to set specified media type.
              displayName: Accept
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: playlist
            429:
              description: |
                API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
        put:
          description: |
            [Change a Playlist's Details](https://developer.spotify.com/web-api/change-playlist-details/)
          headers:
            Accept?:
              type: string
              description: It is used to set specified media type.
              displayName: Accept
          body:
            application/json:
              type: object
              properties:
                name:
                  type: string
                public?:
                  type: boolean
          responses:
            200:
              description: OK
            429:
              description: |
                API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
      get:
        description: |
          [Get a List of a User's Playlists](https://developer.spotify.com/web-api/get-list-users-playlists/)
        queryParameters:
          limit?:
            type: integer
            description: The maximum number of items to return
            displayName: limit
            default: 20
            minimum: 0
            maximum: 50
          offset?:
            type: integer
            description: The index of the first item to return
            displayName: offset
            default: 0
        headers:
          Accept?:
            type: string
            description: It is used to set specified media type.
            displayName: Accept
        responses:
          200:
            description: OK
            body:
              application/json:
                type: playlist-simple-page
          429:
            description: |
              API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
      post:
        description: |
          [Create a Playlist](https://developer.spotify.com/web-api/create-playlist/)
        headers:
          Accept?:
            type: string
            description: It is used to set specified media type.
            displayName: Accept
        body:
          application/json:
            type: object
            properties:
              name:
                type: string
              public?:
                type: boolean
        responses:
          201:
            description: Created
            body:
              application/json:
                type: playlist
          429:
            description: |
              API rate limit exceeded. See http://developer.spotify.com/web-api/user-guide/#rate-limiting for details.
    get:
      description: |
        [Get a User's Profile](https://developer.spotify.com/web-api/get-users-profile/)
      responses:
        200:
          description: OK
          body:
            application/json:
              type: user-profile
