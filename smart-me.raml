#%RAML 1.0
title: smart-me
version: v1
baseUri: smart-me.com:443
description: With the smart-me REST API you get Access to all your devices in the smart-me Cloud and you can add your own devices. So it's a easy way to add the smart-me Cloud support to your Hardware or Software Product.
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  basic:
    type: Basic Authentication
    description: Basic HTTP Authentication
types:
  AccessTokenToPut:
    type: object
    properties:
      CardId?:
        type: integer
        description: The ID of the Card
        format: int64
      UserId?:
        type: integer
        description: "The ID of the User. The credentials provided must have permission\
          \ to edit the user.\r\n            If no ID is provided, the user in the\
          \ credentials is taken."
        format: int64
    description: Container Class for the Put action of an Access Token
  CustomDeviceToPost:
    type: object
    properties:
      Id?:
        type: string
        description: The ID of the device
      Name?:
        type: string
        description: The Name of the Device
      Serial?:
        type: integer
        description: The Serial number
        format: int64
      ValueDate?:
        type: datetime
        description: The Date of the Value (in UTC). If this is null the Server Time is used.
      Values?:
        type: array
        description: The Values of the custom Device
        items:
          type: CustomDeviceValues
    description: Device object with all the data
  CustomDeviceValues:
    type: object
    properties:
      Name?:
        type: string
        description: The Name of the Value.
      Value?:
        type: number
        description: The Value
        format: double
    description: Container Class for the Custom Device Values
  Device:
    type: object
    properties:
      ActivePower?:
        type: number
        description: The Actvie Power or current flow rate
        format: double
      ActivePowerL1?:
        type: number
        description: The Actvie Power Phase L1
        format: double
      ActivePowerL2?:
        type: number
        description: The Actvie Power Phase L2
        format: double
      ActivePowerL3?:
        type: number
        description: The Actvie Power Phase L3
        format: double
      ActiveTariff?:
        type: integer
        description: The Number of the Active Tariff
        format: int32
      ActviePowerUnit?:
        type: string
        description: The Unit of the Active Power Value
      CounterReading?:
        type: number
        description: The Meter Counter Reading (Total Energy used)
        format: double
      CounterReadingT1?:
        type: number
        description: The Meter Counter Reading Tariff 1
        format: double
      CounterReadingT2?:
        type: number
        description: The Meter Counter Reading Tariff 2
        format: double
      CounterReadingT3?:
        type: number
        description: The Meter Counter Reading Tariff 3
        format: double
      CounterReadingT4?:
        type: number
        description: The Meter Counter Reading Tariff 4
        format: double
      CounterReadingUnit?:
        type: string
        description: The Unit of the Counter Reading
      Current?:
        type: number
        description: The Current (in A)
        format: double
      CurrentL1?:
        type: number
        description: The Current Phase L1 (in A)
        format: double
      CurrentL2?:
        type: number
        description: The Current Phase L2 (in A)
        format: double
      CurrentL3?:
        type: number
        description: The Current Phase L3 (in A)
        format: double
      DeviceEnergyType?:
        type: string
        description: The Energy Type of this device
        enum:
        - MeterTypeUnknown
        - MeterTypeElectricity
        - MeterTypeWater
        - MeterTypeGas
        - MeterTypeHeat
        - MeterTypeHCA
        - MeterTypeAllMeters
        - MeterTypeTemperature
        - MeterTypeMBusGateway
        - MeterTypeRS485Gateway
        - MeterTypeCustomDevice
        - MeterTypeCompressedAir
      FamilyType?:
        type: string
        description: The Family Type of the device.
        enum:
        - MeterFamilyTypeUnknown
        - MeterFamilyTypeSmartMeConnectV1
        - MeterFamiliyTypeSmartMeMeter
        - MeterFamiliyTypeSmartMeMeterWithSwitch
        - MeterFamilyTypeMBusGatewayV1
        - MeterFamilyTypeRS485GatewayV1
        - MeterFamilyTypeKamstrupModule
        - MeterFamilyTypeSmartMe3PhaseMeter80A
        - MeterFamilyTypeSmartMe3PhaseMeter32A
        - MeterFamilyTypeSmartMe3PhaseMeterTransformer
        - MeterFamilyTypeLandisGyrModule
        - MeterFamilyTypeRestApiMeter
        - MeterFamilyTypeVirtualMeter
      Id?:
        type: string
        description: The ID of the device
      Name?:
        type: string
        description: The Name of the Device
      PowerFactor?:
        type: number
        description: 'The Power Factor (cos phi). Range: 0 - 1'
        format: double
      PowerFactorL1?:
        type: number
        description: 'The Power Factor (cos phi) Phase L1. Range: 0 - 1'
        format: double
      PowerFactorL2?:
        type: number
        description: 'The Power Factor (cos phi) Phase L2. Range: 0 - 1'
        format: double
      PowerFactorL3?:
        type: number
        description: 'The Power Factor (cos phi) Phase L3. Range: 0 - 1'
        format: double
      Serial?:
        type: integer
        description: The Serial number
        format: int64
      SwitchOn?:
        type: boolean
        description: Flag if the Switch is on on this device.
      Temperature?:
        type: number
        description: The Temperature (in degree celsius)
        format: double
      ValueDate?:
        type: datetime
        description: Time of last successful connection the the smart-me Cloud.
      Voltage?:
        type: number
        description: The Voltage (in V)
        format: double
      VoltageL1?:
        type: number
        description: The Voltage Phase L1 (in V)
        format: double
      VoltageL2?:
        type: number
        description: The Voltage Phase L2 (in V)
        format: double
      VoltageL3?:
        type: number
        description: The Voltage Phase L3 (in V)
        format: double
    description: Container Class for the Web API
  DeviceInPast:
    type: object
    properties:
      CounterReading?:
        type: number
        description: The Meter Counter Reading (Total Energy used)
        format: double
      CounterReadingExport?:
        type: number
        description: The Meter Counter Reading Export
        format: double
      CounterReadingExportT1?:
        type: number
        description: The Meter Counter Reading Export Tariff 1
        format: double
      CounterReadingExportT2?:
        type: number
        description: The Meter Counter Reading Export Tariff 2
        format: double
      CounterReadingExportT3?:
        type: number
        description: The Meter Counter Reading Export Tariff 3
        format: double
      CounterReadingExportT4?:
        type: number
        description: The Meter Counter Reading Export Tariff 4
        format: double
      CounterReadingImport?:
        type: number
        description: The Meter Counter Reading Import
        format: double
      CounterReadingImportT1?:
        type: number
        description: The Meter Counter Reading Import Tariff 1
        format: double
      CounterReadingImportT2?:
        type: number
        description: The Meter Counter Reading Import Tariff 2
        format: double
      CounterReadingImportT3?:
        type: number
        description: The Meter Counter Reading Import Tariff 3
        format: double
      CounterReadingImportT4?:
        type: number
        description: The Meter Counter Reading Import Tariff 4
        format: double
      CounterReadingT1?:
        type: number
        description: The Meter Counter Reading Tariff 1
        format: double
      CounterReadingT2?:
        type: number
        description: The Meter Counter Reading Tariff 2
        format: double
      CounterReadingT3?:
        type: number
        description: The Meter Counter Reading Tariff 3
        format: double
      CounterReadingT4?:
        type: number
        description: The Meter Counter Reading Tariff 4
        format: double
      CounterReadingUnit?:
        type: string
        description: The Unit of the Counter Reading
      Date?:
        type: datetime
        description: The Date of the Values
      Id?:
        type: string
        description: The ID of the device
      Serial?:
        type: integer
        description: The Serial number
        format: int64
    description: Container Class for the Web API. Conatinas the MeterValues in the Past
  DeviceToPost:
    type: object
    properties:
      ActivePower?:
        type: number
        description: The Active Power or current flow rate. In kW or m3/h
        format: double
      CounterReading?:
        type: number
        description: The Meter Counter Reading (Total Energy used) in kWh or m3.
        format: double
      CounterReadingT1?:
        type: number
        description: The Meter Counter Reading Tariff 1 in kWh or m3.
        format: double
      CounterReadingT2?:
        type: number
        description: The Meter Counter Reading Tariff 2 in kWh or m3.
        format: double
      DeviceEnergyType?:
        type: string
        description: The Energy Type of this device
        enum:
        - MeterTypeUnknown
        - MeterTypeElectricity
        - MeterTypeWater
        - MeterTypeGas
        - MeterTypeHeat
        - MeterTypeHCA
        - MeterTypeAllMeters
        - MeterTypeTemperature
        - MeterTypeMBusGateway
        - MeterTypeRS485Gateway
        - MeterTypeCustomDevice
        - MeterTypeCompressedAir
      Id?:
        type: string
        description: The ID of the device
      Name?:
        type: string
        description: The Name of the Device
      Serial?:
        type: integer
        description: The Serial number
        format: int64
      Temperature?:
        type: number
        description: The Temperature (in degree celsius)
        format: double
      ValueDate?:
        type: datetime
        description: The Date of the Value (in UTC). If this is null the Server Time is used.
    description: Device object with all the data
  InputInformation:
    type: object
    properties:
      Name?:
        type: string
        description: The Name of the Input
      Number?:
        type: integer
        description: The Number of this Input. Use this as ID to switch it on or off.
        format: int32
    description: Informations about the Inputs of a Meter or Folder
  MBusData:
    type: object
    properties:
      Date?:
        type: datetime
        description: The Date of the M-BUS Telegram Readout (in UTC). If this is null the Server Time is used.
      Telegram?:
        type: string
        description: "The M-BUS Telegram as Hex string. \r\n            Example: 68\
          \ 1F 1F 68 08 02 72 78 56 34 12 24 40 01 07 55 00 00 00 03 13 15 31 00 DA\
          \ 02 3B 13 01 8B 60 04 37 18 02 18 16"
    description: The M-BUS Telegram
  MeterFolderInformation:
    type: object
    properties:
      FirmwareVersion?:
        type: integer
        description: The Firmware Version of a Meter
        format: int32
      HardwareVersion?:
        type: integer
        description: The Hardware Version of a Meter.
        format: int32
      InputInformations?:
        type: array
        description: Informations about the available Inputs
        items:
          type: InputInformation
      IsFolder?:
        type: boolean
        description: Flag if it's a Folder or a Meter
      Name?:
        type: string
        description: Name of the Meter or Folder
      OutputInformations?:
        type: array
        description: Informations about the available Outputs
        items:
          type: OutputInformation
    description: Container Class for the Web API
  MeterFolderInformationToPost:
    type: object
    properties:
      Id?:
        type: string
        description: The ID of the device or folder
      Name?:
        type: string
        description: Name of the Meter or Folder
    description: Container for a Meter or Folder Information to Post
  Object:
    type: object
  OutputInformation:
    type: object
    properties:
      Name?:
        type: string
        description: The Name of the Output
      Number?:
        type: integer
        description: The Number of this Output. Use this as ID to switch it on or off.
        format: int32
    description: Informations about the Outputs of a Meter or Folder
  User:
    type: object
    properties:
      ChildUsers?:
        type: array
        description: The Users created by this users.
        items:
          type: User
      Email?:
        type: string
        description: The EMail Address of the User
      Id?:
        type: integer
        description: The ID of the User
        format: int64
      IsAdmin?:
        type: boolean
        description: Flag if this User is an Admin User
      Username?:
        type: string
        description: The Username of the User
    description: Container Class for the Web API
  VMeterToActivate:
    type: object
    properties:
      SerialNumber?:
        type: string
        description: The Serialnumber of the Meter to activate.
    description: The Meter to activate
  VMeterToDeactivate:
    type: object
    properties:
      ID?:
        type: string
        description: The ID of the Virtual meter to deactivate
    description: The Meter to activate
/api:
  /AccessToken:
    put:
      description: Creates a Access Token to write on a Card (e.g. NFC)
      displayName: Creates a Access Token to write on a Card (e.g. NFC)
      body:
        application/json: AccessTokenToPut
        text/json: AccessTokenToPut
        application/xml: AccessTokenToPut
        text/xml: AccessTokenToPut
        application/x-www-form-urlencoded: AccessTokenToPut
      responses:
        200:
          description: OK
          body:
            application/json:
              type: string
            text/json:
              type: string
            application/xml:
              type: string
            text/xml:
              type: string
  /CustomDevice:
    /{id}:
      uriParameters:
        id:
          type: string
          description: The ID of the device
          displayName: id
      get:
        description: Gets a Device by it's ID
        displayName: Gets a Custom Device by it's ID
        responses:
          200:
            description: OK
            body:
              application/json:
                type: CustomDeviceToPost
              text/json:
                type: CustomDeviceToPost
              application/xml:
                type: CustomDeviceToPost
              text/xml:
                type: CustomDeviceToPost
    get:
      description: Gets all Devices
      displayName: Gets all Custom Devices
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: CustomDeviceToPost
            text/json:
              type: array
              items:
                type: CustomDeviceToPost
            application/xml:
              type: array
              items:
                type: CustomDeviceToPost
            text/xml:
              type: array
              items:
                type: CustomDeviceToPost
    post:
      description: "Creates or updates a Custom Device or updates it's values.\r\n\
        \            A Custom Device can be any device that like to add some measurement\
        \ values to the smart-me Cloud.\r\n            Only use a custom device for\
        \ all non meters.\r\n            For a new device leave the ID empty. To create\
        \ a device you have to set the DeviceEnergyType.\r\n            To update\
        \ values, add the ID of the device and the values you like to set.  (See the\
        \ Data Type Model for more Information)"
      displayName: Creates or updates a Custom Device or updates it's values.
      body:
        application/json: CustomDeviceToPost
        text/json: CustomDeviceToPost
        application/xml: CustomDeviceToPost
        text/xml: CustomDeviceToPost
        application/x-www-form-urlencoded: CustomDeviceToPost
      responses:
        200:
          description: OK
          body:
            application/json:
              type: CustomDeviceToPost
            text/json:
              type: CustomDeviceToPost
            application/xml:
              type: CustomDeviceToPost
            text/xml:
              type: CustomDeviceToPost
        401:
          description: Unauthorized
  /DeviceBySerial:
    get:
      description: Gets a Device by it's Serial Number. The Serial is the part before the "-".
      displayName: Gets a Device by it's Serial Number. The Serial is the part before the "-".
      queryParameters:
        serial:
          type: integer
          description: The Serial Number of the device
          displayName: serial
          format: int64
      responses:
        200:
          description: OK
          body:
            application/json:
              type: Device
            text/json:
              type: Device
            application/xml:
              type: Device
            text/xml:
              type: Device
  /Devices:
    /{id}:
      uriParameters:
        id:
          type: string
          description: The ID of the device
          displayName: id
      get:
        description: Gets a Device by it's ID
        displayName: Gets a Device by it's ID
        responses:
          200:
            description: OK
            body:
              application/json:
                type: Device
              text/json:
                type: Device
              application/xml:
                type: Device
              text/xml:
                type: Device
      put:
        description: Updates the On/Off Switch on a device
        displayName: Updates the On/Off Switch on a device.
        queryParameters:
          switchState:
            type: boolean
            description: The new state of the switch
            displayName: switchState
        responses:
          200:
            description: OK
            body:
              application/json:
                type: Object
              text/json:
                type: Object
              application/xml:
                type: Object
              text/xml:
                type: Object
          401:
            description: Unauthorized
          405:
            description: MethodNotAllowed
    get:
      description: Gets all Devices
      displayName: Gets all Devices
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: Device
            text/json:
              type: array
              items:
                type: Device
            application/xml:
              type: array
              items:
                type: Device
            text/xml:
              type: array
              items:
                type: Device
    post:
      description: "Creates or updates a Device or updates it's values. \r\n     \
        \       For a new device leave the ID empty. To create a device you have to\
        \ set the DeviceEnergyType.\r\n            To update values, add the ID of\
        \ the device and the values you like to set.  (See the Data Type Model for\
        \ more Information)"
      displayName: Creates or updates a Device or updates it's values.
      body:
        application/json: DeviceToPost
        text/json: DeviceToPost
        application/xml: DeviceToPost
        text/xml: DeviceToPost
        application/x-www-form-urlencoded: DeviceToPost
      responses:
        200:
          description: OK
          body:
            application/json:
              type: DeviceToPost
            text/json:
              type: DeviceToPost
            application/xml:
              type: DeviceToPost
            text/xml:
              type: DeviceToPost
        401:
          description: Unauthorized
  /DevicesByEnergy:
    get:
      description: Gets all Devices for an Energy Type
      displayName: Gets all Devices for an Energy Type
      queryParameters:
        meterEnergyType:
          type: string
          displayName: meterEnergyType
          enum:
          - MeterTypeUnknown
          - MeterTypeElectricity
          - MeterTypeWater
          - MeterTypeGas
          - MeterTypeHeat
          - MeterTypeHCA
          - MeterTypeAllMeters
          - MeterTypeTemperature
          - MeterTypeMBusGateway
          - MeterTypeRS485Gateway
          - MeterTypeCustomDevice
          - MeterTypeCompressedAir
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: Device
            text/json:
              type: array
              items:
                type: Device
            application/xml:
              type: array
              items:
                type: Device
            text/xml:
              type: array
              items:
                type: Device
  /DevicesBySubType:
    get:
      description: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      displayName: Gets all Devices by it's Sub Type (e.g. E-Charging Station)
      queryParameters:
        meterSubType:
          type: string
          displayName: meterSubType
          enum:
          - MeterSubTypeUnknown
          - MeterSubTypeCold
          - MeterSubTypeHeat
          - MeterSubTypeChargingStation
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: Device
            text/json:
              type: array
              items:
                type: Device
            application/xml:
              type: array
              items:
                type: Device
            text/xml:
              type: array
              items:
                type: Device
  /MBus:
    post:
      description: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\
        \n            Just send us the M-BUS Telegram (RSP_UD) and we will do the\
        \ Rest."
      displayName: "M-BUS API: Adds data of a M-BUS Meter to the smart-me Cloud.\r\
        \n            Just send us the M-BUS Telegram (RSP_UD) and we will do the\
        \ Rest."
      body:
        application/json: MBusData
        text/json: MBusData
        application/xml: MBusData
        text/xml: MBusData
        application/x-www-form-urlencoded: MBusData
      responses:
        200:
          description: OK
          body:
            application/json:
              type: Object
            text/json:
              type: Object
            application/xml:
              type: Object
            text/xml:
              type: Object
        400:
          description: BadRequest
        401:
          description: Unauthorized
  /MeterFolderInformation:
    /{id}:
      uriParameters:
        id:
          type: string
          displayName: id
      get:
        description: 'Beta: Gets the General Information for a Meter or a Folder'
        displayName: 'Beta: Gets the General Information for a Meter or a Folder'
        responses:
          200:
            description: OK
            body:
              application/json:
                type: MeterFolderInformation
              text/json:
                type: MeterFolderInformation
              application/xml:
                type: MeterFolderInformation
              text/xml:
                type: MeterFolderInformation
    post:
      description: Sets the Name of a Meter or a Folder
      displayName: Sets the Name of a Meter or a Folder
      body:
        application/json: MeterFolderInformationToPost
        text/json: MeterFolderInformationToPost
        application/xml: MeterFolderInformationToPost
        text/xml: MeterFolderInformationToPost
        application/x-www-form-urlencoded: MeterFolderInformationToPost
      responses:
        204:
          description: No Content
  /MeterValues:
    /{id}:
      uriParameters:
        id:
          type: string
          displayName: id
      get:
        description: Gets the Values for a Meter at a given Date. The first Value found before the given Date is returned.
        displayName: "Gets the Values for a Meter at a given Date. \r\n          \
          \  The first Value found before the given Date is returned."
        queryParameters:
          date:
            type: datetime
            displayName: date
        responses:
          200:
            description: OK
            body:
              application/json:
                type: DeviceInPast
              text/json:
                type: DeviceInPast
              application/xml:
                type: DeviceInPast
              text/xml:
                type: DeviceInPast
  /User:
    get:
      description: Gets the informations for the user.
      displayName: Gets the informations for the user.
      responses:
        200:
          description: OK
          body:
            application/json:
              type: User
            text/json:
              type: User
            application/xml:
              type: User
            text/xml:
              type: User
  /VirtualMeterActive:
    get:
      description: 'Beta: Gets all active virtual meters.'
      displayName: 'Beta: Gets all active virtual meters'
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: Device
            text/json:
              type: array
              items:
                type: Device
            application/xml:
              type: array
              items:
                type: Device
            text/xml:
              type: array
              items:
                type: Device
    post:
      description: 'Beta: Virtual Meter API: Activates a Meter and add the Consumption
        to a Virtual Meter assosiated with the User.'
      displayName: 'Beta: Virtual Meter API: Activates a Meter and add the Consumption
        to a Virtual Meter assosiated with the User.'
      body:
        application/json: VMeterToActivate
        text/json: VMeterToActivate
        application/xml: VMeterToActivate
        text/xml: VMeterToActivate
        application/x-www-form-urlencoded: VMeterToActivate
      responses:
        200:
          description: OK
          body:
            application/json:
              type: Device
            text/json:
              type: Device
            application/xml:
              type: Device
            text/xml:
              type: Device
        400:
          description: BadRequest
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /VirtualMeterDeactivate:
    post:
      description: 'Beta: Virtual Meter API: Deactivates a Virtual Meter.'
      displayName: 'Beta: Virtual Meter API: Deactivates a Virtual Meter.'
      body:
        application/json: VMeterToDeactivate
        text/json: VMeterToDeactivate
        application/xml: VMeterToDeactivate
        text/xml: VMeterToDeactivate
        application/x-www-form-urlencoded: VMeterToDeactivate
      responses:
        200:
          description: OK
          body:
            application/json:
              type: Object
            text/json:
              type: Object
            application/xml:
              type: Object
            text/xml:
              type: Object
        400:
          description: BadRequest
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /VirtualMeters:
    get:
      description: 'Beta: Gets all Meters available to activate as a Virtual Meter.'
      displayName: 'Beta: Gets all Meters available to activate as a Virtual Meter.'
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: Device
            text/json:
              type: array
              items:
                type: Device
            application/xml:
              type: array
              items:
                type: Device
            text/xml:
              type: array
              items:
                type: Device
