#%RAML 1.0
title: MotaWord
version: alpha-0.1.0
baseUri: api.motaword.com/
description: Use MotaWord API to post and track your translation projects.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  client_credentials:
    type: OAuth 2.0
    description: OAuth2 authentication, Client Credentials flow.
    settings:
      authorizationGrants:
      - password
      authorizationUri: null
      accessTokenUri: /token
types:
  Account:
    type: object
    properties:
      billing?:
        type: object
        properties:
          zip?:
            type: string
          country?:
            type: string
          city?:
            type: string
          street?:
            type: string
          name?:
            type: string
          state?:
            type: string
      created_at?:
        type: integer
      id?:
        type: integer
      links?:
        type: object
        properties:
          projects?:
            type: object
            properties:
              href?:
                type: string
          self?:
            type: object
            properties:
              href?:
                type: string
      name?:
        type: string
      stats?:
        type: object
        properties:
          started_projects?:
            type: integer
          total_projects?:
            type: integer
  Activity:
    type: object
    properties:
      activity_at?:
        type: datetime
      id?:
        type: integer
      links?:
        type: ActivityLinks
      source_text?:
        type: string
        description: Source text
      target_text?:
        type: string
        description: Target text of the activity, which is actually the translation of the source text.
      translator?:
        type: integer
        description: Unique identifier of the translator/proofreader of this activity.
      type?:
        type: string
        description: Currently there are two available activity types; 'translated', 'proofread'.
        enum:
        - translated
        - proofread
  ActivityLinks:
    type: LinksMeta
  ActivityList:
    type: object
    properties:
      activities?:
        type: array
        items:
          type: Activity
      meta?:
        type: PagingMeta
  Comment:
    type: object
    properties:
      comment?:
        type: string
        description: Comment text.
      commented_at?:
        type: datetime
      id?:
        type: integer
      links?:
        type: CommentLinks
  CommentLinks:
    type: LinksMeta
  CommentList:
    type: object
    properties:
      activities?:
        type: array
        items:
          type: Comment
      meta?:
        type: PagingMeta
  Document:
    type: object
    properties:
      id?:
        type: integer
      links?:
        type: DocumentLinks
      name?:
        type: string
      uploaded_at?:
        type: datetime
      word_count?:
        type: integer
  DocumentLinks:
    type: LinksMeta
  DocumentList:
    type: object
    properties:
      documents?:
        type: array
        items:
          type: Document
      meta?:
        type: PagingMeta
  Error:
    type: object
    properties:
      code?:
        type: string
      help?:
        type: string
      http_code?:
        type: integer
        format: int32
      message?:
        type: string
  Formats:
    type: object
    properties:
      documents?:
        type: object
        properties:
          extensions?:
            type: array
            items:
              type: string
          mimes?:
            type: array
            items:
              type: string
      glossaries?:
        type: object
        properties:
          extensions?:
            type: array
            items:
              type: string
      styleguides?:
        type: object
        properties:
          extensions?:
            type: array
            items:
              type: string
  Glossary:
    type: object
    properties:
      id?:
        type: integer
      links?:
        type: DocumentLinks
      name?:
        type: string
      uploaded_at?:
        type: datetime
  GlossaryList:
    type: object
    properties:
      glossaries?:
        type: array
        items:
          type: Glossary
      meta?:
        type: PagingMeta
  Language:
    type: object
    properties:
      code?:
        type: string
      name?:
        type: string
  LanguageProgress:
    type: object
    properties:
      languageCode?:
        type: ProgressSub
  LinksMeta:
    type: object
    properties:
      self?:
        type: object
        properties:
          href?:
            type: string
  Package:
    type: object
    properties:
      key?:
        type: string
        description: This is the unique package tracking key. You can use this key to track the current progress of the translation packaging with /package/check call.
      status?:
        type: string
        description: The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.
        enum:
        - started
        - packaging
        - completed
  PackageStatus:
    type: object
    properties:
      status?:
        type: string
        description: The status of translation packaging. Possible values are 'started', 'packaging', 'completed'. When completed, you can make a /download call to download the last translation package.
        enum:
        - started
        - packaging
        - completed
  PagingLinksMeta:
    type: LinksMeta
  PagingMeta:
    type: object
    properties:
      paging?:
        type: object
        properties:
          per_page?:
            type: integer
          total_count?:
            type: integer
          links?:
            type: PagingLinksMeta
          page?:
            type: integer
  Progress:
    type: ProgressSub
  ProgressLink:
    type: LinksMeta
  ProgressSub:
    type: object
    properties:
      proofreading?:
        type: integer
      total?:
        type: integer
      translation?:
        type: integer
  Project:
    type: object
    properties:
      callback_url?:
        type: string
        description: Callback URL to notify when project status changed.
      created_at?:
        type: datetime
      custom?:
        type: object
        description: Custom data provided while creating a new project.
      delivery_at?:
        type: datetime
      errors?:
        type: array
        description: A list of errors. Visible when creating a project and uploading your documents at the same time, in case of multiple errors.
        items:
          type: Error
      id?:
        type: integer
      links?:
        type: ProjectLinks
      price?:
        type: object
        properties:
          amount?:
            type: number
            format: float
          currency?:
            type: string
      source_language?:
        type: string
      status?:
        type: string
        enum:
        - pending
        - started
        - completed
      target_languages?:
        type: array
        items:
          type: string
      valid_until?:
        type: datetime
        description: Available only if status is `pending`
      word_count?:
        type: integer
  ProjectLinks:
    type: LinksMeta
  ProjectList:
    type: object
    properties:
      meta?:
        type: PagingMeta
      projects?:
        type: array
        items:
          type: Project
  StyleGuide:
    type: object
    properties:
      id?:
        type: integer
      links?:
        type: DocumentLinks
      name?:
        type: string
      uploaded_at?:
        type: datetime
  StyleGuideList:
    type: object
    properties:
      meta?:
        type: PagingMeta
      styleguides?:
        type: array
        items:
          type: StyleGuide
  Token:
    type: object
    properties:
      access_token?:
        type: string
      expires_in?:
        type: integer
      scope?:
        type: string
      token_type?:
        type: string
/:
  get:
    description: |
      The root endpoint will provide you a JSON Swagger definition.
    displayName: Available endpoints
    responses:
      200:
        description: JSON representation of our Swagger API definition.
        body:
          application/json:
            type: object
      500:
        description: Authentication error
        body:
          application/json:
            type: Error
/formats:
  get:
    description: |
      Get a list of supported formats for documents, style guides and extensions.
    displayName: Get a list of supported formats
    responses:
      200:
        description: A list of supported formats
        body:
          application/json:
            type: object
/glossary:
  get:
    description: Download your corporate account's global glossary. This endpoint is available only for corporate account customers.
    displayName: Download the global glossary.
    responses:
      200:
        description: Glossary file streamed.
        body:
          application/json:
            type: string
      404:
        description: GlossaryNotFound
        body:
          application/json:
            type: Error
  post:
    description: Update your corporate account's global glossary. This endpoint is available only for corporate account customers.
    displayName: Create or update the global glossary.
    responses:
      200:
        description: Success response
        body:
          application/json:
            type: object
            properties:
              status?:
                type: string
      400:
        description: FileTooLarge FileTooSmall NoFileUploaded
        body:
          application/json:
            type: Error
      405:
        description: UnsupportedGlossaryFormat
        body:
          application/json:
            type: Error
/languages:
  get:
    description: Get a list of supported languages
    displayName: Get a list of supported languages
    responses:
      200:
        description: A list of supported languages
        body:
          application/json:
            type: array
            items:
              type: Language
/me:
  get:
    displayName: Get your account information and summary.
    responses:
      200:
        description: Account summary
        body:
          application/json:
            type: Account
      404:
        description: UserNotFound
        body:
          application/json:
            type: Error
/projects:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: Project ID
        displayName: id
        format: int64
    /download:
      /{language}:
        uriParameters:
          language:
            type: string
            description: Language code. You can download the translation of only a specific language.
            displayName: language
        post:
          description: Download only the translation package of this language. You must have given a /package call beforehand and wait until the packaging status is 'completed'.
          displayName: Download the latest translation package.
          responses:
            200:
              description: Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.
              body:
                application/json:
                  type: string
            402:
              description: ProjectNotLaunchedYet
              body:
                application/json:
                  type: Error
            404:
              description: TranslationPackageNotFound
              body:
                application/json:
                  type: Error
      post:
        description: Download the latest translation package. You must have given a /package call beforehand and wait until the packaging status is 'completed'.
        displayName: Download the latest translation package.
        responses:
          200:
            description: Translation package streamed. The streamed file is always a ZIP file, except when the API client is configured for Drupal and Wordpress.
            body:
              application/json:
                type: string
          402:
            description: ProjectNotLaunchedYet
            body:
              application/json:
                type: Error
          404:
            description: TranslationPackageNotFound
            body:
              application/json:
                type: Error
    /launch:
      post:
        displayName: Launch your translation project
        responses:
          200:
            description: Project launched successfully
            body:
              application/json:
                type: object
                properties:
                  status?:
                    type: string
          400:
            description: MissingPaymentCode MissingCorporateAccount MissingPaymentMethod
            body:
              application/json:
                type: Error
          401:
            description: CorporateAccountNotAllowedForApiPayment ApiClientMissingPaymentInformation
            body:
              application/json:
                type: Error
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
    /package:
      /check:
        get:
          description: This request will tell you the current progress of the translation packaging. You will use the 'key' provided by the /package call.
          displayName: Track the status of translation packaging.
          queryParameters:
            key?:
              type: string
              description: This is the package tracking key provided in the response of a /package call.
              displayName: key
          responses:
            200:
              description: Current status of packaging process.
              body:
                application/json:
                  type: PackageStatus
            402:
              description: ProjectNotLaunchedYet
              body:
                application/json:
                  type: Error
            404:
              description: PackagingStatusMissing
              body:
                application/json:
                  type: Error
      /{language}:
        uriParameters:
          language:
            type: string
            description: Language code. You can package the translation of only a specific language.
            displayName: language
        post:
          description: Package the translation project, make it ready to be downloaded.
          displayName: Package the translation of a specific target language to be downloaded.
          queryParameters:
            async?:
              type: integer
              description: If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
              displayName: async
              default: 0
          responses:
            200:
              description: Packaging status and tracking code. With the package key, you can track the progress of translation packaging.
              body:
                application/json:
                  type: Package
            201:
              description: Packaged translation streamed. Status code is actually 200, not 201.
              body:
                application/json:
                  type: string
            402:
              description: ProjectNotLaunchedYet
              body:
                application/json:
                  type: Error
            404:
              description: TranslationPackageNotFound
              body:
                application/json:
                  type: Error
      post:
        description: Package the translation project, make it ready to be downloaded.
        displayName: Package the translation of all languages to be downloaded.
        queryParameters:
          async?:
            type: integer
            description: If you want to package and download the translation synchronously, mark this parameter as '0'. It will package the translation and then return the packaged file in the response, identical to /download call after an asynchronous /package call.
            displayName: async
            default: 0
        responses:
          200:
            description: Packaged translation streamed.
            body:
              application/json:
                type: string
          402:
            description: ProjectNotLaunchedYet
            body:
              application/json:
                type: Error
          404:
            description: TranslationPackageNotFound
            body:
              application/json:
                type: Error
    /progress:
      get:
        description: Get the progress of an already launched project.
        displayName: Get project progress
        responses:
          200:
            description: Progress information
            body:
              application/json:
                type: Progress
          402:
            description: ProjectNotLaunchedYet
            body:
              application/json:
                type: Error
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
    get:
      description: Get single project
      displayName: Get single project
      responses:
        200:
          description: Project model
          body:
            application/json:
              type: Project
        404:
          description: ProjectNotFound
          body:
            application/json:
              type: Error
    put:
      description: Update project language pairs
      displayName: Update project language pairs
      responses:
        200:
          description: Updated project
          body:
            application/json:
              type: object
        404:
          description: ProjectNotFound
          body:
            application/json:
              type: Error
        406:
          description: UnsupportedLanguage
          body:
            application/json:
              type: Error
  /{projectId}:
    uriParameters:
      projectId:
        type: integer
        description: Project ID
        displayName: projectId
        format: int64
    /activities:
      /{activityId}:
        uriParameters:
          activityId:
            type: integer
            description: Activity ID
            displayName: activityId
            format: int64
        /comments:
          get:
            description: Get a list of comments belonging to this activity.
            displayName: Get a list of comments belonging to this activity.
            responses:
              200:
                description: A list of Comment models
                body:
                  application/json:
                    type: CommentList
              404:
                description: ProjectActivityNotFound
                body:
                  application/json:
                    type: Error
        get:
          description: Get a single realtime activity.
          displayName: Get a single realtime activity.
          responses:
            200:
              description: Activity model
              body:
                application/json:
                  type: Activity
            404:
              description: ProjectActivityNotFound
              body:
                application/json:
                  type: Error
        post:
          description: Submit a comment to an activity.
          displayName: Submit a comment to an activity.
          responses:
            200:
              description: Comment model
              body:
                application/json:
                  type: Comment
            404:
              description: ProjectActivityNotFound
              body:
                application/json:
                  type: Error
      get:
        description: Get a list of realtime activities on the project, such as translation suggestion and translation approval.
        displayName: Get a list of realtime activities.
        queryParameters:
          page?:
            type: integer
            displayName: page
            default: 1
          per_page?:
            type: integer
            displayName: per_page
            default: 10
        responses:
          200:
            description: A list of activity models
            body:
              application/json:
                type: ActivityList
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
    /comments:
      get:
        description: Get a list of activity comments throughout the whole project.
        displayName: Get a list of activity comments throughout the whole project.
        queryParameters:
          page?:
            type: integer
            displayName: page
            default: 1
          per_page?:
            type: integer
            displayName: per_page
            default: 10
        responses:
          200:
            description: A list of Comment models
            body:
              application/json:
                type: CommentList
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
    /documents:
      /{documentId}:
        uriParameters:
          documentId:
            type: integer
            description: Document ID
            displayName: documentId
            format: int64
        /download:
          get:
            description: Download a document
            displayName: Download a document
            responses:
              200:
                description: Document streamed
                body:
                  application/json:
                    type: string
              404:
                description: DocumentNotFound
                body:
                  application/json:
                    type: Error
        get:
          description: Get single document
          displayName: Get single document
          responses:
            200:
              description: Document model
              body:
                application/json:
                  type: Document
            404:
              description: DocumentNotFound
              body:
                application/json:
                  type: Error
        delete:
          description: Delete the document
          displayName: Delete the document
          responses:
            200:
              description: Document deleted successfully
              body:
                application/json:
                  type: object
                  properties:
                    status?:
                      type: string
            404:
              description: DocumentNotFound
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
        put:
          description: Update the document. File name and contents will replaced with the new one.
          displayName: Update the document.
          responses:
            200:
              description: Updated document model
              body:
                application/json:
                  type: Document
            400:
              description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
              body:
                application/json:
                  type: Error
            404:
              description: DocumentNotFound
              body:
                application/json:
                  type: Error
            405:
              description: UnsupportedDocumentFormat
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
      get:
        description: Get a list of documents
        displayName: Get a list of documents
        responses:
          200:
            description: A list of document models
            body:
              application/json:
                type: DocumentList
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
      post:
        description: Upload a new document
        displayName: Upload a new document
        responses:
          200:
            description: A list of successfully added new documents.
            body:
              application/json:
                type: Document
          400:
            description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
            body:
              application/json:
                type: Error
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
          405:
            description: UnsupportedDocumentFormat
            body:
              application/json:
                type: Error
          409:
            description: ProjectAlreadyStarted
            body:
              application/json:
                type: Error
    /glossaries:
      /{glossaryId}:
        uriParameters:
          glossaryId:
            type: integer
            description: Glossary ID
            displayName: glossaryId
            format: int64
        /download:
          get:
            description: Download a glossary
            displayName: Download a glossary
            responses:
              200:
                description: Glossary streamed
                body:
                  application/json:
                    type: string
              404:
                description: GlossaryNotFound
                body:
                  application/json:
                    type: Error
        get:
          description: Get single glossary
          displayName: Get single glossary
          responses:
            200:
              description: Glossary model
              body:
                application/json:
                  type: Glossary
            404:
              description: GlossaryNotFound
              body:
                application/json:
                  type: Error
        delete:
          description: Delete the glossary
          displayName: Delete the glossary
          responses:
            200:
              description: Glossary deleted successfully
              body:
                application/json:
                  type: object
                  properties:
                    status?:
                      type: string
            404:
              description: GlossaryNotFound
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
        put:
          description: Update the glossary. File name and contents will replaced with the new one.
          displayName: Update the glossary.
          responses:
            200:
              description: Updated glossary model
              body:
                application/json:
                  type: Glossary
            400:
              description: FileTooLarge
              body:
                application/json:
                  type: Error
            404:
              description: GlossaryNotFound
              body:
                application/json:
                  type: Error
            405:
              description: UnsupportedGlossaryFormat
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
      get:
        description: Get a list of glossaries
        displayName: Get a list of glossaries
        responses:
          200:
            description: A list of glossary models
            body:
              application/json:
                type: GlossaryList
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
      post:
        description: Upload a new glossary
        displayName: Upload a new glossary
        responses:
          200:
            description: Newly created glossary model.
            body:
              application/json:
                type: Glossary
          400:
            description: FileTooLarge
            body:
              application/json:
                type: Error
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
          405:
            description: UnsupportedGlossaryFormat
            body:
              application/json:
                type: Error
          406:
            description: ProjectAlreadyHasGlossary
            body:
              application/json:
                type: Error
          409:
            description: ProjectAlreadyStarted
            body:
              application/json:
                type: Error
    /styleguides:
      /{styleGuideId}:
        uriParameters:
          styleGuideId:
            type: integer
            description: Style Guide ID
            displayName: styleGuideId
            format: int64
        /download:
          get:
            description: Download a style guide
            displayName: Download a style guide
            responses:
              200:
                description: Style guide streamed
                body:
                  application/json:
                    type: string
              404:
                description: StyleGuideNotFound
                body:
                  application/json:
                    type: Error
        get:
          description: Get single style guide
          displayName: Get single style guide
          responses:
            200:
              description: Style guide model
              body:
                application/json:
                  type: StyleGuide
            404:
              description: StyleGuideNotFound
              body:
                application/json:
                  type: Error
        delete:
          description: Delete the style guide
          displayName: Delete the style guide
          responses:
            200:
              description: Style guide deleted successfully
              body:
                application/json:
                  type: object
                  properties:
                    status?:
                      type: string
            404:
              description: StyleGuideNotFound
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
        put:
          description: Update the style guide. File name and contents will replaced with the new one.
          displayName: Update the style guide.
          responses:
            200:
              description: Updated style guide model
              body:
                application/json:
                  type: StyleGuide
            400:
              description: FileTooLarge
              body:
                application/json:
                  type: Error
            404:
              description: StyleGuideNotFound
              body:
                application/json:
                  type: Error
            405:
              description: UnsupportedStyleGuideFormat
              body:
                application/json:
                  type: Error
            409:
              description: ProjectAlreadyStarted
              body:
                application/json:
                  type: Error
      get:
        description: Get a list of style guides
        displayName: Get a list of style guides
        responses:
          200:
            description: A list of style guide models
            body:
              application/json:
                type: StyleGuideList
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
      post:
        description: Upload a new style guide
        displayName: Upload a new style guide
        responses:
          200:
            description: Newly created style guide model or a list of new style guide models
            body:
              application/json:
                type: StyleGuide
          400:
            description: FileTooLarge
            body:
              application/json:
                type: Error
          404:
            description: ProjectNotFound
            body:
              application/json:
                type: Error
          405:
            description: UnsupportedStyleGuideFormat
            body:
              application/json:
                type: Error
          409:
            description: ProjectAlreadyStarted
            body:
              application/json:
                type: Error
  get:
    description: Get a list of your projects
    displayName: Get a list of your projects
    queryParameters:
      page?:
        type: integer
        displayName: page
        default: 1
      per_page?:
        type: integer
        displayName: per_page
        default: 10
    responses:
      200:
        description: Project list
        body:
          application/json:
            type: object
  post:
    description: Create a new project
    displayName: Get a new quote
    responses:
      200:
        description: Newly created project
        body:
          application/json:
            type: object
      400:
        description: FileTooLarge FileTooSmall FileWasAlreadyUploaded
        body:
          application/json:
            type: Error
      405:
        description: UnsupportedDocumentFormat UnsupportedStyleGuideFormat UnsupportedGlossaryFormat
        body:
          application/json:
            type: Error
      406:
        description: UnsupportedLanguage TooManyGlossaries ProjectAlreadyHasGlossary
        body:
          application/json:
            type: Error
      500:
        description: ProjectInsertFailed
        body:
          application/json:
            type: Error
/styleguide:
  get:
    description: Download your corporate account's global style guide. This endpoint is available only for corporate account customers.
    displayName: Download the global style guide.
    responses:
      200:
        description: Style guide file streamed.
        body:
          application/json:
            type: string
      404:
        description: StyleGuideNotFound
        body:
          application/json:
            type: Error
  post:
    description: Update your corporate account's global style guide. This endpoint is available only for corporate account customers.
    displayName: Create or update the global style guide.
    responses:
      200:
        description: Success response
        body:
          application/json:
            type: object
            properties:
              status?:
                type: string
      400:
        description: FileTooLarge FileTooSmall NoFileUploaded MissingCorporateAccount
        body:
          application/json:
            type: Error
      405:
        description: UnsupportedStyleGuideFormat
        body:
          application/json:
            type: Error
/token:
  post:
    description: |
      MotaWord API is using OAuth2 procedures when authenticating or authorizing your API call. Currently, we only allow Client Credential type flow.
    displayName: Retrieve an access token to interact with the API.
    headers:
      Authorization:
        type: string
        description: HTTP Basic Authorization header.
        displayName: Authorization
    responses:
      200:
        description: Authentication response
        body:
          application/json:
            type: Token
      500:
        description: Authentication error
        body:
          application/json:
            type: Error
