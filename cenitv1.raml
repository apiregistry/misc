#%RAML 1.0
title: Cenit IO - REST API Specification
version: v1
baseUri: cenit.io/api/v1
description: |
  Cenit IO is an Open Platform for Data and Business Integration (iPaaS)
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  X-User-Access-Key:
    type: Pass Through
    describedBy:
      headers:
        X-User-Access-Key: string
  X-User-Access-Token:
    type: Pass Through
    describedBy:
      headers:
        X-User-Access-Token: string
types:
  connection:
    type: object
    properties:
      headers?:
        type: array
        items:
          type: object
          properties:
            value?:
              type: string
            key?:
              type: string
      id?:
        type: string
      key?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      parameters?:
        type: array
        items:
          type: object
          properties:
            value?:
              type: string
            key?:
              type: string
      token?:
        type: string
      url?:
        type: string
  connection_role:
    type: object
    properties:
      connection?:
        type: array
        items:
          type: connection
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      webhook?:
        type: array
        items:
          type: webhook
  data_type:
    type: object
    properties:
      id?:
        type: string
      model_schema?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      show_navigation_link?:
        type: string
      slug?:
        type: string
      title?:
        type: string
      type?:
        type: object
  flow:
    type: object
    properties:
      active?:
        type: boolean
      connection_role?:
        type: connection_role
      custom_data_type?:
        type: data_type
      event?:
        type: object
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      notify_request?:
        type: boolean
      notify_response?:
        type: boolean
      response_translator?:
        type: translator
      translator?:
        type: translator
      webhook?:
        type: webhook
  namespace:
    type: object
    properties:
      id?:
        type: string
      name?:
        type: string
      slug?:
        type: string
  observer:
    type: object
    properties:
      data_type?:
        type: data_type
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      triggers?:
        type: string
      type?:
        type: object
  scheduler:
    type: object
    properties:
      activated?:
        type: boolean
      expression?:
        type: string
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
  schema:
    type: object
    properties:
      id?:
        type: string
      namespace?:
        type: namespace
      schema?:
        type: string
      uri?:
        type: string
  translator:
    type: object
    properties:
      custom_data_type?:
        type: data_type
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      source_data_type?:
        type: data_type
      style?:
        type: string
        enum:
        - Ruby
        - Liquid
        - xslt
      target_data_type?:
        type: data_type
      transformation?:
        type: string
      type?:
        type: string
        enum:
        - Import
        - Export
        - Convert
        - Update
  webhook:
    type: object
    properties:
      headers?:
        type: array
        items:
          type: object
          properties:
            value?:
              type: string
            key?:
              type: string
      id?:
        type: string
      name?:
        type: string
      namespace?:
        type: namespace
      parameters?:
        type: array
        items:
          type: object
          properties:
            value?:
              type: string
            key?:
              type: string
      path?:
        type: string
/setup:
  /connection:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Connection ID
          displayName: id
      get:
        description: Retrieves the details of an existing connection. You need only supply the unique connection identifier that was returned upon connection creation.
        displayName: Retrieve an existing connection
        responses:
          200:
            description: OK
            body:
              application/json:
                type: connection
          404:
            description: Item not found
      delete:
        description: Permanently deletes a connection. It cannot be undone.
        displayName: Delete a connection
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of connections you've previously created. The connections are returned in sorted order, with the most recent connection appearing first.
      displayName: Returns a list of connections
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: connection
    post:
      description: Creates or updates the specified connection by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      displayName: Create or update a connection
      responses:
        200:
          description: OK
          body:
            application/json:
              type: connection
  /connection_role:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Connection role ID
          displayName: id
      get:
        description: Returns a connection role
        displayName: Return a connection role
        responses:
          200:
            description: OK
            body:
              application/json:
                type: connection_role
          404:
            description: Item not found
      delete:
        description: Deletes the specified connection role.
        displayName: Delete a connection role.
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of connection roles you've previously created. The connection roles are returned in sorted order, with the most recent connection role appearing first.
      displayName: Returns a list of connection roles
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: connection_role
    post:
      description: Creates or updates the specified connection role by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      displayName: Create or update a connection role
      responses:
        200:
          description: OK
          body:
            application/json:
              type: connection_role
  /data_type:
    /{id}:
      uriParameters:
        id:
          type: string
          description: data type ID
          displayName: id
      get:
        description: Retrieves the details of an existing data type. You need only supply the unique data  type identifier that was returned upon DataType creation.
        displayName: Retrieve a data type
        responses:
          200:
            description: OK
            body:
              application/json:
                type: data_type
          404:
            description: Item not found.
      delete:
        description: Deletes the specified data type.
        displayName: Delete a data type
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of data types you've previously created. The data types are returned in sorted order, with the most recent DataType appearing first.
      displayName: Returns a list of data types
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: data_type
    post:
      description: Creates or updates the specified data type by setting the values of the parameters passed. Any parameters not provided will be left unchanged.
      displayName: Create or update a data type
      responses:
        200:
          description: OK
          body:
            application/json:
              type: data_type
  /flow:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Flow ID
          displayName: id
      get:
        description: Retrieves the details of an existing flow. You need only supply the unique flow identifier that was returned upon flow creation.
        displayName: Retrieve an existing flow
        responses:
          200:
            description: OK
            body:
              application/json:
                type: flow
          404:
            description: Item not found.
      delete:
        description: Deletes the specified flow.
        displayName: Delete a flow.
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of flows you've previously created. The flows are returned in sorted order, with the most recent flow appearing first.
      displayName: Returns a list of flows
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: flow
    post:
      description: Creates or updates the specified flow. Any parameters not provided will be left unchanged.
      displayName: Create or update a flow
      responses:
        200:
          description: OK
          body:
            application/json:
              type: flow
  /namespace:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Namespace ID.
          displayName: id
      get:
        description: Retrieves the details of an existing namespace. You need only supply the unique webhook namespace that was returned upon namespace creation.
        displayName: Retrieve an existing namespace
        responses:
          200:
            description: OK
            body:
              application/json:
                type: namespace
          404:
            description: Item not found.
      delete:
        description: Deletes the specified namespace.
        displayName: Delete a namespace
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of namespaces you've previously created. The namespaces are returned in sorted order, with the most recent namespace appearing first.
      displayName: Returns a list of namespaces
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: namespace
    post:
      description: Creates or updates the specified namespace. Any parameters not provided will be left unchanged.
      displayName: Create or update a namespace
      responses:
        200:
          description: OK
          body:
            application/json:
              type: namespace
  /observer:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Observer ID
          displayName: id
      get:
        description: Retrieves the details of an existing event. You need only supply the unique event identifier that was returned upon event creation.
        displayName: Retrieve an existing event
        responses:
          200:
            description: OK
            body:
              application/json:
                type: observer
          404:
            description: Item not found.
      delete:
        description: Deletes the specified event observer.
        displayName: Delete an event
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of events you've previously created. The events are returned in sorted order, with the most recent event appearing first.
      displayName: Returns a list of events
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: observer
    post:
      description: Creates or updates the specified event observer. Any parameters not provided will be left unchanged.
      displayName: Create or update an event
      responses:
        200:
          description: OK
          body:
            application/json:
              type: observer
  /scheduler:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Scheduler ID
          displayName: id
      get:
        description: Retrieves the details of an existing scheduler. You need only supply the unique scheduler identifier that was returned upon scheduler creation.
        displayName: Retrieve an existing schedule
        responses:
          200:
            description: OK
            body:
              application/json:
                type: scheduler
          404:
            description: Item not found.
      delete:
        description: Deletes the specified scheduler.
        displayName: Delete an schedule
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of schedulers you've previously created. The schedulers are returned in sorted order, with the most recent scheduler appearing first.
      displayName: Returns a list of schedulers
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: scheduler
    post:
      description: Creates or updates the specified scheduler. Any parameters not provided will be left unchanged.
      displayName: Create or update an scheduler
      responses:
        200:
          description: OK
          body:
            application/json:
              type: scheduler
  /schema:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Schema ID
          displayName: id
      get:
        description: Retrieves the details of an existing schema. You need only supply the unique schema identifier that was returned upon schema creation.
        displayName: Retrieve an existing schema
        responses:
          200:
            description: OK
            body:
              application/json:
                type: schema
          404:
            description: Item not found.
      delete:
        description: Deletes the specified schema.
        displayName: Delete an schema.
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of schemas you've previously created. The schemas are returned in sorted order, with the most recent schema appearing first.
      displayName: Returns a list of schemas
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: schema
    post:
      description: Creates or updates the specified schema. Any parameters not provided will be left unchanged.
      displayName: Create or update an schema
      responses:
        200:
          description: OK
          body:
            application/json:
              type: schema
  /translator:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Translator ID.
          displayName: id
      get:
        description: Retrieves the details of an existing translator. You need only supply the unique translator identifier that was returned upon translator creation.
        displayName: Retrieve an existing translator
        responses:
          200:
            description: OK
            body:
              application/json:
                type: translator
          404:
            description: Item not found.
      delete:
        description: Deletes the specified translator.
        displayName: Delete a translator
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of translators you've previously created. The translators are returned in sorted order, with the most recent translator appearing first.
      displayName: Returns a list of translators
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: translator
    post:
      description: Creates or updates the specified translator. Any parameters not provided will be left unchanged.
      displayName: Create or update a translator
      responses:
        200:
          description: OK
          body:
            application/json:
              type: translator
  /webhook:
    /{id}:
      uriParameters:
        id:
          type: string
          description: Webhook ID.
          displayName: id
      get:
        description: Retrieves the details of an existing webhook. You need only supply the unique webhook identifier that was returned upon webhook creation.
        displayName: Retrieve an existing webhook
        responses:
          200:
            description: OK
            body:
              application/json:
                type: webhook
          404:
            description: Item not found.
      delete:
        description: Deletes the specified webhook.
        displayName: Delete a webhook
        responses:
          200:
            description: OK
          404:
            description: Item not found
    get:
      description: Returns a list of webhooks you've previously created. The webhooks are returned in sorted order, with the most recent webhook appearing first.
      displayName: Returns a list of webhooks
      responses:
        200:
          description: OK
          body:
            application/json:
              type: array
              items:
                type: webhook
    post:
      description: Creates or updates the specified webhook. Any parameters not provided will be left unchanged.
      displayName: Create or update a webhook
      responses:
        200:
          description: OK
          body:
            application/json:
              type: webhook
