#%RAML 1.0
title: Semantic
version: 2.0.0
baseUri: api.nytimes.com/svc/semantic/v2/concept
description: |
  The Semantic API complements the Articles API. With the Semantic API, you get access to the long list of people, places, organizations and other locations, entities and descriptors that make up the controlled vocabulary used as metadata by The New York Times (sometimes referred to as Times Tags and used for Times Topics pages).

  The Semantic API uses concepts which are, by definition, terms in The New York Times controlled vocabulary. Like the way facets are used in the Articles API, concepts are a good way to uncover articles of interest in The New York Times archive, and at the same time, limit the scope and number of those articles. The Semantic API maps to external semantic data resources, in a fashion consistent with the idea of linked data. The Semantic API also provides combination and relationship information to other, similar concepts in The New York Times controlled vocabulary.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  apikey:
    type: Pass Through
    describedBy:
      queryParameters:
        api-key: string
types:
  Concept:
    type: object
    properties:
      ancestors?:
        type: array
        items:
          type: ConceptRelation
      article_list?:
        type: object
        properties:
          total?:
            type: integer
          results?:
            type: array
            items:
              type: object
              properties:
                date?:
                  type: string
                type_of_material?:
                  type: string
                concepts?:
                  type: object
                  properties:
                    nytd_org?:
                      type: array
                      items:
                        type: string
                    nytd_per?:
                      type: array
                      items:
                        type: string
                    nytd_des?:
                      type: array
                      items:
                        type: string
                body?:
                  type: string
                title?:
                  type: string
                byline?:
                  type: string
                url?:
                  type: string
                document_type?:
                  type: string
      combinations?:
        type: array
        items:
          type: object
          properties:
            combination_target_concept_id?:
              type: integer
            combination_source_concept_id?:
              type: integer
            combination_source_concept_type?:
              type: string
            combination_source_concept_name?:
              type: string
            combination_target_concept_type?:
              type: string
            combination_note?:
              type: string
            combination_target_concept_name?:
              type: string
      concept_created?:
        type: string
      concept_id?:
        type: integer
      concept_name?:
        type: string
      concept_status?:
        type: string
      concept_type?:
        type: string
      concept_updated?:
        type: string
      descendants?:
        type: array
        items:
          type: ConceptRelation
      is_times_tag?:
        type: integer
      links?:
        type: array
        items:
          type: object
          properties:
            concept_name?:
              type: string
            link_type?:
              type: string
            mapping_type?:
              type: string
            concept_status?:
              type: string
            concept_id?:
              type: integer
            is_times_tag?:
              type: integer
            concept_type?:
              type: string
            link?:
              type: string
            link_id?:
              type: integer
            relation?:
              type: string
      scope_notes?:
        type: array
        items:
          type: object
          properties:
            scope_note_name?:
              type: string
            scope_note?:
              type: string
            scope_note_type?:
              type: string
      search_api_query?:
        type: string
      taxonomy?:
        type: array
        items:
          type: object
          properties:
            taxonomic_verification_status?:
              type: string
            target_concept_name?:
              type: string
            target_concept_id?:
              type: integer
            source_concept_id?:
              type: integer
            source_concept_type?:
              type: string
            target_concept_vernacular?:
              type: string
            source_concept_name?:
              type: string
            source_concept_vernacular?:
              type: string
            target_concept_type?:
              type: string
            taxonomic_relation?:
              type: string
      vernacular?:
        type: string
  ConceptRelation:
    type: object
    properties:
      concept_created?:
        type: string
      concept_id?:
        type: integer
      concept_name?:
        type: string
      concept_status?:
        type: string
      concept_type?:
        type: string
      concept_updated?:
        type: string
      is_times_tag?:
        type: integer
      vernacular?:
        type: string
/name:
  /{concept-type}:
    uriParameters:
      concept-type:
        type: string
        description: |
          The type of the concept, used for Constructing a Semantic API Request by Concept Type and Specific Concept Name. The parameter is defined as a name-value pair, as in "concept_type=[nytd_geo|nytd_per|nytd_org|nytd_des]".
        displayName: concept-type
        enum:
        - nytd_geo
        - nytd_per
        - nytd_org
        - nytd_des
    /{specific-concept}.json:
      uriParameters:
        specific-concept:
          type: string
          description: |
            The name of the concept, used for Constructing a Semantic API Request by Concept Type and Specific Concept Name. The parameter is defined in the URI path, as the element immediately preceding ".json" like with "Baseball.json".
          displayName: specific-concept
      get:
        queryParameters:
          fields?:
            type: string
            description: |
              "all" or comma-separated list of specific optional fields: pages, ticker_symbol, links, taxonomy, combinations, geocodes, article_list, scope_notes, search_api_query

              Optional fields are returned in result_set. They are briefly explained here:

              pages: A list of topic pages associated with a specific concept.
              ticker_symbol: If this concept is a publicly traded company, this field contains the ticker symbol.
              links: A list of links from this concept to external data resources.
              taxonomy: For descriptor concepts, this field returns a list of taxonomic relations to other concepts.
              combinations: For descriptor concepts, this field returns a list of the specific meanings tis concept takes on when combined with other concepts.
              geocodes: For geographic concepts, the full GIS record from geonames.
              article_list: A list of up to 10 articles associated with this concept.
              scope_notes: Scope notes contains clarifications and meaning definitions that explicate the relationship between the concept and an article.
              search_api_query: Returns the request one would need to submit to the Article Search API to obtain a list of articles annotated with this concept.
            displayName: fields
            enum:
            - all
            - pages
            - ticker_symbol
            - links
            - taxonomy
            - combinations
            - geocodes
            - article_list
            - scope_notes
            - search_api_query
          query:
            type: string
            description: Precedes the search term string. Used in a Search Query. Except for &lt;specific_concept_name&gt;, Search Query will take the required parameters listed above (&lt;concept_type&gt;, &lt;concept_uri&gt;, &lt;article_uri&gt;) as an optional_parameter in addition to the query=&lt;query_term&gt;.
            displayName: query
        responses:
          200:
            description: An array of Concepts
            body:
              application/json:
                type: object
                properties:
                  copyright?:
                    type: string
                  results?:
                    type: array
                    items:
                      type: Concept
                  num_results?:
                    type: integer
                  status?:
                    type: string
/search.json:
  get:
    queryParameters:
      query:
        type: string
        description: Precedes the search term string. Used in a Search Query. Except for &lt;specific_concept_name&gt;, Search Query will take the required parameters listed above (&lt;concept_type&gt;, &lt;concept_uri&gt;, &lt;article_uri&gt;) as an optional_parameter in addition to the query=&lt;query_term&gt;.
        displayName: query
      offset?:
        type: integer
        description: Integer value for the index count from the first concept to the last concept, sorted alphabetically. Used in a Search Query. A Search Query will return up to 10 concepts in its results.
        displayName: offset
        default: 10
      fields?:
        type: string
        description: |
          "all" or comma-separated list of specific optional fields: pages, ticker_symbol, links, taxonomy, combinations, geocodes, article_list, scope_notes, search_api_query

          Optional fields are returned in result_set. They are briefly explained here:

          pages: A list of topic pages associated with a specific concept.
          ticker_symbol: If this concept is a publicly traded company, this field contains the ticker symbol.
          links: A list of links from this concept to external data resources.
          taxonomy: For descriptor concepts, this field returns a list of taxonomic relations to other concepts.
          combinations: For descriptor concepts, this field returns a list of the specific meanings tis concept takes on when combined with other concepts.
          geocodes: For geographic concepts, the full GIS record from geonames.
          article_list: A list of up to 10 articles associated with this concept.
          scope_notes: Scope notes contains clarifications and meaning definitions that explicate the relationship between the concept and an article.
          search_api_query: Returns the request one would need to submit to the Article Search API to obtain a list of articles annotated with this concept.
        displayName: fields
        enum:
        - all
        - pages
        - ticker_symbol
        - links
        - taxonomy
        - combinations
        - geocodes
        - article_list
        - scope_notes
        - search_api_query
    responses:
      200:
        description: An array of Concepts
        body:
          application/json:
            type: object
            properties:
              copyright?:
                type: string
              results?:
                type: array
                items:
                  type: ConceptRelation
              num_results?:
                type: integer
              status?:
                type: string
