#%RAML 1.0
title: Taxamo
version: '1'
baseUri: api.taxamo.com/
description: !!binary |-
  VGF4YW1vw6LCgMKZcyBlbGVnYW50IHN1aXRlIG9mIEFQSXMgYW5kIGNvbXByZWhlbnNpdmUgcmVwb3J0aW5nIGRhc2hib2FyZCBlbmFibGVzIGRpZ2l0YWwgbWVyY2hhbnRzIHRvIGVhc2lseSBjb21wbHkgd2l0aCBFVSByZWd1bGF0b3J5IHJlcXVpcmVtZW50cyBvbiB0YXggY2FsY3VsYXRpb24sIGV2aWRlbmNlIGNvbGxlY3Rpb24sIHRheCByZXR1cm4gY3JlYXRpb24gYW5kIGRhdGEgc3RvcmFnZS4=
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  apiKey:
    type: Pass Through
types:
  C:
    type: object
    properties:
      day?:
        type: string
        description: Date for stats in yyyy-MM-dd format.
      day_raw?:
        type: string
        description: Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      status?:
        type: string
        description: Transaction status (C or N).
      value?:
        type: number
        description: Transaction count.
  N:
    type: object
    properties:
      day?:
        type: string
        description: Date for stats in yyyy-MM-dd format.
      day_raw?:
        type: string
        description: Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      status?:
        type: string
        description: Transaction status (C or N).
      value?:
        type: number
        description: Transaction count.
  additional_currencies:
    type: object
    properties:
      invoice?:
        type: additional_currency
        description: Invoicing currency information.
  additional_currency:
    type: object
    properties:
      amount?:
        type: number
        description: Amount (w/o TAX) in designated currency.
      currency_code?:
        type: string
        description: 3-letter ISO currency code.
      fx_rate?:
        type: number
        description: Foreign exchange rate used in calculation
      tax_amount?:
        type: number
        description: Tax amount in designated currency.
      total_amount?:
        type: number
        description: Total amount in designated currency.
  by_country:
    type: object
    properties:
      currency_code?:
        type: string
        description: Three-letter ISO currency code.
      tax_country_code?:
        type: string
        description: Two letter ISO country code.
      tax_country_name?:
        type: string
        description: Country name
      value?:
        type: number
        description: Tax amount
  by_status:
    type: object
    properties:
      C?:
        type: array
        description: Confirmed transactions
        items:
          type: C
      N?:
        type: array
        description: New transactions
        items:
          type: N
  by_taxation_type:
    type: object
    properties:
      deducted_count?:
        type: number
        description: Number of tax deducted transactions.
      eu_b2b?:
        type: integer
        description: Total EU B2B transaction count.
      eu_taxed?:
        type: integer
        description: Total EU Taxed transaction count.
      taxed_count?:
        type: number
        description: Number of taxed transactions.
      transactions_count?:
        type: number
        description: Total number of transactions
  calculateSimpleTaxIn:
    type: object
    properties:
      amount?:
        type: number
        description: Amount. Required if total amount or both unit price and quantity are not provided.
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      currency_code:
        type: string
        description: Currency code for transaction - e.g. EUR.
      force_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
      invoice_address_city?:
        type: string
        description: Invoice address/postal_code
      invoice_address_postal_code?:
        type: string
        description: Invoice address/postal_code
      invoice_address_region?:
        type: string
        description: Invoice address/region
      order_date?:
        type: string
        description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
      product_type?:
        type: string
        description: 'Product type, according to dictionary /dictionaries/product_types. '
      quantity?:
        type: number
        description: Quantity Defaults to 1.
      tax_deducted?:
        type: boolean
        description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
      total_amount?:
        type: number
        description: Total amount. Required if amount or both unit price and quantity are not provided.
      unit_price?:
        type: number
        description: Unit price.
  calculateSimpleTaxOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  calculateTaxIn:
    type: object
    properties:
      transaction:
        type: input_transaction
        description: Transaction data.
    description: Input
  calculateTaxLocationIn:
    type: object
    properties:
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
  calculateTaxLocationOut:
    type: object
    properties:
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_ip?:
        type: string
        description: IP address of the buyer in dotted decimal (IPv4) or text format (IPv6).
      countries?:
        type: countries
        description: Map of countries calculated from evidence provided. This value is not stored and is available only upon tax calculation.
      evidence?:
        type: evidence
        description: Tax country of residence evidence.
      tax_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. This code applies to detected/set country for transaction, but can be set using manual mode.
      tax_deducted?:
        type: boolean
        description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
      tax_supported?:
        type: boolean
        description: Is tax calculation supported for a detected tax location?
  calculateTaxOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  cancelTransactionOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Was operation successful?
  capturePaymentOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Was the operation successful?
  confirmTransactionIn:
    type: object
    properties:
      transaction?:
        type: input_transaction_update
        description: Transaction.
    description: Input
  confirmTransactionOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  countries:
    type: object
    properties:
      by_2003_rules?:
        type: country_schema
        description: Used when merchant uses 2003 EU VAT rules.
      by_billing?:
        type: country_schema
        description: Country detected by billing country code
      by_cc?:
        type: country_schema
        description: Country detected by credit card number prefix
      by_ip?:
        type: country_schema
        description: Country detected by IP
      by_tax_number?:
        type: country_schema
        description: Country detected from EU TAX number
      by_token?:
        type: country_schema
        description: Country detected from SMS token
      detected?:
        type: country_schema
        description: Country detected from other evidence
      forced?:
        type: country_schema
        description: Country forced by paramters
      guessed_from_ip?:
        type: country_schema
        description: Country guessed from IP due to lack of other evidence
      other_commercially_relevant_info?:
        type: country_schema
        description: Additional evidence held by the merchant.
      self_declaration?:
        type: country_schema
        description: Self declared country as evidence.
  country:
    type: object
    properties:
      callingCode?:
        type: array
        description: List of phone number calling codes.
        items:
          type: string
      cca2?:
        type: string
        description: Two letter ISO country code.
      cca3?:
        type: string
        description: Three letter ISO country code.
      ccn3?:
        type: string
        description: Country ISO 3-digit code.
      code?:
        type: string
        description: Two letter ISO country code.
      code_long?:
        type: string
        description: Three letter ISO country code.
      codenum?:
        type: string
        description: Country ISO 3-digit code.
      currency?:
        type: array
        description: List of currencies.
        items:
          type: string
      name?:
        type: string
        description: Country name.
      tax_number_country_code?:
        type: string
        description: VAT number country code. Important for Greece.
      tax_region?:
        type: string
        description: Tax region code - e.g. EU, US, NO, JP...
      tax_supported?:
        type: boolean
        description: True if tax calculation supported for this country.
  country_schema:
    type: object
    properties:
      callingCode?:
        type: array
        description: List of phone number calling codes.
        items:
          type: string
      cca2?:
        type: string
        description: Two letter ISO country code.
      cca3?:
        type: string
        description: Three letter ISO country code.
      ccn3?:
        type: string
        description: Country ISO 3-digit code.
      code?:
        type: string
        description: Two letter ISO country code.
      code_long?:
        type: string
        description: Three letter ISO country code.
      codenum?:
        type: string
        description: Country ISO 3-digit code.
      currency?:
        type: array
        description: List of currencies.
        items:
          type: string
      name?:
        type: string
        description: Country name.
      tax_number_country_code?:
        type: string
        description: VAT number country code. Important for Greece.
      tax_region?:
        type: string
        description: Tax region code - e.g. EU, US, NO, JP...
      tax_supported?:
        type: boolean
        description: True if tax calculation supported for this country.
  createPaymentIn:
    type: object
    properties:
      amount:
        type: number
        description: Amount that has been paid. Use negative value to register refunds.
      payment_information?:
        type: string
        description: Additional payment information.
      payment_timestamp?:
        type: string
        description: When the payment was received in yyyy-MM-dd'T'HH:mm:ss(.SSS)'Z' format (24 hour, UTC timezone). Defaults to current date and time.
    description: Input
  createPaymentOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Was the operation successful?
  createRefundIn:
    type: object
    properties:
      amount?:
        type: number
        description: Amount (without tax) to be refunded. Either amount or total amount is required. In case of line key and custom id missing, only total_amount can be used.
      custom_id?:
        type: string
        description: Line custom identifier. If neither line key or custom id is provided, the refund amount will be assigned to lines in order.
      line_key?:
        type: string
        description: Line identifier. If neither line key or custom id is provided, the refund amount will be assigned to lines in order.
      refund_reason?:
        type: string
        description: Refund reason, displayed on the credit note.
      total_amount?:
        type: number
        description: Total amount, including tax, to be refunded. Either amount or total amount is required. In case of line key and custom id missing, only total_amount can be used.
    description: Input
  createRefundOut:
    type: object
    properties:
      refunded_tax_amount?:
        type: number
        description: Total tax amount, that was refunded for this line.
      refunded_total_amount?:
        type: number
        description: Total amount, including tax, that was refunded for this line.
      tax_amount?:
        type: number
        description: Calculated tax amount, that was refunded in this call.
      total_amount?:
        type: number
        description: Total amount, including tax, that was refunded in this call.
  createSMSTokenIn:
    type: object
    properties:
      country_code:
        type: string
        description: Two letter ISO country code.
      recipient:
        type: string
        description: Recipient phone number.
    description: Input
  createSMSTokenOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Always set to true. Success means that the message has been queued for delivery. In some cases message may be undelivered at the end, e.g. mobile number is blacklisted. API errors are signalled with appropriate error codes.
  createTransactionIn:
    type: object
    properties:
      manual_mode?:
        type: boolean
        description: Use manual mode, bypassing country detection. Only allowed with private token. This flag allows to use original_transaction_key field
      transaction:
        type: input_transaction
        description: Transaction.
    description: Input
  createTransactionOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  currency_schema:
    type: object
    properties:
      code?:
        type: string
        description: Currency 3-letter ISO code.
      description?:
        type: string
        description: Currency description.
      isocode?:
        type: string
        description: Currency 3-letter ISO code.
      isonum?:
        type: integer
        description: Currency iso numeric code.
      minorunits?:
        type: integer
        description: Number of minor units for currency.
  custom_fields:
    type: object
    properties:
      key?:
        type: string
        description: Field's key.
      value?:
        type: string
        description: Field's value.
  emailInvoiceIn:
    type: object
    properties:
      buyer_email?:
        type: string
        description: Email to send the invoice. If not provided, transaction.buyer_email will be used.
    description: Input
  emailInvoiceOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Was operation successful?
  emailRefundIn:
    type: object
    properties:
      buyer_email?:
        type: string
        description: Email to send the credit note/refund note. If not provided, transaction.buyer_email will be used.
    description: Input
  emailRefundOut:
    type: object
    properties:
      success?:
        type: boolean
        description: Was operation successful?
  evidence:
    type: object
    properties:
      by_2003_rules?:
        type: evidence_schema
        description: Used when merchant uses 2003 EU VAT rules.
      by_billing?:
        type: evidence_schema
        description: Country detected by billing country code
      by_cc?:
        type: evidence_schema
        description: Country detected by credit card number prefix
      by_ip?:
        type: evidence_schema
        description: Country detected by IP
      by_payment_method?:
        type: evidence_schema
        description: Country detected by payment method.
      by_tax_number?:
        type: evidence_schema
        description: Country detected from EU TAX number
      by_token?:
        type: evidence_schema
        description: Country detected from SMS token
      forced?:
        type: evidence_schema
        description: Country forced by paramters
      guessed_from_ip?:
        type: evidence_schema
        description: Country guessed from IP due to lack of other evidence
      other_commercially_relevant_info?:
        type: evidence_schema
        description: Additional evidence held by the merchant. Can be used only with a private token.
      self_declaration?:
        type: evidence_schema
        description: Self declared country as evidence. Requires merchant setting to be active.
  evidence_schema:
    type: object
    properties:
      evidence_type?:
        type: string
        description: Type of evidence.
      evidence_value?:
        type: string
        description: Value provided as evidence - for example IP address.
      resolved_country_code?:
        type: string
        description: Country code that was resolved using this evidence.
      used?:
        type: boolean
        description: If the evidence was used to match the actual country.
  getCountriesDictIn:
    type: object
    properties:
      tax_supported?:
        type: boolean
        description: Should only countries with tax supported be listed?
  getCountriesDictOut:
    type: object
    properties:
      dictionary?:
        type: array
        description: Countries dictionary.
        items:
          type: country_schema
  getCurrenciesDictOut:
    type: object
    properties:
      dictionary?:
        type: array
        description: Currency dictionary.
        items:
          type: currency_schema
  getDailySettlementStatsIn:
    type: object
    properties:
      date_from:
        type: string
        description: Date from in yyyy-MM format.
      date_to:
        type: string
        description: Date to in yyyy-MM format.
      interval:
        type: string
        description: Interval type - day, week, month.
  getDailySettlementStatsOut:
    type: object
    properties:
      settlement_daily?:
        type: array
        description: Daily settlement stats
        items:
          type: settlement_daily_stats_schema
  getDomesticSummaryReportIn:
    type: object
    properties:
      country_code:
        type: string
        description: ISO 2-letter country code which will be used for determining which country is domestic.
      currency_code?:
        type: string
        description: ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code.
      end_month:
        type: string
        description: Period end month in yyyy-MM format.
      format?:
        type: string
        description: Output format. 'xml' and 'csv' values are accepted. Default format - json
      fx_date_type?:
        type: string
        description: Which date should be used for FX.
      start_month:
        type: string
        description: Period start month in yyyy-MM format.
  getDomesticSummaryReportOut:
    type: object
    properties:
      currency_code?:
        type: string
        description: Three-letter ISO currency code.
      domestic_refunds_amount?:
        type: number
        description: Domestic sales refunds amount.
      domestic_refunds_tax_amount?:
        type: number
        description: Domestic sales refunds tax amout.
      domestic_sales_amount?:
        type: number
        description: Domestic sales amount.
      domestic_tax_amount?:
        type: number
        description: Domestic sales tax amout.
      end_date?:
        type: string
        description: Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      eu_tax_deducted_refunds?:
        type: number
        description: EU deducted tax sales.
      eu_tax_deducted_sales?:
        type: number
        description: EU deducted tax sales.
      global_refunds_amount?:
        type: number
        description: Global sales refunds amount. This includes refunds from domestic country too.
      global_refunds_tax_amount?:
        type: number
        description: Global sales refunds amount. This includes refunds from domestic country too.
      global_sales_amount?:
        type: number
        description: Global sales amount. This includes sales from domestic country too.
      global_sales_tax_amount?:
        type: number
        description: Global sales amount. This includes sales from domestic country too.
      start_date?:
        type: string
        description: Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
  getEuViesReportIn:
    type: object
    properties:
      currency_code?:
        type: string
        description: ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code.
      end_month:
        type: string
        description: Period end month in yyyy-MM format.
      eu_country_code:
        type: string
        description: ISO 2-letter country code which will be used for determining which country is domestic.
      format?:
        type: string
        description: Output format. 'xml', 'csv' and 'lff' (only for Ireland) values are accepted as well
      fx_date_type?:
        type: string
        description: Which date should be used for FX.
      lff_sequence_number?:
        type: string
        description: Sequence number used to generate report in Large Filer Format. If not specified then '0000000001' will be used.
      period_length?:
        type: string
        description: Length of report period. 'month', 'quarter' and 'year' values are accepted. Required only if Large Filer Format is requested.
      start_month:
        type: string
        description: Period start month in yyyy-MM format.
      tax_id?:
        type: string
        description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used.
      transformation?:
        type: string
        description: Which transformation should be applied. Please note that transformation will be applied only for xml and csv formats.
  getEuViesReportOut:
    type: object
    properties:
      currency_code?:
        type: string
        description: Three-letter ISO currency code.
      end_date?:
        type: string
        description: Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      report?:
        type: array
        description: Settlement report.
        items:
          type: report
      start_date?:
        type: string
        description: Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
  getProductTypesDictOut:
    type: object
    properties:
      dictionary?:
        type: array
        description: Product type dictionary.
        items:
          type: product_type_schema
  getRefundsIn:
    type: object
    properties:
      date_from:
        type: string
        description: 'Take only refunds issued at or after the date. Format: yyyy-MM-dd'
      format?:
        type: string
        description: Output format. 'csv' value is accepted as well
      moss_country_code?:
        type: string
        description: MOSS country code, used to determine currency. If ommited, merchant default setting is used.
      tax_region?:
        type: string
        description: Tax region key, defaults to EU for backwards compatibility.
  getRefundsOut:
    type: object
    properties:
      report?:
        type: array
        description: Refunds report.
        items:
          type: report
  getSettlementIn:
    type: object
    properties:
      currency_code?:
        type: string
        description: ISO 3-letter currency code, e.g. EUR or USD. If provided, all amounts will be coerced for this currency. Defaults to region's currency code.
      end_month?:
        type: string
        description: Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
      format?:
        type: string
        description: Output format. 'csv' value is accepted as well
      moss_country_code?:
        type: string
        description: 'MOSS country code, used to determine currency/region. If ommited,
          merchant default setting is used. Deprecated: please use tax-country-code.'
      moss_tax_id?:
        type: string
        description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.
      start_month?:
        type: string
        description: Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
      tax_country_code?:
        type: string
        description: 'Tax entity country code, used to determine currency/region. '
      tax_id?:
        type: string
        description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.
  getSettlementOut:
    type: object
    properties:
      end_date?:
        type: string
        description: Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      fx_rate_date?:
        type: string
        description: 'Date of ECB FX rate used for conversions in yyyy-MM-dd''T''hh:mm:ss''Z''
          format. Applies to tax regions where '
      indicative?:
        type: boolean
        description: If the quarter isn't closed yet, tax amount is indicative, as we cannot determine FX rate or all transactions yet.
      report?:
        type: array
        description: Settlement report.
        items:
          type: report
      start_date?:
        type: string
        description: Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
  getSettlementStatsByCountryIn:
    type: object
    properties:
      date_from:
        type: string
        description: Date from in yyyy-MM format.
      date_to:
        type: string
        description: Date to in yyyy-MM format.
  getSettlementStatsByCountryOut:
    type: object
    properties:
      by_country?:
        type: array
        description: Settlement stats.
        items:
          type: by_country
  getSettlementStatsByTaxationTypeIn:
    type: object
    properties:
      date_from:
        type: string
        description: Date from in yyyy-MM format.
      date_to:
        type: string
        description: Date to in yyyy-MM format.
  getSettlementStatsByTaxationTypeOut:
    type: object
    properties:
      by_taxation_type?:
        type: by_taxation_type
        description: Settlements stats by taxation type.
  getSettlementSummaryIn:
    type: object
    properties:
      end_month?:
        type: string
        description: Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
      moss_country_code?:
        type: string
        description: MOSS country code, used to determine currency. If ommited, merchant default setting is used.
      start_month?:
        type: string
        description: Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
      tax_region?:
        type: string
        description: Tax region key
  getSettlementSummaryOut:
    type: object
    properties:
      summary?:
        type: summary
        description: Settlement summary.
  getTransactionOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  getTransactionsStatsByCountryIn:
    type: object
    properties:
      date_from:
        type: string
        description: Date from in yyyy-MM format.
      date_to:
        type: string
        description: Date to in yyyy-MM format.
      global_currency_code?:
        type: string
        description: Global currency code to use for conversion - in addition to country's currency if rate is available. Conversion is indicative and based on most-recent rate from ECB.
  getTransactionsStatsByCountryOut:
    type: object
    properties:
      by_country?:
        type: array
        description: Settlement stats.
        items:
          type: by_country
  getTransactionsStatsIn:
    type: object
    properties:
      date_from:
        type: string
        description: Date from in yyyy-MM format.
      date_to:
        type: string
        description: Date to in yyyy-MM format.
      interval?:
        type: string
        description: Interval. Accepted values are 'day', 'week' and 'month'.
  getTransactionsStatsOut:
    type: object
    properties:
      by_status?:
        type: by_status
        description: Transaction stats grouped by status.
  input_transaction:
    type: object
    properties:
      additional_currencies?:
        type: additional_currencies
        description: Additional currency information - can be used to receive additional information about invoice in another currency.
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_email?:
        type: string
        description: Buyer's declared email address.
      buyer_ip?:
        type: string
        description: IP address of the buyer in dotted decimal (IPv4) or text format (IPv6).
      buyer_name?:
        type: string
        description: Buyer's name - first name and last name or company name.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      comments?:
        type: string
        description: Additional information about the transaction - for example if the evidence has been amended.
      currency_code:
        type: string
        description: Currency code for transaction - e.g. EUR.
      custom_data?:
        type: string
        description: Custom data related to transaction.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id?:
        type: string
        description: Custom identifier provided upon transaction creation.
      customer_id?:
        type: string
        description: Free-form field for storing customer id.
      description?:
        type: string
        description: Transaction description.
      evidence?:
        type: evidence
        description: Tax country of residence evidence.
      force_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
      invoice_address?:
        type: invoice_address
        description: Invoice address.
      invoice_date?:
        type: string
        description: Invoice date of issue.
      invoice_number?:
        type: string
        description: Invoice number.
      invoice_place?:
        type: string
        description: Invoice place of issue.
      note?:
        type: string
        description: Additional note related to transaction state - for example if the transaction was created in a 'catch-all' mode or the VAT number re-check for subscriptions has failed.
      order_date?:
        type: string
        description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
      original_transaction_key?:
        type: string
        description: Use data and evidence from original transaction. Tax will be re-calculated, but evidence won't be re-checked. This parameter is taken into account only when 'manual' flag is raised.
      status?:
        type: string
        description: 'Transaction status: ''N'' - new, ''C'' - confirmed. Can use
          ''C'' in store-transaction! with private-token to create confirmed transaction,
          otherwise ''N'' is default status. Not applicable for update-transaction!.'
      supply_date?:
        type: string
        description: Supply date in yyyy-MM-dd format.
      tax_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. This code applies to detected/set country for transaction, but can be set using manual mode.
      tax_data?:
        type: tax_data_schema
        description: Tax additional information - e.g. US sales tax exemption certificate data.
      tax_deducted?:
        type: boolean
        description: True if the transaction is deducted from tax and no tax is applied (it is untaxed). Either set automatically when VAT number validates with VIES correctly, but can also be provided in manual mode.
      transaction_lines:
        type: array
        description: Transaction lines.
        items:
          type: input_transaction_line
      verification_token?:
        type: string
        description: Verification token
  input_transaction_line:
    type: object
    properties:
      amount?:
        type: number
        description: Amount. Required if total amount or both unit price and quantity are not provided.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id:
        type: string
        description: Custom id, provided by ecommerce software.
      description?:
        type: string
        description: Line contents description.
      informative?:
        type: boolean
        description: If the line is provided for informative purposes. Such line must have :tax-rate and optionally :tax-name - if not, API validation will fail for this line.
      line_key?:
        type: string
        description: Generated line key.
      product_code?:
        type: string
        description: Internal product code, used for invoicing for example.
      product_tax_code?:
        type: string
        description: External product tax code for a line, for example TIC in US Sales tax.
      product_type?:
        type: string
        description: 'Product type, according to dictionary /dictionaries/product_types. '
      quantity?:
        type: number
        description: Quantity Defaults to 1.
      supply_date?:
        type: string
        description: Date of supply in yyyy-MM-dd format.
      tax_name?:
        type: string
        description: Tax name, calculated by taxamo.  Can be overwritten when informative field is true.
      tax_rate?:
        type: number
        description: Tax rate, calculated by taxamo. Must be provided when informative field is true.
      total_amount?:
        type: number
        description: Total amount. Required if amount or both unit price and quantity are not provided.
      unit_of_measure?:
        type: string
        description: Unit of measure.
      unit_price?:
        type: number
        description: Unit price.
  input_transaction_update:
    type: object
    properties:
      additional_currencies?:
        type: additional_currencies
        description: Additional currency information - can be used to receive additional information about invoice in another currency.
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_email?:
        type: string
        description: Buyer's declared email address.
      buyer_ip?:
        type: string
        description: IP address of the buyer in dotted decimal (IPv4) or text format (IPv6).
      buyer_name?:
        type: string
        description: Buyer's name - first name and last name or company name.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      comments?:
        type: string
        description: Additional information about the transaction - for example if the evidence has been amended.
      currency_code?:
        type: string
        description: Currency code for transaction - e.g. EUR.
      custom_data?:
        type: string
        description: Custom data related to transaction.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id?:
        type: string
        description: Custom identifier provided upon transaction creation.
      customer_id?:
        type: string
        description: Free-form field for storing customer id.
      description?:
        type: string
        description: Transaction description.
      evidence?:
        type: evidence
        description: Tax country of residence evidence.
      force_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
      invoice_address?:
        type: invoice_address
        description: Invoice address.
      invoice_date?:
        type: string
        description: Invoice date of issue.
      invoice_number?:
        type: string
        description: Invoice number.
      invoice_place?:
        type: string
        description: Invoice place of issue.
      note?:
        type: string
        description: Additional note related to transaction state - for example if the transaction was created in a 'catch-all' mode or the VAT number re-check for subscriptions has failed.
      order_date?:
        type: string
        description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
      original_transaction_key?:
        type: string
        description: Use data and evidence from original transaction. Tax will be re-calculated, but evidence won't be re-checked. This parameter is taken into account only when 'manual' flag is raised.
      status?:
        type: string
        description: 'Transaction status: ''N'' - new, ''C'' - confirmed. Can use
          ''C'' in store-transaction! with private-token to create confirmed transaction,
          otherwise ''N'' is default status. Not applicable for update-transaction!.'
      supply_date?:
        type: string
        description: Supply date in yyyy-MM-dd format.
      tax_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. This code applies to detected/set country for transaction, but can be set using manual mode.
      tax_data?:
        type: tax_data_schema
        description: Tax additional information - e.g. US sales tax exemption certificate data.
      tax_deducted?:
        type: boolean
        description: True if the transaction is deducted from tax and no tax is applied (it is untaxed). Either set automatically when VAT number validates with VIES correctly, but can also be provided in manual mode.
      transaction_lines?:
        type: array
        description: Transaction lines.
        items:
          type: input_transaction_line
      verification_token?:
        type: string
        description: Verification token
  invoice_address:
    type: object
    properties:
      address_detail?:
        type: string
        description: Address details - for example apartament number.
      building_number?:
        type: string
        description: Building number.
      city?:
        type: string
        description: City name.
      country?:
        type: string
        description: 2-letter ISO country code.
      freeform_address?:
        type: string
        description: Freeform address. Use when structured data is not available. Will be used in SAF-MOSS file if other fields are not provided.
      postal_code?:
        type: string
        description: Postal code.
      region?:
        type: string
        description: Region, for United States - state code - e.g. NJ.
      street_name?:
        type: string
        description: ' Street name.'
  listPaymentsIn:
    type: object
    properties:
      limit?:
        type: string
        description: Max record count (no more than 100, defaults to 10).
      offset?:
        type: string
        description: How many records need to be skipped, defaults to 0.
  listPaymentsOut:
    type: object
    properties:
      payments?:
        type: array
        description: Payments.
        items:
          type: payments
  listRefundsOut:
    type: object
    properties:
      refunds?:
        type: array
        description: Refunds
        items:
          type: refunds
  listTransactionsIn:
    type: object
    properties:
      currency_code?:
        type: string
        description: Three letter ISO currency code.
      filter_text?:
        type: string
        description: Filtering expression
      format?:
        type: string
        description: Output format - supports 'csv' value for this operation.
      has_note?:
        type: boolean
        description: Return only transactions with a note field set.
      invoice_number?:
        type: string
        description: Transaction invoice number.
      key_or_custom_id?:
        type: string
        description: Taxamo provided transaction key or custom id
      limit?:
        type: integer
        description: Limit (no more than 1000, defaults to 100).
      offset?:
        type: integer
        description: Offset
      order_date_from?:
        type: string
        description: Order date from in yyyy-MM-dd format.
      order_date_to?:
        type: string
        description: Order date to in yyyy-MM-dd format.
      original_transaction_key?:
        type: string
        description: Taxamo provided original transaction key
      sort_reverse?:
        type: boolean
        description: If true, results are sorted in descending order.
      statuses?:
        type: string
        description: Comma separated list of of transaction statuses. 'N' - unconfirmed transaction, 'C' - confirmed transaction.
      tax_country_code?:
        type: string
        description: Two letter ISO tax country code.
      tax_country_codes?:
        type: string
        description: Comma separated list of two letter ISO tax country codes.
      total_amount_greater_than?:
        type: string
        description: Return only transactions with total amount greater than given number. Transactions with total amount equal to a given number (e.g. 0) are not returned.
      total_amount_less_than?:
        type: string
        description: Return only transactions with total amount less than a given number. Transactions with total amount equal to a given number (e.g. 1) are not returned.
  listTransactionsOut:
    type: object
    properties:
      transactions?:
        type: array
        description: Transactions matching the criteria.
        items:
          type: transactions
  locateGivenIPOut:
    type: object
    properties:
      country?:
        type: country
        description: Detected country details
      country_code?:
        type: string
        description: Detected country code.
      remote_addr?:
        type: string
        description: Remote IP address.
  locateMyIPOut:
    type: object
    properties:
      country?:
        type: country
        description: Detected country details
      country_code?:
        type: string
        description: Detected country code.
      remote_addr?:
        type: string
        description: Remote IP address.
  payments:
    type: object
    properties:
      amount?:
        type: number
        description: Amount that has been paid. Use negative value to register refunds.
      payment_information?:
        type: string
        description: Additional payment information.
      payment_timestamp?:
        type: string
        description: When the payment was received in yyyy-MM-dd HH:mm:ss (24 hour format, UTC+0 timezone).
  product_type_schema:
    type: object
    properties:
      code?:
        type: string
        description: Product type code.
  refunds:
    type: object
    properties:
      amount?:
        type: number
        description: Amount, excluding tax, that was refunded.
      informative?:
        type: boolean
        description: Was this refund applied to an informative line?
      line_key?:
        type: string
        description: Line identifier. If neither line key or custom id is provided, the refund amount will be assigned to lines in order.
      refund_note_number?:
        type: string
        description: Sequential refund note number.
      refund_note_url?:
        type: string
        description: Refund note image url.
      refund_reason?:
        type: string
        description: Refund reason, displayed on the credit note.
      refund_timestamp?:
        type: string
        description: Refund timestamp in UTC timezone.
      tax_amount?:
        type: number
        description: Calculated tax amount, that was refunded.
      tax_rate?:
        type: number
        description: Tax rate for the line that was used for the refund calculation.
      total_amount?:
        type: number
        description: Total amount, including tax, that was refunded.
  report:
    type: object
    properties:
      amount?:
        type: number
        description: Amount w/o tax
      country_code?:
        type: string
        description: Two letter ISO country code.
      country_name?:
        type: string
        description: Country name
      country_subdivision?:
        type: string
        description: Country subdivision (e.g. state or provice or county)
      currency_code?:
        type: string
        description: Three-letter ISO currency code.
      skip_moss?:
        type: boolean
        description: If true, this line should not be entered into MOSS and is provided for informative purposes only. For example because the country is the same as MOSS registration country and merchant country.
      tax_amount?:
        type: number
        description: Tax amount
      tax_rate?:
        type: number
        description: Tax rate
      tax_region?:
        type: string
        description: Tax region key
  settlement_daily_stats_schema:
    type: object
    properties:
      b2b?:
        type: integer
        description: B2B transaction count.
      b2c?:
        type: integer
        description: B2C transaction count.
      count?:
        type: integer
        description: Total transaction count.
      day?:
        type: string
        description: Date for stats in yyyy-MM-dd format.
      day_raw?:
        type: string
        description: Date for stats in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      eu_b2b?:
        type: integer
        description: Total EU B2B transaction count.
      eu_taxed?:
        type: integer
        description: Total EU Taxed transaction count.
      eu_total?:
        type: integer
        description: Total EU transaction count.
      untaxed?:
        type: integer
        description: Untaxed transaction count.
  storage_required_fields:
    type: object
    properties:
      field_name?:
        type: string
        description: Required field name.
  summary:
    type: object
    properties:
      currency_code?:
        type: string
        description: In which currency code the settlement was calculated.
      end_date?:
        type: string
        description: Period end date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      fx_rate_date?:
        type: string
        description: Date of ECB FX rate used for conversions in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      indicative?:
        type: boolean
        description: If the quarter isn't closed yet, tax amount is indicative, as we cannot determine FX rate or all transactions yet.
      quarter?:
        type: string
        description: Quarter that this summary applies to.
      start_date?:
        type: string
        description: Period start date in yyyy-MM-dd'T'hh:mm:ss'Z' format.
      tax_amount?:
        type: number
        description: Tax amount due in this quarter.
      tax_entity_name?:
        type: string
        description: Tax entity that the tax is due.
  tax_data_schema:
    type: object
    properties:
      us_tax_exemption_certificate?:
        type: us_tax_exemption_certificate_schema
        description: US sales tax exemption certificate.
  tax_required_fields:
    type: object
    properties:
      field_name?:
        type: string
        description: Required field name.
  transaction:
    type: object
    properties:
      additional_currencies?:
        type: additional_currencies
        description: Additional currency information - can be used to receive additional information about invoice in another currency.
      amount?:
        type: number
        description: Amount of transaction without tax.
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_email?:
        type: string
        description: Buyer's declared email address.
      buyer_ip?:
        type: string
        description: IP address of the buyer in dotted decimal (IPv4) or text format (IPv6).
      buyer_name?:
        type: string
        description: Buyer's name - first name and last name or company name.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      buyer_tax_number_valid?:
        type: boolean
        description: If the buyer tax number has been provided and was validated successfully. Always true for domestic transactions (billing country same as merchant's country), tax number doesn't get validated in that case.
      comments?:
        type: string
        description: Additional information about the transaction - for example if the evidence has been amended.
      confirm_timestamp?:
        type: string
        description: Date and time of transaction confirmation.
      countries?:
        type: countries
        description: Map of countries calculated from evidence provided. This value is not stored and is available only upon tax calculation.
      create_timestamp?:
        type: string
        description: Date and time of transaction creation.
      currency_code:
        type: string
        description: Currency code for transaction - e.g. EUR.
      custom_data?:
        type: string
        description: Custom data related to transaction.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id?:
        type: string
        description: Custom identifier provided upon transaction creation.
      customer_id?:
        type: string
        description: Free-form field for storing customer id.
      deducted_tax_amount?:
        type: number
        description: How much tax has been deducted.
      description?:
        type: string
        description: Transaction description.
      evidence?:
        type: evidence
        description: Tax country of residence evidence.
      external_key?:
        type: string
        description: Transaction external key
      force_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
      fully_informative?:
        type: boolean
        description: Set to true if transaction has only informative lines.
      invoice_address?:
        type: invoice_address
        description: Invoice address.
      invoice_date?:
        type: string
        description: Invoice date of issue.
      invoice_image_url?:
        type: string
        description: Invoice image URL - provided by Taxamo.
      invoice_number?:
        type: string
        description: Invoice number.
      invoice_place?:
        type: string
        description: Invoice place of issue.
      key?:
        type: string
        description: Id generated by taxamo.
      kind?:
        type: string
        description: 'Transaction kind: eu-b2c, eu-b2b, domestic, untaxed'
      manual?:
        type: boolean
        description: Is the transaction created manually - using private token. In manual mode, it is the merchant who calculates tax country and validates evidence. If you need API to do that when accessing the API with private token, just skip the 'manual' flag or use false value there and provide customer's ip address through buyer_ip field. Manual mode is also used when using original_transaction_key field.
      note?:
        type: string
        description: Additional note related to transaction state - for example if the transaction was created in a 'catch-all' mode or the VAT number re-check for subscriptions has failed.
      order_date?:
        type: string
        description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
      original_transaction_key?:
        type: string
        description: Use data and evidence from original transaction. Tax will be re-calculated, but evidence won't be re-checked. This parameter is taken into account only when 'manual' flag is raised.
      refunded_tax_amount?:
        type: number
        description: Refunded tax amount.
      refunded_total_amount?:
        type: number
        description: Total amount refunde (including tax).
      source?:
        type: string
        description: Transaction source software - e.g. plugin
      status?:
        type: string
        description: 'Transaction status: ''N'' - new, ''C'' - confirmed. Can use
          ''C'' in store-transaction! with private-token to create confirmed transaction,
          otherwise ''N'' is default status. Not applicable for update-transaction!.'
      supply_date?:
        type: string
        description: Supply date in yyyy-MM-dd format.
      tax_amount?:
        type: number
        description: Tax amount of transaction.
      tax_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. This code applies to detected/set country for transaction, but can be set using manual mode.
      tax_data?:
        type: tax_data_schema
        description: Tax additional information - e.g. US sales tax exemption certificate data.
      tax_deducted?:
        type: boolean
        description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
      tax_entity_name?:
        type: string
        description: To which entity is the tax due.
      tax_number_service?:
        type: string
        description: Tax number service identifier - if available for a given region and the region is enabled.
      tax_supported?:
        type: boolean
        description: Is tax calculation supported for a detected tax location?
      tax_timezone?:
        type: string
        description: Timezone name for tax transaction.
      test?:
        type: boolean
        description: Was this transaction created in test mode?
      total_amount?:
        type: number
        description: Total amount of transaction.
      transaction_lines:
        type: array
        description: Transaction lines.
        items:
          type: transaction_lines
      verification_token?:
        type: string
        description: Verification token
  transaction_lines:
    type: object
    properties:
      additional_currencies?:
        type: additional_currencies
        description: Additional currency information - can be used to receive additional information about invoice in another currency.
      amount?:
        type: number
        description: Amount. Required if total amount or both unit price and quantity are not provided.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id:
        type: string
        description: Custom id, provided by ecommerce software.
      deducted_tax_amount?:
        type: number
        description: Deducted tax amount, calculated by taxmo.
      description?:
        type: string
        description: Line contents description.
      id?:
        type: number
        description: Generated id.
      informative?:
        type: boolean
        description: If the line is provided for informative purposes. Such line must have :tax-rate and optionally :tax-name - if not, API validation will fail for this line.
      line_key?:
        type: string
        description: Generated line key.
      product_code?:
        type: string
        description: Internal product code, used for invoicing for example.
      product_tax_code?:
        type: string
        description: External product tax code for a line, for example TIC in US Sales tax.
      product_type?:
        type: string
        description: 'Product type, according to dictionary /dictionaries/product_types. '
      quantity?:
        type: number
        description: Quantity Defaults to 1.
      refunded_tax_amount?:
        type: number
        description: Refunded tax amount, calculated by taxmo.
      refunded_total_amount?:
        type: number
        description: Refunded total amount, calculated by taxmo.
      supply_date?:
        type: string
        description: Date of supply in yyyy-MM-dd format.
      tax_amount?:
        type: number
        description: Tax amount, calculated by taxamo.
      tax_name?:
        type: string
        description: Tax name, calculated by taxamo.  Can be overwritten when informative field is true.
      tax_rate?:
        type: number
        description: Tax rate, calculated by taxamo. Must be provided when informative field is true.
      total_amount?:
        type: number
        description: Total amount. Required if amount or both unit price and quantity are not provided.
      unit_of_measure?:
        type: string
        description: Unit of measure.
      unit_price?:
        type: number
        description: Unit price.
  transactions:
    type: object
    properties:
      additional_currencies?:
        type: additional_currencies
        description: Additional currency information - can be used to receive additional information about invoice in another currency.
      amount?:
        type: number
        description: Amount of transaction without tax.
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_credit_card_prefix?:
        type: string
        description: First 6 digits of buyer's credit card prefix.
      buyer_email?:
        type: string
        description: Buyer's declared email address.
      buyer_ip?:
        type: string
        description: IP address of the buyer in dotted decimal (IPv4) or text format (IPv6).
      buyer_name?:
        type: string
        description: Buyer's name - first name and last name or company name.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      buyer_tax_number_valid?:
        type: boolean
        description: If the buyer tax number has been provided and was validated successfully. Always true for domestic transactions (billing country same as merchant's country), tax number doesn't get validated in that case.
      comments?:
        type: string
        description: Additional information about the transaction - for example if the evidence has been amended.
      confirm_timestamp?:
        type: string
        description: Date and time of transaction confirmation.
      countries?:
        type: countries
        description: Map of countries calculated from evidence provided. This value is not stored and is available only upon tax calculation.
      create_timestamp?:
        type: string
        description: Date and time of transaction creation.
      currency_code:
        type: string
        description: Currency code for transaction - e.g. EUR.
      custom_data?:
        type: string
        description: Custom data related to transaction.
      custom_fields?:
        type: array
        description: Custom fields, stored as key-value pairs. This property is not processed and used mostly with Taxamo-built helpers.
        items:
          type: custom_fields
      custom_id?:
        type: string
        description: Custom identifier provided upon transaction creation.
      customer_id?:
        type: string
        description: Free-form field for storing customer id.
      deducted_tax_amount?:
        type: number
        description: How much tax has been deducted.
      description?:
        type: string
        description: Transaction description.
      evidence?:
        type: evidence
        description: Tax country of residence evidence.
      external_key?:
        type: string
        description: Transaction external key
      force_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
      fully_informative?:
        type: boolean
        description: Set to true if transaction has only informative lines.
      invoice_address?:
        type: invoice_address
        description: Invoice address.
      invoice_date?:
        type: string
        description: Invoice date of issue.
      invoice_image_url?:
        type: string
        description: Invoice image URL - provided by Taxamo.
      invoice_number?:
        type: string
        description: Invoice number.
      invoice_place?:
        type: string
        description: Invoice place of issue.
      key?:
        type: string
        description: Id generated by taxamo.
      kind?:
        type: string
        description: 'Transaction kind: eu-b2c, eu-b2b, domestic, untaxed'
      manual?:
        type: boolean
        description: Is the transaction created manually - using private token. In manual mode, it is the merchant who calculates tax country and validates evidence. If you need API to do that when accessing the API with private token, just skip the 'manual' flag or use false value there and provide customer's ip address through buyer_ip field. Manual mode is also used when using original_transaction_key field.
      note?:
        type: string
        description: Additional note related to transaction state - for example if the transaction was created in a 'catch-all' mode or the VAT number re-check for subscriptions has failed.
      order_date?:
        type: string
        description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
      original_transaction_key?:
        type: string
        description: Use data and evidence from original transaction. Tax will be re-calculated, but evidence won't be re-checked. This parameter is taken into account only when 'manual' flag is raised.
      refunded_tax_amount?:
        type: number
        description: Refunded tax amount.
      refunded_total_amount?:
        type: number
        description: Total amount refunde (including tax).
      source?:
        type: string
        description: Transaction source software - e.g. plugin
      status?:
        type: string
        description: 'Transaction status: ''N'' - new, ''C'' - confirmed. Can use
          ''C'' in store-transaction! with private-token to create confirmed transaction,
          otherwise ''N'' is default status. Not applicable for update-transaction!.'
      supply_date?:
        type: string
        description: Supply date in yyyy-MM-dd format.
      tax_amount?:
        type: number
        description: Tax amount of transaction.
      tax_country_code?:
        type: string
        description: Two-letter ISO country code, e.g. FR. This code applies to detected/set country for transaction, but can be set using manual mode.
      tax_data?:
        type: tax_data_schema
        description: Tax additional information - e.g. US sales tax exemption certificate data.
      tax_deducted?:
        type: boolean
        description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
      tax_entity_name?:
        type: string
        description: To which entity is the tax due.
      tax_number_service?:
        type: string
        description: Tax number service identifier - if available for a given region and the region is enabled.
      tax_supported?:
        type: boolean
        description: Is tax calculation supported for a detected tax location?
      tax_timezone?:
        type: string
        description: Timezone name for tax transaction.
      test?:
        type: boolean
        description: Was this transaction created in test mode?
      total_amount?:
        type: number
        description: Total amount of transaction.
      transaction_lines:
        type: array
        description: Transaction lines.
        items:
          type: transaction_lines
      verification_token?:
        type: string
        description: Verification token
  unconfirmTransactionIn:
    type: object
    properties:
      transaction?:
        type: input_transaction_update
        description: Transaction.
    description: Input
  unconfirmTransactionOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  updateTransactionIn:
    type: object
    properties:
      transaction?:
        type: transaction
        description: Transaction.
    description: Input
  updateTransactionOut:
    type: object
    properties:
      storage_required_fields?:
        type: array
        description: Fields required for transaction storage (can be added later - it's up to merchant software). Depends on the region/transaction type.
        items:
          type: storage_required_fields
      tax_required_fields?:
        type: array
        description: Fields required for tax calculation. Depends on the region/transaction type.
        items:
          type: tax_required_fields
      transaction?:
        type: transaction
        description: Transaction data
  us_tax_exempt_state:
    type: object
    properties:
      identifier_for_exemption_reason?:
        type: string
        description: Identifier for exemption reason.
      reason_for_exemption?:
        type: string
        description: Exemption reason
      state_abbr:
        type: string
        description: Two character state abbreviation.
  us_tax_exemption_certificate_details_schema:
    type: object
    properties:
      exempt_states:
        type: array
        description: List of states where the certificate is valid.
        items:
          type: us_tax_exempt_state
      purchaser_address1:
        type: string
        description: Purchaser's first address line.
      purchaser_address2?:
        type: string
        description: Purchaser's second address line.
      purchaser_business_type:
        type: string
        description: Purchaser business type.
      purchaser_business_type_other_value?:
        type: string
        description: If business type is other, a short description must be provided.
      purchaser_city:
        type: string
        description: Purchaser's city.
      purchaser_exemption_reason:
        type: string
        description: The reason for exemption reason.
      purchaser_exemption_reason_value:
        type: string
        description: The value of exemption reason.
      purchaser_first_name:
        type: string
        description: Purchaser's first name.
      purchaser_last_name:
        type: string
        description: Purchaser's last name.
      purchaser_state:
        type: string
        description: Purchaser's state.
      purchaser_tax_id:
        type: us_tax_id
        description: Purchaser's TAX ID.
      purchaser_title?:
        type: string
        description: Purchaser's title.
      purchaser_zip:
        type: string
        description: Purchaser's zip code.
      single_purchase?:
        type: boolean
        description: Set to true if this certificate is valid for single purchase only.
      single_purchase_order_identifier?:
        type: string
        description: Purchase/order identifier for single purchase.
  us_tax_exemption_certificate_schema:
    type: object
    properties:
      certificate_id?:
        type: string
        description: The exemption certificate number.
      detail?:
        type: us_tax_exemption_certificate_details_schema
        description: US tax exemption ertificate detail.
  us_tax_id:
    type: object
    properties:
      state_of_issue?:
        type: string
        description: State of issue
      tax_id?:
        type: string
        description: Tax ID
      tax_id_type:
        type: string
        description: Tax id type.
  validateTaxNumberIn:
    type: object
    properties:
      country_code?:
        type: string
        description: Two-letter ISO country code.
  validateTaxNumberOut:
    type: object
    properties:
      billing_country_code?:
        type: string
        description: Billing two letter ISO country code.
      buyer_tax_number?:
        type: string
        description: ' Buyer''s tax number - EU VAT number for example. If using EU
          VAT number, it is possible to provide country code in it (e.g. IE1234567X)
          or simply use billing_country_code field for that. In the first case, if
          billing_country_code value was provided, it will be overwritten with country
          code value extracted from VAT number - but only if the VAT has been verified
          properly.'
      buyer_tax_number_valid?:
        type: boolean
        description: If the buyer tax number has been provided and was validated successfully. Always true for domestic transactions (billing country same as merchant's country), tax number doesn't get validated in that case.
      tax_deducted?:
        type: boolean
        description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
  verifySMSTokenOut:
    type: object
    properties:
      country_code?:
        type: string
        description: Verified country code, returned if operation was successful.
/api:
  /v1:
    /dictionaries:
      /countries:
        get:
          displayName: Countries
          queryParameters:
            tax_supported?:
              type: boolean
              description: Should only countries with tax supported be listed?
              displayName: tax_supported
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getCountriesDictOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      /currencies:
        get:
          displayName: Currencies
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getCurrenciesDictOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      /product_types:
        get:
          displayName: Product types
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getProductTypesDictOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
    /geoip:
      /{ip}:
        uriParameters:
          ip:
            type: string
            description: IP address.
            displayName: ip
        get:
          displayName: Locate provided IP
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: locateGivenIPOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      get:
        displayName: Locate IP
        responses:
          200:
            description: OK
            body:
              application/json:
                type: locateMyIPOut
          400:
            description: Validation failed, see JSON body response for details.
          401:
            description: Incorrect token
    /reports:
      /domestic:
        /summary:
          get:
            displayName: Calculate domestic summary
            queryParameters:
              format?:
                type: string
                description: Output format. 'xml' and 'csv' values are accepted. Default format - json
                displayName: format
              country_code:
                type: string
                description: ISO 2-letter country code which will be used for determining which country is domestic.
                displayName: country_code
              currency_code?:
                type: string
                description: ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code.
                displayName: currency_code
              start_month:
                type: string
                description: Period start month in yyyy-MM format.
                displayName: start_month
              end_month:
                type: string
                description: Period end month in yyyy-MM format.
                displayName: end_month
              fx_date_type?:
                type: string
                description: Which date should be used for FX.
                displayName: fx_date_type
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getDomesticSummaryReportOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
      /eu:
        /vies:
          get:
            displayName: Calculate EU VIES report
            queryParameters:
              period_length?:
                type: string
                description: Length of report period. 'month', 'quarter' and 'year' values are accepted. Required only if Large Filer Format is requested.
                displayName: period_length
              lff_sequence_number?:
                type: string
                description: Sequence number used to generate report in Large Filer Format. If not specified then '0000000001' will be used.
                displayName: lff_sequence_number
              transformation?:
                type: string
                description: Which transformation should be applied. Please note that transformation will be applied only for xml and csv formats.
                displayName: transformation
              currency_code?:
                type: string
                description: ISO 3-letter currency code, e.g. EUR or USD. Defaults to the one assigned to MOSS calculations for a given country code.
                displayName: currency_code
              end_month:
                type: string
                description: Period end month in yyyy-MM format.
                displayName: end_month
              tax_id?:
                type: string
                description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used.
                displayName: tax_id
              start_month:
                type: string
                description: Period start month in yyyy-MM format.
                displayName: start_month
              eu_country_code:
                type: string
                description: ISO 2-letter country code which will be used for determining which country is domestic.
                displayName: eu_country_code
              fx_date_type?:
                type: string
                description: Which date should be used for FX.
                displayName: fx_date_type
              format?:
                type: string
                description: Output format. 'xml', 'csv' and 'lff' (only for Ireland) values are accepted as well
                displayName: format
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getEuViesReportOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
    /settlement:
      /refunds:
        get:
          displayName: Fetch refunds
          queryParameters:
            format?:
              type: string
              description: Output format. 'csv' value is accepted as well
              displayName: format
            moss_country_code?:
              type: string
              description: MOSS country code, used to determine currency. If ommited, merchant default setting is used.
              displayName: moss_country_code
            tax_region?:
              type: string
              description: Tax region key, defaults to EU for backwards compatibility.
              displayName: tax_region
            date_from:
              type: string
              description: 'Take only refunds issued at or after the date. Format:
                yyyy-MM-dd'
              displayName: date_from
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getRefundsOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      /summary:
        /{quarter}:
          uriParameters:
            quarter:
              type: string
              description: Quarter in yyyy-MM format. If start-date and end-date are provided, quarter is ignored and should be set to 'range'.
              displayName: quarter
          get:
            displayName: Fetch summary
            queryParameters:
              moss_country_code?:
                type: string
                description: MOSS country code, used to determine currency. If ommited, merchant default setting is used.
                displayName: moss_country_code
              tax_region?:
                type: string
                description: Tax region key
                displayName: tax_region
              start_month?:
                type: string
                description: Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
                displayName: start_month
              end_month?:
                type: string
                description: Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
                displayName: end_month
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getSettlementSummaryOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
      /{quarter}:
        uriParameters:
          quarter:
            type: string
            description: Quarter in yyyy-MM format. If start-date and end-date are provided, quarter is ignored and should be set to 'range'.
            displayName: quarter
        get:
          displayName: Fetch settlement
          queryParameters:
            format?:
              type: string
              description: Output format. 'csv' value is accepted as well
              displayName: format
            moss_country_code?:
              type: string
              description: 'MOSS country code, used to determine currency/region.
                If ommited, merchant default setting is used. Deprecated: please use
                tax-country-code.'
              displayName: moss_country_code
            tax_country_code?:
              type: string
              description: 'Tax entity country code, used to determine currency/region. '
              displayName: tax_country_code
            currency_code?:
              type: string
              description: ISO 3-letter currency code, e.g. EUR or USD. If provided, all amounts will be coerced for this currency. Defaults to region's currency code.
              displayName: currency_code
            moss_tax_id?:
              type: string
              description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.
              displayName: moss_tax_id
            tax_id?:
              type: string
              description: MOSS-assigned tax ID - if not provided, merchant's national tax number will be used. Deprecated, please use tax-id.
              displayName: tax_id
            start_month?:
              type: string
              description: Period start month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
              displayName: start_month
            end_month?:
              type: string
              description: Period end month in yyyy-MM format. Either quarter or start-month and end-month have to be provided.
              displayName: end_month
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getSettlementOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
    /stats:
      /settlement:
        /by_country:
          get:
            displayName: Settlement by country
            queryParameters:
              date_from:
                type: string
                description: Date from in yyyy-MM format.
                displayName: date_from
              date_to:
                type: string
                description: Date to in yyyy-MM format.
                displayName: date_to
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getSettlementStatsByCountryOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        /by_taxation_type:
          get:
            displayName: Settlement by tax type
            queryParameters:
              date_from:
                type: string
                description: Date from in yyyy-MM format.
                displayName: date_from
              date_to:
                type: string
                description: Date to in yyyy-MM format.
                displayName: date_to
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getSettlementStatsByTaxationTypeOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        /daily:
          get:
            displayName: Settlement stats over time
            queryParameters:
              interval:
                type: string
                description: Interval type - day, week, month.
                displayName: interval
              date_from:
                type: string
                description: Date from in yyyy-MM format.
                displayName: date_from
              date_to:
                type: string
                description: Date to in yyyy-MM format.
                displayName: date_to
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getDailySettlementStatsOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
      /transactions:
        /by_country:
          get:
            displayName: Settlement by country
            queryParameters:
              global_currency_code?:
                type: string
                description: Global currency code to use for conversion - in addition to country's currency if rate is available. Conversion is indicative and based on most-recent rate from ECB.
                displayName: global_currency_code
              date_from:
                type: string
                description: Date from in yyyy-MM format.
                displayName: date_from
              date_to:
                type: string
                description: Date to in yyyy-MM format.
                displayName: date_to
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: getTransactionsStatsByCountryOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        get:
          displayName: Transaction stats
          queryParameters:
            date_from:
              type: string
              description: Date from in yyyy-MM format.
              displayName: date_from
            date_to:
              type: string
              description: Date to in yyyy-MM format.
              displayName: date_to
            interval?:
              type: string
              description: Interval. Accepted values are 'day', 'week' and 'month'.
              displayName: interval
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getTransactionsStatsOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
    /tax:
      /calculate:
        get:
          displayName: Simple tax
          queryParameters:
            product_type?:
              type: string
              description: 'Product type, according to dictionary /dictionaries/product_types. '
              displayName: product_type
            invoice_address_city?:
              type: string
              description: Invoice address/postal_code
              displayName: invoice_address_city
            buyer_credit_card_prefix?:
              type: string
              description: First 6 digits of buyer's credit card prefix.
              displayName: buyer_credit_card_prefix
            currency_code:
              type: string
              description: Currency code for transaction - e.g. EUR.
              displayName: currency_code
            invoice_address_region?:
              type: string
              description: Invoice address/region
              displayName: invoice_address_region
            unit_price?:
              type: number
              description: Unit price.
              displayName: unit_price
            quantity?:
              type: number
              description: Quantity Defaults to 1.
              displayName: quantity
            buyer_tax_number?:
              type: string
              description: ' Buyer''s tax number - EU VAT number for example. If using
                EU VAT number, it is possible to provide country code in it (e.g.
                IE1234567X) or simply use billing_country_code field for that. In
                the first case, if billing_country_code value was provided, it will
                be overwritten with country code value extracted from VAT number -
                but only if the VAT has been verified properly.'
              displayName: buyer_tax_number
            force_country_code?:
              type: string
              description: Two-letter ISO country code, e.g. FR. Use it to force country code for tax calculation.
              displayName: force_country_code
            order_date?:
              type: string
              description: Order date in yyyy-MM-dd format, in merchant's timezone. If provided by the API caller, no timezone conversion is performed. Default value is current date and time. When using public token, the default value is used.
              displayName: order_date
            amount?:
              type: number
              description: Amount. Required if total amount or both unit price and quantity are not provided.
              displayName: amount
            billing_country_code?:
              type: string
              description: Billing two letter ISO country code.
              displayName: billing_country_code
            invoice_address_postal_code?:
              type: string
              description: Invoice address/postal_code
              displayName: invoice_address_postal_code
            total_amount?:
              type: number
              description: Total amount. Required if amount or both unit price and quantity are not provided.
              displayName: total_amount
            tax_deducted?:
              type: boolean
              description: If the transaction is in a country supported by Taxamo, but the tax is not calculated due to merchant settings or EU B2B transaction for example.
              displayName: tax_deducted
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: calculateSimpleTaxOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
        post:
          displayName: Calculate tax
          body:
            application/json: calculateTaxIn
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: calculateTaxOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      /location:
        /calculate:
          get:
            displayName: Calculate location
            queryParameters:
              billing_country_code?:
                type: string
                description: Billing two letter ISO country code.
                displayName: billing_country_code
              buyer_credit_card_prefix?:
                type: string
                description: First 6 digits of buyer's credit card prefix.
                displayName: buyer_credit_card_prefix
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: calculateTaxLocationOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
      /vat_numbers:
        /{tax_number}:
          uriParameters:
            tax_number:
              type: string
              description: Tax number
              displayName: tax_number
          /validate:
            get:
              displayName: Validate VAT number
              queryParameters:
                country_code?:
                  type: string
                  description: Two-letter ISO country code.
                  displayName: country_code
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: validateTaxNumberOut
                400:
                  description: Validation failed, see JSON body response for details.
                401:
                  description: Incorrect token
    /transactions:
      /{key}:
        uriParameters:
          key:
            type: string
            description: Transaction key
            displayName: key
        /confirm:
          post:
            displayName: Confirm transaction
            body:
              application/json: confirmTransactionIn
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: confirmTransactionOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        /invoice:
          /refunds:
            /{refund_note_number}:
              uriParameters:
                refund_note_number:
                  type: string
                  description: Refund note id.
                  displayName: refund_note_number
              /send_email:
                post:
                  displayName: Email credit note
                  body:
                    application/json: emailRefundIn
                  responses:
                    200:
                      description: OK
                      body:
                        application/json:
                          type: emailRefundOut
                    400:
                      description: Validation failed, see JSON body response for details.
                    401:
                      description: Incorrect token
          /send_email:
            post:
              displayName: Email invoice
              body:
                application/json: emailInvoiceIn
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: emailInvoiceOut
                400:
                  description: Validation failed, see JSON body response for details.
                401:
                  description: Incorrect token
        /payments:
          /capture:
            post:
              displayName: Capture payment
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: capturePaymentOut
                400:
                  description: Validation failed, see JSON body response for details.
                401:
                  description: Incorrect token
          get:
            displayName: List payments
            queryParameters:
              limit?:
                type: string
                description: Max record count (no more than 100, defaults to 10).
                displayName: limit
              offset?:
                type: string
                description: How many records need to be skipped, defaults to 0.
                displayName: offset
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: listPaymentsOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
          post:
            displayName: Register a payment
            body:
              application/json: createPaymentIn
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: createPaymentOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        /refunds:
          get:
            displayName: Get transaction refunds
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: listRefundsOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
          post:
            displayName: Create a refund
            body:
              application/json: createRefundIn
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: createRefundOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        /unconfirm:
          post:
            displayName: Un-confirm the transaction
            body:
              application/json: unconfirmTransactionIn
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: unconfirmTransactionOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        get:
          displayName: Retrieve transaction data.
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: getTransactionOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
        delete:
          displayName: Delete transaction
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: cancelTransactionOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
        put:
          displayName: Update transaction
          body:
            application/json: updateTransactionIn
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: updateTransactionOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
      get:
        displayName: Browse transactions
        queryParameters:
          filter_text?:
            type: string
            description: Filtering expression
            displayName: filter_text
          offset?:
            type: integer
            description: Offset
            displayName: offset
          has_note?:
            type: boolean
            description: Return only transactions with a note field set.
            displayName: has_note
          key_or_custom_id?:
            type: string
            description: Taxamo provided transaction key or custom id
            displayName: key_or_custom_id
          currency_code?:
            type: string
            description: Three letter ISO currency code.
            displayName: currency_code
          order_date_to?:
            type: string
            description: Order date to in yyyy-MM-dd format.
            displayName: order_date_to
          sort_reverse?:
            type: boolean
            description: If true, results are sorted in descending order.
            displayName: sort_reverse
          limit?:
            type: integer
            description: Limit (no more than 1000, defaults to 100).
            displayName: limit
          invoice_number?:
            type: string
            description: Transaction invoice number.
            displayName: invoice_number
          tax_country_codes?:
            type: string
            description: Comma separated list of two letter ISO tax country codes.
            displayName: tax_country_codes
          statuses?:
            type: string
            description: Comma separated list of of transaction statuses. 'N' - unconfirmed transaction, 'C' - confirmed transaction.
            displayName: statuses
          original_transaction_key?:
            type: string
            description: Taxamo provided original transaction key
            displayName: original_transaction_key
          order_date_from?:
            type: string
            description: Order date from in yyyy-MM-dd format.
            displayName: order_date_from
          total_amount_greater_than?:
            type: string
            description: Return only transactions with total amount greater than given number. Transactions with total amount equal to a given number (e.g. 0) are not returned.
            displayName: total_amount_greater_than
          format?:
            type: string
            description: Output format - supports 'csv' value for this operation.
            displayName: format
          total_amount_less_than?:
            type: string
            description: Return only transactions with total amount less than a given number. Transactions with total amount equal to a given number (e.g. 1) are not returned.
            displayName: total_amount_less_than
          tax_country_code?:
            type: string
            description: Two letter ISO tax country code.
            displayName: tax_country_code
        responses:
          200:
            description: OK
            body:
              application/json:
                type: listTransactionsOut
          400:
            description: Validation failed, see JSON body response for details.
          401:
            description: Incorrect token
      post:
        displayName: Store transaction
        body:
          application/json: createTransactionIn
        responses:
          200:
            description: OK
            body:
              application/json:
                type: createTransactionOut
          400:
            description: Validation failed, see JSON body response for details.
          401:
            description: Incorrect token
    /verification:
      /sms:
        /{token}:
          uriParameters:
            token:
              type: string
              description: Provided token.
              displayName: token
          get:
            displayName: Verify SMS token
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: verifySMSTokenOut
              400:
                description: Validation failed, see JSON body response for details.
              401:
                description: Incorrect token
        post:
          displayName: Create SMS token
          body:
            application/json: createSMSTokenIn
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: createSMSTokenOut
            400:
              description: Validation failed, see JSON body response for details.
            401:
              description: Incorrect token
