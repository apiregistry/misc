#%RAML 1.0
title: GoToWebinar
version: 1.0.0
baseUri: api.citrixonline.com/G2W/rest
description: The Citrix GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  AudioType:
    type: string
    description: How to connect to the webinar's audio conference
    enum:
    - PSTN
    - VOIP
    - Hybrid
    - Private
  TollCountries:
    type: string
    description: Defines in which countries toll PSTN numbers are available.
    enum:
    - AT
    - AU
    - BE
    - CA
    - CH
    - DE
    - DK
    - ES
    - FI
    - FR
    - GB
    - IE
    - IT
    - NL
    - 'NO'
    - NZ
    - SE
    - US
  TollFreeCountries:
    type: string
    description: Countries in which toll free PSTN numbers are available.
    enum:
    - AE
    - AR
    - AT
    - AU
    - BE
    - BG
    - BH
    - BR
    - BY
    - CA
    - CH
    - CL
    - CN
    - CO
    - CZ
    - DE
    - DK
    - ES
    - FI
    - FR
    - GB
    - GR
    - HK
    - HU
    - ID
    - IE
    - IL
    - IN
    - IS
    - IT
    - JP
    - KR
    - LU
    - MX
    - MY
    - NL
    - 'NO'
    - NZ
    - PA
    - PE
    - PH
    - PL
    - PT
    - RO
    - RU
    - SA
    - SE
    - SG
    - TH
    - TR
    - TW
    - UA
    - US
    - UY
    - VN
    - ZA
  AccessCodes:
    type: object
    properties:
      attendee:
        type: string
        description: Access code for attendees
      organizer:
        type: string
        description: Access code for the organizer
      panelist:
        type: string
        description: Access code for panelists
    description: Describes the access codes for organizer, panelists and attendees
  AnswerToAttendeeQuestion:
    type: object
    properties:
      answer:
        type: string
        description: An answer given to a question asked by an attendee during a webinar session
      answeredBy:
        type: string
        description: The key of the organizer that answered the attendee's question
    description: Describes an answer to a question asked by an attendee during a webinar session.
  Attendance:
    type: object
    properties:
      joinTime:
        type: datetime
        description: The time the attendee joined a webinar session
      leaveTime:
        type: datetime
        description: The time the attendee left a webinar session
    description: Describes the times the attendee joined and left a webinar session.
  AttendanceStatistics:
    type: object
    properties:
      averageAttendanceTimeSeconds:
        type: number
        description: Average attendance time in seconds
        format: float
      averageAttentiveness:
        type: number
        description: Average based on the focus of the attendees Viewer during the webinar session
        format: float
      averageInterestRating:
        type: number
        description: Numerical value 1-100 (100 being most interested) indicating the average interest rating of the webinar attendees
        format: float
      percentageAttendance:
        type: number
        description: The percentage of registrants that actually attended the webinar session
        format: float
      registrantCount:
        type: integer
        description: The number of registrations for the webinar
        format: int32
    description: Describes attendance metrics for a webinar session.
  Attendee:
    type: object
    properties:
      attendance:
        type: array
        description: The list of times the attendee joined and left the webinar session
        items:
          type: Attendance
      attendanceTimeInSeconds:
        type: integer
        description: The total attendance time in seconds
        format: int64
      email:
        type: string
        description: The attendee's email address
      firstName:
        type: string
        description: The attendee's first name
      lastName:
        type: string
        description: The attendee's last name
      registrantKey:
        type: integer
        description: The key of the webinar attendee
        format: int64
      sessionKey:
        type: integer
        description: The unique key of the webinar session
        format: int64
    description: Describes the attendee of a webinar
  AttendeeQuestion:
    type: object
    properties:
      answers:
        type: array
        description: Answer to a question of an attendee and key of the organizer that answered
        items:
          type: AnswerToAttendeeQuestion
      askedBy:
        type: string
        description: The email address of the attendee that asked the question
      question:
        type: string
        description: The question asked by the attendee
    description: Describes the question asked by an attendee during a webinar session; includes the answers given to it.
  Audio:
    type: object
    properties:
      confCallNumbers?:
        type: object
        properties:
          //:
            type: CallNumbers
        description: 'The conference call numbers and access codes per country. This
          will be returned only, if ''type'' is not set to ''Private''. Example for
          this object: "confCallNumbers":{"CA":{"accessCodes":{"attendee":"159-309-045","organizer":"791-426-085","panelist":"690-270-339"},"tollFree":"1
          888 455 4198"},"FI":{"accessCodes":{"attendee":"159-309-045","organizer":"791-426-085","panelist":"690-270-339"},"toll":"+358
          (0) 338 79 4198"},"US":{"accessCodes":{"attendee":"159-309-045","organizer":"791-426-085","panelist":"690-270-339"},"toll":"+1
          (805) 879-4198","tollFree":"1 888 455 4198"}}'
      privateInfo?:
        type: PrivateInfo
        description: Phone numbers for an own conference call service
      type:
        type: AudioType
        description: Indicates how to connect to the webinar's audio conference. The value of this field determines if other fields appear in the response or not
    description: Describes the audio/conferencing information for a webinar.
  AudioUpdate:
    type: object
    properties:
      privateInfo?:
        type: PrivateInfoUpdate
        description: Defines the audio data for an own conferencing system
      pstnInfo?:
        type: PstnInfoUpdate
        description: Defines via two-letter Alpha-2-code which toll and toll-free PSTN numbers are available per country
      type:
        type: AudioType
        description: Indicates how to connect to the webinar's audio conference
    description: The audio/conferencing settings
  CallNumbers:
    type: object
    properties:
      accessCodes:
        type: AccessCodes
        description: Describes the access codes for organizer, panelists and attendees.
      toll:
        type: string
        description: Conference number for toll calls.
      tollFree?:
        type: string
        description: Conference number for toll-free calls.
    description: Conference call numbers per country.
  Coorganizer:
    type: object
    properties:
      email:
        type: string
        description: The co-organizer's email address
      external:
        type: boolean
        description: If the co-organizer has no GoToWebinar account, this value is set to 'true'
      givenName:
        type: string
        description: The co-organizer's given name
      joinLink:
        type: string
        description: The co-organizer's join link
      memberKey:
        type: string
        description: The co-organizer's organizer key. A new member key is created for external co-organizers
      surname:
        type: string
        description: The co-organizer's surname. For external co-organizers this parameter is not returned
    description: Describes a webinar co-organizer. A co-organizer without a GoToWebinar account is marked as external and is returned without a surname
  CoorganizerReqCreate:
    type: object
    properties:
      email?:
        type: string
        description: The co-organizer's email address. This parameter has to be passed only, if 'external' is set to 'true'
      external:
        type: boolean
        description: If the co-organizer has no GoToWebinar account, this value has to be set to 'true'
      givenName?:
        type: string
        description: The co-organizer's given name. This parameter has to be passed only, if 'external' is set to 'true'
      organizerKey?:
        type: string
        description: The co-organizer's organizer key. This parameter has to be passed only, if 'external' is set to 'false'
    description: 'Details used for creating a co-organizer for a webinar. '
  CreatedPanelist:
    type: object
    properties:
      email:
        type: string
        description: The panelist's email address
      joinLink:
        type: string
        description: The panelist's join link
      name:
        type: string
        description: The panelist's name
      panelistKey:
        type: string
        description: The panelist's key
    description: Describes a created panelist
  CreatedWebinar:
    type: object
    properties:
      webinarKey:
        type: string
        description: The unique key of the webinar.
    description: Describes a newly created webinar.
  CustomAnswers:
    type: object
    properties:
      answer:
        type: string
        description: Answer to a custom question when registering
      question:
        type: string
        description: Custom question for registering
    description: Answers to custom questions of the registrant
  DateTimeRange:
    type: object
    properties:
      endTime:
        type: datetime
        description: The ending time of an interval, e.g. 2015-07-13T22:00:00Z
      startTime:
        type: datetime
        description: The starting time of an interval, e.g. 2015-07-13T10:00:00Z
    description: A pair of DateTime values, the first of which serves as a start time and the second as an end time of an interval.
  HistoricalWebinar:
    type: object
    properties:
      description:
        type: string
        description: A short description of the webinar
      organizerKey:
        type: integer
        description: The key of the webinar organizer
        format: int64
      subject:
        type: string
        description: The webinar subject
      timeZone:
        type: string
        description: The timezone where the webinar is taking place
      times:
        type: array
        description: Array with startTime and endTime for the webinar sessions
        items:
          type: DateTimeRange
      webinarID:
        type: string
        description: The 9-digit webinar ID
      webinarKey:
        type: integer
        description: The unique key of the webinar
        format: int64
    description: Describes a completed webinar
  Panelist:
    type: object
    properties:
      email:
        type: string
        description: The panelist's email address
      firstName:
        type: string
        description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced by the field 'name'
      joinLink:
        type: string
        description: The co-organizer's join link
      lastName:
        type: string
        description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced by the field 'name'
      name:
        type: string
        description: The panelist's name
      panelistId:
        type: integer
        description: The panelist's ID
        format: int64
    description: Describes a webinar session panelist
  PanelistReqCreate:
    type: object
    properties:
      email:
        type: string
        description: The panelist's email address
      name:
        type: string
        description: The panelist's name
    description: Describes a single panelist
  Poll:
    type: object
    properties:
      numberOfResponses:
        type: integer
        description: The total number of responses received for this poll or survey
        format: int32
      question:
        type: string
        description: The poll or survey question asked by the webinar organizer
      responses:
        type: array
        description: The responses given by the attendees to the poll or survey
        items:
          type: PollResponse
    description: A poll or survey launched by an organizer during or after a webinar session; includes the responses given to it by the attendees.
  PollAnswer:
    type: object
    properties:
      answer:
        type: string
        description: The answer given to the poll or survey question
      question:
        type: string
        description: The poll or survey question
    description: Describes the answer given by a webinar attendee to a poll or survey launched by an organizer.
  PollResponse:
    type: object
    properties:
      percentage:
        type: number
        description: The percentage of responses that favored this particular option
        format: float
        maximum: 100
        minimum: 0
      text:
        type: string
        description: The text of the response/option to a poll or survey
    description: One of the potential responses/options to a poll or survey launched by an organizer during a webinar session.
  PollsAndSurveysStatistics:
    type: object
    properties:
      percentagePollsCompleted:
        type: number
        description: The percentage of polls completed by the attendees
        format: float
      percentageSurveysCompleted:
        type: number
        description: The percentage of surveys completed by the attendees
        format: float
      pollCount:
        type: integer
        description: The number of polls launched at a webinar session
        format: int32
      questionsAsked:
        type: integer
        description: The number of questions asked at a webinar session
        format: int32
      surveyCount:
        type: number
        description: The percentage of surveys launched at a webinar session
        format: float
    description: Details on the polls and surveys for a webinar session.
  PrivateInfo:
    type: object
    properties:
      attendee:
        type: string
        description: Text for the panelist when using an own conference call service
      organizer?:
        type: string
        description: Text for the organizer when using an own conference call service
      panelist?:
        type: string
        description: Text for the panelist when using an own conference call service
    description: Phone numbers for an own conference call service.
  PrivateInfoUpdate:
    type: object
    properties:
      attendee:
        type: string
        description: Attendee phone number for own conference call system
      organizer?:
        type: string
        description: Organizer phone number for own conference call system
      panelist?:
        type: string
        description: Panelist phone number for own conference call system
    description: Defines the audio data for an own conferencing system
  PstnInfoUpdate:
    type: object
    properties:
      tollCountries?:
        type: array
        description: Defines in which countries toll PSTN numbers are available. Possible values are AT, AU, BE, CA, CH, DE, DK, ES, FI, FR, GB, IE, IT, NL, NO, NZ, SE, US
        items:
          type: TollCountries
      tollFreeCountries?:
        type: array
        description: Defines in which countries toll free PSTN numbers are available. Possible values are AE, AR, AT, AU, BE, BG, BH, BR, BY, CA, CH, CL, CN, CO, CZ, DE, DK, ES, FI, FR, GB, GR, HK, HU, ID, IE, IL, IN, IS, IT, JP, KR, LU, MX, MY, NL, NO, NZ, PA, PE, PH, PL, PT, RO, RU, SA, SE, SG, TH, TR, TW, UA, US, UY, VN, ZA
        items:
          type: TollFreeCountries
    description: Defines the audio/conferencing settings for the specified webinar. It required to pass 'tollFreeCountries' or 'tollCountries' or both.
  Registrant:
    type: object
    properties:
      email:
        type: string
        description: The registrant's email address
      firstName:
        type: string
        description: The registrant's first name
      joinUrl:
        type: string
        description: The URL the registrant will use to join the webinar
      lastName:
        type: string
        description: The registrant's last name
      registrantKey:
        type: integer
        description: The registrant's key
        format: int64
      registrationDate:
        type: datetime
        description: The registration date and time
      status:
        type: string
        description: The registration status
        enum:
        - APPROVED
        - DENIED
        - WAITING
      timeZone:
        type: string
        description: The time zone where the webinar will take place
    description: Describes a webinar registrant
  RegistrantCreated:
    type: object
    properties:
      joinUrl:
        type: string
        description: The URL the registrant will use to join the webinar.
      registrantKey:
        type: integer
        description: The registrant's key
        format: int64
    description: Describes a newly created webinar registrant.
  RegistrantDetailed:
    type: object
    properties:
      address?:
        type: string
        description: The registrant's address
      city?:
        type: string
        description: The registrant's city
      country?:
        type: string
        description: The registrant's country
      email:
        type: string
        description: The registrant's email address
      employeeCount?:
        type: string
        description: The size in employees of the registrant's organization
      firstName:
        type: string
        description: The registrant's first name
      implementationTimeFrame?:
        type: string
        description: The time frame within which the product will be purchased
      industry?:
        type: string
        description: The type of industry the registrant's organization belongs to
      jobTitle?:
        type: string
        description: The registrant's job title
      joinUrl:
        type: string
        description: The URL the registrant will use to join the webinar
      lastName:
        type: string
        description: The registrant's last name
      numberOfEmployees?:
        type: string
        description: The size in employees of the registrant's organization
      organization?:
        type: string
        description: The registrant's organization
      phone?:
        type: string
        description: The registrant's phone
      purchasingRole?:
        type: string
        description: The registrant's role in purchasing the product
      purchasingTimeFrame?:
        type: string
        description: The time frame within which the product will be purchased
      questionsAndComments?:
        type: string
        description: Any questions or comments the registrant made at the time of registration
      registrantKey:
        type: integer
        description: The registrant's key
        format: int64
      registrationDate:
        type: datetime
        description: The registration date and time
      responses?:
        type: array
        description: Responses to custom questions
        items:
          type: CustomAnswers
      source?:
        type: string
        description: The source that led to the registration. This can be any string like 'Newsletter 123' or 'Marketing campaign ABC'
      state?:
        type: string
        description: The registrant's state (US only)
      status:
        type: string
        description: The registration status
        enum:
        - APPROVED
        - DENIED
        - WAITING
      timeZone:
        type: string
        description: The time zone where the webinar will take place
      type?:
        type: string
        description: The type is REGULAR for 'One session' and 'Sequence' webinars. For webinar series this parameter is not passed
        enum:
        - REGULAR
      unsubscribed?:
        type: boolean
        description: Indicates whether the registrant opted-out from receiving other emails from this webinar's organizer
      zipCode?:
        type: string
        description: The registrant's zip (post) code
    description: Detailed description of a webinar registrant with all registration fields.
  RegistrantFields:
    type: object
    properties:
      address?:
        type: string
        description: The registrant's address
      city?:
        type: string
        description: The registrant's city
      country?:
        type: string
        description: The registrant's country
      email:
        type: string
        description: The registrant's email address
      firstName:
        type: string
        description: The registrant's first name
      industry?:
        type: string
        description: The type of industry the registrant's organization belongs to
      jobTitle?:
        type: string
        description: The registrant's job title
      lastName:
        type: string
        description: The registrant's last name
      numberOfEmployees?:
        type: string
        description: The size in employees of the registrant's organization
      organization?:
        type: string
        description: The registrant's organization
      phone?:
        type: string
        description: The registrant's phone
      purchasingRole?:
        type: string
        description: The registrant's role in purchasing the product
      purchasingTimeFrame?:
        type: string
        description: The time frame within which the product will be purchased
      questionsAndComments?:
        type: string
        description: Any questions or comments the registrant made at the time of registration
      responses?:
        type: array
        description: Set the answers of all questions
        items:
          type: RegistrantQAResponse
      source?:
        type: string
        description: The source that led to the registration. This can be any string like 'Newsletter 123' or 'Marketing campaign ABC'
      state?:
        type: string
        description: The registrant's state (US only)
      zipCode?:
        type: string
        description: The registrant's zip (post) code
    description: The registrant details. To get all possible values run the API call 'Get registration fields' which is also part of this documentation.
  RegistrantQAResponse:
    type: object
    properties:
      answerKey?:
        type: integer
        description: The numeric key of the answer to a multiple-choice question.
        format: int64
      questionKey:
        type: integer
        description: The unique key of the question
        format: int64
      responseText?:
        type: string
        description: Answer of the question.
    description: 'Describes a completed registration question for a webinar registrant.
      If you use ''Multiple choice'' questions the response contains the numeric answerKey,
      otherwise the answer text. Example:<br>{<br>  "firstName": "First",<br>  "lastName":
      "Last",<br>  "email": "First.Last@example.com",<br>  "responses": [{<br>      "questionKey":
      17023549,<br>      "responseText": "This is a short answer"},{<br>      "questionKey":
      17023550,<br>      "answerKey": 17023553}  ]<br>}'
  RegistrationAnswer:
    type: object
    properties:
      answer:
        type: string
        description: The answer value
      answerKey:
        type: integer
        description: The answer key
        format: int64
    description: Describes an answer to a multiple choice custom registration field.
  RegistrationField:
    type: object
    properties:
      answers?:
        type: array
        description: List of choices for a multiple choice registration field
        items:
          type: string
      field:
        type: string
        description: The name of the registration field
      maxSize:
        type: integer
        description: The character size of the custom registration field (max 128)
        format: int32
      required:
        type: boolean
        description: Indicates whether the custom registration field is compulsory
    description: Describes a field for a webinar registration.
  RegistrationFields:
    type: object
    properties:
      fields:
        type: array
        description: The default fields the organizer has selected for the webinar registration form
        items:
          type: RegistrationField
      questions:
        type: array
        description: Custom fields created by the organizer for the webinar registration form
        items:
          type: RegistrationQuestion
    description: The fields to be completed on the webinar registration form.
  RegistrationQuestion:
    type: object
    properties:
      answers?:
        type: array
        description: The answers to a multiple choice custom registration field
        items:
          type: RegistrationAnswer
      maxSize:
        type: integer
        description: The character size of the custom registration field (max 1000)
        format: int32
      question:
        type: string
        description: The value (text) of the custom registration field
      questionKey:
        type: integer
        description: The unique key of the custom registration field
        format: int64
      required:
        type: boolean
        description: Indicates whether the custom registration field is compulsory
      type:
        type: string
        description: Indicates whether the custom registration field requires a single short answer or whether it is a multiple choice question
        enum:
        - multipleChoice
        - shortAnswer
    description: Describes a custom field for a webinar registration.
  Session:
    type: object
    properties:
      endTime:
        type: datetime
        description: The ending time of the webinar session
      registrantsAttended:
        type: integer
        description: The number of registrants who attended the webinar session
        format: int32
      sessionKey:
        type: integer
        description: The unique key of the webinar session
        format: int64
      startTime:
        type: datetime
        description: The starting time of the webinar session
      webinarID:
        type: string
        description: The 9-digit webinar ID
      webinarKey:
        type: integer
        description: The unique key of the webinar
        format: int64
    description: Describes a completed webinar session.
  SessionPerformance:
    type: object
    properties:
      attendance:
        type: AttendanceStatistics
        description: Attendance statistics for a webinar session
      pollsAndSurveys:
        type: PollsAndSurveysStatistics
        description: Polls and surveys for a webinar session
    description: Describes performance details for webinar sessions
  UpcomingWebinar:
    type: object
    properties:
      description:
        type: string
        description: A short description of the webinar
      inSession:
        type: boolean
        description: Indicates whether there is a webinar session currently in progress
      organizerKey:
        type: integer
        description: The key of the webinar organizer
        format: int64
      registrationUrl:
        type: string
        description: The URL the webinar invitees can use to register
      subject:
        type: string
        description: The webinar subject
      timeZone:
        type: string
        description: The timezone where the webinar is taking place
      times:
        type: array
        description: Array with startTime and endTime for the webinar sessions
        items:
          type: DateTimeRange
      webinarID:
        type: string
        description: The 9-digit webinar ID
      webinarKey:
        type: integer
        description: The unique key of the webinar
        format: int64
    description: Describes a scheduled webinar
  Webinar:
    type: object
    properties:
      description:
        type: string
        description: A short description of the webinar
      inSession:
        type: boolean
        description: Indicates whether there is a webinar session currently in progress
      numberOfRegistrants:
        type: integer
        description: The number of registrants at the webinar
        format: int32
      organizerKey:
        type: integer
        description: The key of the webinar organizer
        format: int64
      registrationUrl:
        type: string
        description: The URL the webinar invitees can use to register
      subject:
        type: string
        description: The webinar subject
      timeZone:
        type: string
        description: The timezone where the webinar is taking place
      times:
        type: array
        description: Array with startTime and endTime for the webinar sessions
        items:
          type: DateTimeRange
      webinarID:
        type: string
        description: The 9-digit webinar ID
      webinarKey:
        type: integer
        description: The unique key of the webinar
        format: int64
    description: Describes a scheduled webinar
  WebinarByKey:
    type: object
    properties:
      description:
        type: string
        description: A short description of the webinar
      inSession:
        type: boolean
        description: Indicates whether there is a webinar session currently in progress
      numberOfOpenedInvitations:
        type: integer
        description: The number of recipients who opened the invitation email to register for the webinar
        format: int32
      numberOfRegistrants:
        type: integer
        description: The number of registrants at the webinar
        format: int32
      numberOfRegistrationLinkClicks:
        type: integer
        description: The number of recipients who clicked on the link to register for the webinar
        format: int32
      organizerKey:
        type: integer
        description: The key of the webinar organizer
        format: int64
      registrationUrl:
        type: string
        description: The URL the webinar invitees can use to register
      subject:
        type: string
        description: The webinar subject.
      timeZone:
        type: string
        description: The timezone where the webinar is taking place
      times:
        type: array
        description: Array with startTime and endTime for the webinar sessions
        items:
          type: DateTimeRange
      webinarID:
        type: string
        description: The 9-digit webinar ID
      webinarKey:
        type: integer
        description: The unique key of the webinar
        format: int64
    description: Describes a completed webinar
  WebinarReqCreate:
    type: object
    properties:
      description?:
        type: string
        description: A short description of the webinar (2048 characters maximum)
      isPasswordProtected?:
        type: boolean
        description: A boolean flag indicating if the webinar is password protected or not.
      subject:
        type: string
        description: The name/subject of the webinar (128 characters maximum)
      timeZone?:
        type: string
        description: The time zone where the webinar is taking place (must be a valid time zone ID, see https://developer.citrixonline.com/citrix-rest-api-date-formats-and-time-zones). If this parameter is not passed, the timezone of the organizer's profile will be used
      times:
        type: array
        description: Array with startTime and endTime for webinar. Since this call creates single session webinars, the array can only contain a single pair of startTime and endTime
        items:
          type: DateTimeRange
      type?:
        type: string
        description: 'Specifies the webinar type. The default type value is "single_session",
          which is used to create a single webinar session. The possible values are
          "single_session", "series", "sequence". If type is set to "single_session",
          a single webinar session is created. If type is set to "series", a webinar
          series is created. In this case 2 or severals timeframes must be specified
          in the body. Example: "times": [{"startTime": "...", "endTime": "..."},{"startTime":
          "...", "endTime": "..."},{"startTime": "...", "endTime": "..."}. If type
          is set to "sequence" a sequence of webinars is created. The times object
          in the body must be replaced by the "recurrenceStart" object. Example: "recurrenceStart":
          {"startTime":"2012-06-12T16:00:00Z", "endTime": "2012-06-12T17:00:00Z" }.  The
          "recurrenceEnd" and "recurrencePattern" body parameter must be specified.
          Example: , "recurrenceEnd": "2012-07-10", "recurrencePattern": "daily".'
    description: The webinar details
  WebinarReqUpdate:
    type: object
    properties:
      description?:
        type: string
        description: A description of the webinar (2048 characters maximum)
      locale?:
        type: string
        description: The webinar language
        enum:
        - en_US
        - de_DE
        - es_ES
        - fr_FR
        - it_IT
        - zh_CN
      subject?:
        type: string
        description: The name/subject of the webinar (128 characters maximum)
      timeZone?:
        type: string
        description: The time zone where the webinar is taking place (must be a valid time zone ID, see https://developer.citrixonline.com/citrix-rest-api-date-formats-and-time-zones). If this parameter is not passed, the timezone of the organizer's profile will be used
      times?:
        type: array
        description: Array with start and end time(s) for webinar
        items:
          type: DateTimeRange
    description: The webinar details
/organizers:
  /{organizerKey}:
    uriParameters:
      organizerKey:
        type: integer
        description: The key of the organizer
        displayName: organizerKey
        format: int64
    /historicalWebinars:
      get:
        description: Returns details for completed webinars for the specified organizer and completed webinars of other organizers where the specified organizer is a co-organizer.
        displayName: Get historical webinars
        queryParameters:
          fromTime:
            type: datetime
            description: A required start of datetime range in ISO8601 UTC format, e.g. 2015-07-13T10:00:00Z
            displayName: fromTime
          toTime:
            type: datetime
            description: A required end of datetime range in ISO8601 UTC format, e.g. 2015-07-13T22:00:00Z
            displayName: toTime
        headers:
          Authorization:
            type: string
            description: Access token
            displayName: Authorization
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: HistoricalWebinar
          400:
            description: Bad Request
          403:
            description: Forbidden
    /sessions:
      get:
        description: Retrieve all completed sessions of all the webinars of a given organizer.
        displayName: Get organizer sessions
        queryParameters:
          fromTime:
            type: datetime
            description: A required start of datetime range in ISO8601 UTC format, e.g. 2015-07-13T10:00:00Z
            displayName: fromTime
          toTime:
            type: datetime
            description: A required end of datetime range in ISO8601 UTC format, e.g. 2015-07-13T22:00:00Z
            displayName: toTime
          includes?:
            type: string
            description: 'Optional comma-delimited list to request additional information
              for each webinar session in the response. The supported values are:
              audio, attendees, attendeepolls, attendeesurveys, attendeequestions,
              attendeeinterestrating, panelists, webinar. The format is &include=audio,attendees,panelists'
            displayName: includes
        headers:
          Authorization:
            type: string
            description: Access token
            displayName: Authorization
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: Session
          400:
            description: Bad Request
          403:
            description: Forbidden
    /upcomingWebinars:
      get:
        description: Returns webinars scheduled for the future for the specified organizer and webinars of other organizers where the specified organizer is a co-organizer.
        displayName: Get upcoming webinars
        headers:
          Authorization:
            type: string
            description: Access token
            displayName: Authorization
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: UpcomingWebinar
          400:
            description: Bad Request
          403:
            description: Forbidden
    /webinars:
      /{webinarKey}:
        uriParameters:
          webinarKey:
            type: integer
            description: The key of the webinar
            displayName: webinarKey
            format: int64
        /attendees:
          get:
            description: Returns all attendees for all sessions of the specified webinar.
            displayName: Get attendees for all webinar sessions
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: Attendee
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
        /audio:
          get:
            description: Retrieves the audio/conferencing information for a specific webinar.
            displayName: Get audio information
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: Audio
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
          post:
            description: Updates the audio/conferencing settings for a specific webinar
            displayName: Update audio information
            queryParameters:
              notifyParticipants?:
                type: boolean
                description: Defines whether to send notifications to participants
                displayName: notifyParticipants
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            body:
              application/json: AudioUpdate
            responses:
              204:
                description: No Content
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
        /coorganizers:
          /{coorganizerKey}:
            uriParameters:
              coorganizerKey:
                type: integer
                description: The key of the internal or external co-organizer (memberKey)
                displayName: coorganizerKey
                format: int64
            /resendInvitation:
              post:
                description: Resends an invitation email to the specified co-organizer
                displayName: Resend invitation
                queryParameters:
                  external?:
                    type: boolean
                    description: By default only internal co-organizers (with a GoToWebinar account) will retrieve the resent invitation email. If you want to use this call for external co-organizers you have to set this parameter to 'true'.
                    displayName: external
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  204:
                    description: No Content (Invitation email was sent)
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            delete:
              description: Deletes an internal co-organizer specified by the coorganizerKey (memberKey).
              displayName: Delete co-organizer
              queryParameters:
                external?:
                  type: boolean
                  description: By default only internal co-organizers (with a GoToWebinar account) can be deleted. If you want to use this call for external co-organizers you have to set this parameter to 'true'.
                  displayName: external
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                204:
                  description: No Content (Co-organizer was deleted)
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not Found
          get:
            description: Returns the co-organizers for the specified webinar. The original organizer who created the webinar is filtered out of the list. If the webinar has no co-organizers, an empty array is returned. Co-organizers that do not have a GoToWebinar account are returned as external co-organizers. For those organizers no surname is returned.
            displayName: Get co-organizers
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: Coorganizer
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not Found
          post:
            description: Creates co-organizers for the specified webinar. This call requires the admin role. For co-organizers that have a GoToWebinar account you have to set the parameter 'external' to 'false'. In this case you have to pass the parameter 'organizerKey' only. For co-organizers that have no GoToWebinar account you have to set the parameter 'external' to 'true'. In this case you have to pass the parameters 'givenName' and 'email'. Since there is no parameter for 'surname' you should pass first and last name to the parameter 'givenName'.
            displayName: Create co-organizers
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            body:
              application/json:
                type: array
                items:
                  type: CoorganizerReqCreate
                description: The co-organizer details
            responses:
              201:
                description: Created
                body:
                  application/json:
                    type: array
                    items:
                      type: Coorganizer
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not Found
        /meetingtimes:
          get:
            description: Retrieves the meeting times for a webinar.
            displayName: Get webinar meeting times
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: DateTimeRange
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
        /panelists:
          /{panelistKey}:
            uriParameters:
              panelistKey:
                type: integer
                description: The key of the webinar panelist
                displayName: panelistKey
                format: int64
            /resendInvitation:
              post:
                description: Resend the panelist invitation email.
                displayName: Resend panelist invitation
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  204:
                    description: Created
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            delete:
              description: Removes a webinar panelist.
              displayName: Delete webinar panelist
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                204:
                  description: No content
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not found
          get:
            description: Retrieves all the panelists for a specific webinar.
            displayName: Get webinar panelists
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: Panelist
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
          post:
            description: Create panelists for a specified webinar
            displayName: Create Panelists
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            body:
              application/json:
                type: array
                items:
                  type: PanelistReqCreate
                description: Array of panelists
            responses:
              201:
                description: Created
                body:
                  application/json:
                    type: array
                    items:
                      type: CreatedPanelist
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not Found
        /performance:
          get:
            description: Gets performance details for all sessions of a specific webinar.
            displayName: Get performance for all webinar sessions
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: object
                    properties:
                      //:
                        type: SessionPerformance
                    description: Describes performance details for webinars
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
        /registrants:
          /fields:
            get:
              description: Retrieve required, optional registration, and custom questions for a specified webinar.
              displayName: Get registration fields
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: RegistrationFields
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not found
          /{registrantKey}:
            uriParameters:
              registrantKey:
                type: integer
                description: The key of the registrant
                displayName: registrantKey
                format: int64
            get:
              description: Retrieve registration details for a specific registrant.
              displayName: Get registrant
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: RegistrantDetailed
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not found
            delete:
              description: Removes a webinar registrant from current registrations for the specified webinar. The webinar must be a scheduled, future webinar.
              displayName: Delete registrant
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                204:
                  description: No content
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not found
          get:
            description: Retrieve registration details for all registrants of a specific webinar. Registrant details will not include all fields captured when creating the registrant. To see all data, use the API call 'Get Registrant'. Registrants can have one of the following states; <br>WAITING - registrant registered and is awaiting approval (where organizer has required approval), <br>APPROVED - registrant registered and is approved, and <br>DENIED - registrant registered and was denied.
            displayName: Get registrants
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: Registrant
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
          post:
            description: 'Register an attendee for a scheduled webinar. The response
              contains the registrantKey and join URL for the registrant. An email
              will be sent to the registrant unless the organizer turns off the confirmation
              email setting from the GoToWebinar website. Please note that you must
              provide all required fields including custom fields defined during the
              webinar creation. Use the API call ''Get registration fields'' to get
              a list of all fields, if they are required, and their possible values.
              At this time there are two versions of the ''Create Registrant'' call.
              The first version only accepts firstName, lastName, and email and ignores
              all other fields. If you have custom fields or want to capture additional
              information this version won''t work for you. The second version allows
              you to pass all required and optional fields, including custom fields
              defined when creating the webinar. To use the second version you must
              pass the header value ''Accept: application/vnd.citrix.g2wapi-v1.1+json''
              instead of ''Accept: application/json''. Leaving this header out results
              in the first version of the API call.'
            displayName: Create registrant
            queryParameters:
              resendConfirmation?:
                type: boolean
                description: Indicates whether the confirmation email should be resent when a registrant is re-registered. The default value is false.
                displayName: resendConfirmation
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
              Accept?:
                type: string
                description: Set to 'application/vnd.citrix.g2wapi-v1.1+json' to make a registration using fields (custom or default) additional to the basic ones.
                displayName: Accept
            body:
              application/json: RegistrantFields
            responses:
              201:
                description: Created
                body:
                  application/json:
                    type: RegistrantCreated
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not found
              409:
                description: The user is already registered
        /sessions:
          /{sessionKey}:
            uriParameters:
              sessionKey:
                type: integer
                description: The key of the webinar session
                displayName: sessionKey
                format: int64
            /attendees:
              /{registrantKey}:
                uriParameters:
                  registrantKey:
                    type: integer
                    description: The key of the registrant
                    displayName: registrantKey
                    format: int64
                /polls:
                  get:
                    description: Get poll answers from a particular attendee of a specific webinar session.
                    displayName: Get attendee poll answers
                    headers:
                      Authorization:
                        type: string
                        description: Access token
                        displayName: Authorization
                    responses:
                      200:
                        description: OK
                        body:
                          application/json:
                            type: array
                            items:
                              type: PollAnswer
                      400:
                        description: Bad Request
                      403:
                        description: Forbidden
                      404:
                        description: Not found
                /questions:
                  get:
                    description: Get questions asked by an attendee during a webinar session.
                    displayName: Get attendee questions
                    headers:
                      Authorization:
                        type: string
                        description: Access token
                        displayName: Authorization
                    responses:
                      200:
                        description: OK
                        body:
                          application/json:
                            type: array
                            items:
                              type: AttendeeQuestion
                      400:
                        description: Bad Request
                      403:
                        description: Forbidden
                      404:
                        description: Not found
                /surveys:
                  get:
                    description: Retrieve survey answers from a particular attendee during a webinar session.
                    displayName: Get attendee survey answers
                    headers:
                      Authorization:
                        type: string
                        description: Access token
                        displayName: Authorization
                    responses:
                      200:
                        description: OK
                        body:
                          application/json:
                            type: array
                            items:
                              type: PollAnswer
                      400:
                        description: Bad Request
                      403:
                        description: Forbidden
                      404:
                        description: Not found
                get:
                  description: Retrieve registration details for a particular attendee of a specific webinar session.
                  displayName: Get attendee
                  headers:
                    Authorization:
                      type: string
                      description: Access token
                      displayName: Authorization
                  responses:
                    200:
                      description: OK
                      body:
                        application/json:
                          type: Registrant
                    400:
                      description: Bad Request
                    403:
                      description: Forbidden
                    404:
                      description: Not found
              get:
                description: Retrieve details for all attendees of a specific webinar session.
                displayName: Get session attendees
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  200:
                    description: OK
                    body:
                      application/json:
                        type: array
                        items:
                          type: Attendee
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not found
            /performance:
              get:
                description: Get performance details for a session.
                displayName: Get session performance
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  200:
                    description: OK
                    body:
                      application/json:
                        type: SessionPerformance
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            /polls:
              get:
                description: Retrieve all collated attendee questions and answers for polls from a specific webinar session.
                displayName: Get session polls
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  200:
                    description: OK
                    body:
                      application/json:
                        type: array
                        items:
                          type: Poll
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            /questions:
              get:
                description: Retrieve questions and answers for a past webinar session.
                displayName: Get session questions
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  200:
                    description: OK
                    body:
                      application/json:
                        type: array
                        items:
                          type: AttendeeQuestion
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            /surveys:
              get:
                description: Retrieve surveys for a past webinar session.
                displayName: Get session surveys
                headers:
                  Authorization:
                    type: string
                    description: Access token
                    displayName: Authorization
                responses:
                  200:
                    description: OK
                    body:
                      application/json:
                        type: array
                        items:
                          type: Poll
                  400:
                    description: Bad Request
                  403:
                    description: Forbidden
                  404:
                    description: Not Found
            get:
              description: Retrieves attendance details for a specific webinar session that has ended. If attendees attended the session ('registrantsAttended'), specific attendance details, such as attendenceTime for a registrant, will also be retrieved.
              displayName: Get webinar session
              headers:
                Authorization:
                  type: string
                  description: Access token
                  displayName: Authorization
              responses:
                200:
                  description: OK
                  body:
                    application/json:
                      type: array
                      items:
                        type: Attendee
                400:
                  description: Bad Request
                403:
                  description: Forbidden
                404:
                  description: Not Found
          get:
            description: Retrieves details for all past sessions of a specific webinar.
            displayName: Get webinar sessions
            headers:
              Authorization:
                type: string
                description: Access token
                displayName: Authorization
            responses:
              200:
                description: OK
                body:
                  application/json:
                    type: array
                    items:
                      type: Session
              400:
                description: Bad Request
              403:
                description: Forbidden
              404:
                description: Not Found
        get:
          description: Retrieve information on a specific webinar. If the type of the webinar is 'sequence', a sequence of future times will be provided. Webinars of type 'series' are treated the same as normal webinars - each session in the webinar series has a different webinarKey. If an organizer cancels a webinar, then a request to get that webinar would return a '404 Not Found' error.
          displayName: Get webinar
          headers:
            Authorization:
              type: string
              description: Access token
              displayName: Authorization
          responses:
            200:
              description: OK
              body:
                application/json:
                  type: WebinarByKey
            400:
              description: Bad Request
            403:
              description: Forbidden
            404:
              description: Not found
        delete:
          description: Cancels a specific webinar. If the webinar is a series or sequence, this call deletes all scheduled sessions. To send cancellation emails to registrants set sendCancellationEmails=true in the request. When the cancellation emails are sent, the default generated message is used in the cancellation email body.
          displayName: Cancel webinar
          queryParameters:
            sendCancellationEmails?:
              type: boolean
              description: Indicates whether cancellation notice emails should be sent. The default value is false
              displayName: sendCancellationEmails
          headers:
            Authorization:
              type: string
              description: Access token
              displayName: Authorization
          responses:
            204:
              description: No Content
            403:
              description: Forbidden
            404:
              description: Not found
            405:
              description: Method Not Allowed (Webinar is in the past)
            409:
              description: Conflict (Webinar is in session)
        put:
          description: Updates a webinar. The call requires at least one of the parameters in the request body. The request completely replaces the existing session, series, or sequence and so must include the full definition of each as for the Create call. Set notifyParticipants=true to send update emails to registrants.
          displayName: Update webinar
          queryParameters:
            notifyParticipants?:
              type: boolean
              description: Defines whether to send notifications to participants
              displayName: notifyParticipants
          headers:
            Authorization:
              type: string
              description: Access token
              displayName: Authorization
          body:
            application/json: WebinarReqUpdate
          responses:
            202:
              description: Accepted
            400:
              description: Bad Request (times not valid, webinar in progress, webinar ended, etc.)
            403:
              description: Forbidden
      get:
        description: Returns webinars scheduled for the future for a specified organizer.
        displayName: Get all webinars
        headers:
          Authorization:
            type: string
            description: Access token
            displayName: Authorization
        responses:
          200:
            description: OK
            body:
              application/json:
                type: array
                items:
                  type: Webinar
          400:
            description: Bad Request
          403:
            description: Forbidden
      post:
        description: 'Creates a single session webinar, a sequence of webinars or
          a series of webinars depending on the type field in the body: "single_session"
          creates a single webinar session, "sequence" creates a webinar with multiple
          meeting times where attendees are expected to be the same for all sessions,
          and "series" creates a webinar with multiple meetings times where attendees
          choose only one to attend. The default, if no type is declared, is single_session.
          A sequence webinar requires a "recurrenceStart" array consisting of a "startTime"
          and "endTime" for the first of the sequence, a "recurrencePattern" of "daily",
          "weekly", "monthly", and a "recurrenceEnd" which is the last date of the
          sequence (for example, 2016-12-01). A series webinar requires a "times"
          array with a discreet "startTime" and "endTime" for each webinar in the
          series. The call requires a webinar subject and description. The "isPasswordProtected"
          sets whether the webinar requires a password for attendees to join. If set
          to True, the organizer must go to Registration Settings at My Webinars (https://global.gotowebinar.com/webinars.tmpl)
          and add the password to the webinar, and send the password to the registrants.
          The response provides a numeric webinarKey in string format for the new
          webinar. Once a webinar has been created with this method, you can accept
          registrations.'
        displayName: Create webinar
        headers:
          Authorization:
            type: string
            description: Access token
            displayName: Authorization
        body:
          application/json: WebinarReqCreate
        responses:
          201:
            description: Created
            body:
              application/json:
                type: CreatedWebinar
          400:
            description: Bad Request
          403:
            description: Forbidden
