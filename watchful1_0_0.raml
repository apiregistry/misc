#%RAML 1.0
title: watchful.li
version: 1.0.0
baseUri: watchful.li/api/v1
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
types:
  Audits:
    type: array
    items:
      type: Audit
  Audit:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the audit
        format: int64
    description: JSON object Audit
  Extension:
    type: object
    properties:
      date?:
        type: string
        description: Date of release
      ext_name?:
        type: string
        description: Extension name
      idx_site:
        type: integer
        description: Unique identifier for the site
        format: int64
      newVersion?:
        type: string
        description: New version
      type:
        type: string
        description: Datetime of the log
      url?:
        type: string
        description: Author URL
      vUpdate?:
        type: integer
        description: Update is available
      version?:
        type: string
        description: Extension version
  Feedback:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the feedback
        format: int64
    description: JSON object Feedback
  Log:
    type: object
    properties:
      Site name?:
        type: string
        description: Name of the site / readyonly
      id_log:
        type: integer
        description: Unique identifier for the log
        format: int64
      idx_site:
        type: integer
        description: Unique identifier for the site
        format: int64
      log_date:
        type: string
        description: Datetime of the log
      log_entry:
        type: string
        description: Log information
      log_level:
        type: integer
        description: Level of log
        format: int64
      log_type?:
        type: string
        description: Type of log
      userid:
        type: integer
        description: Unique identifier for the user
        format: int64
  PostLog:
    type: object
    properties:
      log_date?:
        type: string
        description: Datetime of the log
      log_entry:
        type: string
        description: Log information
      log_level:
        type: integer
        description: Level of log
        format: int64
    description: JSON object Log (only type custom)
  PostSite:
    type: object
    properties:
      access_url:
        type: string
        description: URL of the site
      admin_url?:
        type: string
        description: Adminsitration URL
      akeebaProfile?:
        type: string
        description: Akeeba Profile
      backupSchedule?:
        type: string
        description: Backup Schedule
      dateBackup?:
        type: string
        description: Date backup
      name?:
        type: string
        description: Friendly name for the site
      notes?:
        type: string
        description: Personnal note for the site
      published?:
        type: boolean
        description: Published status of site
      secret_word?:
        type: string
        description: Watchful secret word
      tags?:
        type: commons.json
        description: JSON encoded array of tags for the site (e.g. [{<q>name</q>:<q>mytag</q>},{<q>name</q>:<q>anothertag</q>}])
      word_akeeba?:
        type: string
        description: Akeeba backup word
      word_check?:
        type: string
        description: Word checked for uptime
    description: JSON object Site
  Site:
    type: object
    properties:
      access_url?:
        type: string
        description: URL of the site
      admin_url?:
        type: string
        description: Adminsitration URL
      akeebaProfile?:
        type: string
        description: Akeeba Profile
      backupSchedule?:
        type: string
        description: Backup Schedule
      canBackup?:
        type: boolean
        description: Site can be backuped
      canUpdate?:
        type: boolean
        description: Site can use remote installer
      dateBackup?:
        type: string
        description: Date backup
      date_last_check?:
        type: string
        description: Watchful Last check
      error?:
        type: boolean
        description: Error status of site
      ip?:
        type: string
        description: server IP
      jUpdate?:
        type: boolean
        description: '?'
      j_version?:
        type: string
        description: Joomla site version
      monitorid?:
        type: boolean
        description: Id of the associated UptimeRobot monitor
      name?:
        type: string
        description: Friendly name for the site
      nbUpdates?:
        type: string
        description: Number of updates
      new_j_version?:
        type: string
        description: Joomla site version
      notes?:
        type: string
        description: Personnal note for the site
      published?:
        type: boolean
        description: Published status of site
      secret_word?:
        type: string
        description: Watchful secret word
      siteid:
        type: integer
        description: Unique identifier for the site
        format: int64
      tags?:
        type: array
        description: List of tags for this site
      up?:
        type: boolean
        description: Site status
      word_akeeba?:
        type: string
        description: Akeeba backup word
      word_check?:
        type: string
        description: Word checked for uptime
  SsoUsers:
    type: object
    properties:
      email:
        type: string
        description: Email of the SSO User
      groupid:
        type: integer
        description: Security Joomla group ID
        format: int64
      id:
        type: integer
        description: Unique identifier for the SSO User
        format: int64
      lastLoginDate?:
        type: datetime
        description: Last login date on remote site
      lastLoginSite?:
        type: integer
        description: Site Id of the last remote login
        format: int64
      name:
        type: string
        description: Account display name
      password:
        type: string
        description: Password of the SSO User
      userid:
        type: integer
        description: Watchful user account
        format: int64
      username:
        type: string
        description: Username of the SSO User
    description: JSON object SsoUsers
  Tag:
    type: object
    properties:
      id:
        type: integer
        description: Unique identifier for the tag
        format: int64
      name:
        type: string
        description: Friendly name for the tag
      nbSites?:
        type: integer
        description: Number of sites use this tag (required field id)
      type?:
        type: string
        description: Bootstrap color of the tag
        enum:
        - default
        - success
        - warning
        - important
        - info
        - inverse
    description: JSON object of the updated tag
/audits:
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of audit that needs to be fetched
        displayName: id
        format: int64
        minimum: 1
    get:
      description: Returns a audit based on ID
      displayName: Find audit by ID
      queryParameters:
        fields?:
          type: string
          description: 'Fields to return separate by comas: name,id'
          displayName: fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: Audit
            application/xml:
              type: Audit
            text/plain:
              type: Audit
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
    delete:
      description: Delete a specific audit
      displayName: Delete a specific audit
      responses:
        200:
          description: Audit correctly deleted
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
  get:
    description: Returns a list of audits
    displayName: Get a list of audits
    queryParameters:
      limit?:
        type: integer
        description: Number of object to return (max 100, default 25)
        displayName: limit
        format: int64
        minimum: 1
      limitstart?:
        type: integer
        description: Start of the return (default 0)
        displayName: limitstart
        format: int64
        minimum: 0
      order?:
        type: string
        description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        displayName: order
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Audit
          application/xml:
            type: Audit
          text/plain:
            type: Audit
      403:
        description: Invalid API Key
  post:
    description: Create a audit
    displayName: Create a audit
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Audit
          application/xml:
            type: Audit
          text/plain:
            type: Audit
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Invalid API Key
      404:
        description: Not saved
/extensions:
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of the extension
        displayName: id
        format: int64
        minimum: 1
    /ignore:
      post:
        description: Set 'ignore updates' for a given extension / site_id
        displayName: Set 'ignore updates' for a given extension / site_id
        responses:
          200:
            description: Extension successfully updated
            body:
              application/json:
                type: string
              application/xml:
                type: string
              text/plain:
                type: string
          404:
            description: Update not found for the given extension
    /unignore:
      post:
        description: Remove 'ignore updates' for a given extension
        displayName: Remove 'ignore updates' for a given extension
        responses:
          200:
            description: Extension successfully updated
            body:
              application/json:
                type: string
              application/xml:
                type: string
              text/plain:
                type: string
          404:
            description: Update not found for the given extension
    /update:
      post:
        description: Update the extension on the remote site
        displayName: Update the extension on the remote site
        responses:
          200:
            description: Extension successfully updated
            body:
              application/json:
                type: string
              application/xml:
                type: string
              text/plain:
                type: string
          404:
            description: Update not found for the given extension
  get:
    description: Returns a list Extensions
    displayName: Get a list Extensions
    queryParameters:
      ext_name?:
        type: string
        description: Do a 'LIKE' search, you can also use '%'
        displayName: ext_name
      siteids?:
        type: string
        description: List of sites id separated by comma
        displayName: siteids
      ext_prefix?:
        type: string
        description: Do a 'LIKE' search, you can also use '%'. technical name of the extension com_xxxx
        displayName: ext_prefix
      version?:
        type: string
        description: Do a 'LIKE' search, you can also use '%'
        displayName: version
      vUpdate?:
        type: integer
        description: update available for this extension
        displayName: vUpdate
        enum: []
      fields?:
        type: string
        description: 'Fields to return separate by comas: name,id'
        displayName: fields
      limit?:
        type: integer
        description: Number of object to return (max 100, default 25)
        displayName: limit
        format: int64
        minimum: 1
      limitstart?:
        type: integer
        description: Start of the return (default 0)
        displayName: limitstart
        format: int64
        minimum: 0
      order?:
        type: string
        description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        displayName: order
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Extension
          application/xml:
            type: Extension
          text/plain:
            type: Extension
      403:
        description: Invalid API Key
      404:
        description: Invalid
/feedbacks:
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  get:
    description: Returns a list of feedbacks
    displayName: Get feedbacks
    queryParameters:
      fields?:
        type: string
        description: Fields to return separate by comas (es. name,id)
        displayName: fields
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Feedback
          application/xml:
            type: Feedback
          text/plain:
            type: Feedback
      403:
        description: Invalid API Key
  post:
    description: Create a feedback
    displayName: Create a feedback
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Audit
          application/xml:
            type: Audit
          text/plain:
            type: Audit
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Invalid API Key
      404:
        description: Not saved
/logs:
  /export:
    get:
      description: Returns a file contain the list of logs
      displayName: Get a CSV or PDF file contain the list of logs
      queryParameters:
        format:
          type: string
          description: Format of exported file (PDF or CSV)
          displayName: format
          enum:
          - csv
          - pdf
        site?:
          type: integer
          description: Site id of the log
          displayName: site
          format: int64
        filter_type?:
          type: string
          description: Type of the log
          displayName: filter_type
          enum:
          - ''
          - plugin_sends_error
          - curlerror
          - modified_file
          - word_not_in_homepage
          - file_not_exists
          - update_available
          - new_extension
          - deleted_extension
          - extension_not_saved
          - modified_value_files
          - custom
        search?:
          type: string
          description: Do a 'LIKE' search, you can also use '%'
          displayName: search
        startdate?:
          type: string
          description: Logs after this date, format YYYY-MM-DD HH:MM:SS
          displayName: startdate
        enddate?:
          type: string
          description: Logs before this date, format YYYY-MM-DD HH:MM:SS
          displayName: enddate
        limit?:
          type: integer
          description: Number of object to return (max 100, default 25)
          displayName: limit
          format: int64
          minimum: 1
        startid?:
          type: integer
          description: Start of the return (default 0)
          displayName: startid
          format: int64
          minimum: 0
      responses:
        200:
          description: No response was specified
        403:
          description: Invalid API Key
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /types:
    get:
      description: Returns a list of log types
      displayName: Get the list of log types
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of log that needs to be deleted
        displayName: id
        format: int64
        minimum: 1
    delete:
      description: Delete a specific log
      displayName: Delete a specific log
      responses:
        200:
          description: Log correctly deleted
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
  get:
    description: Returns a list of logs
    displayName: Get a list of logs
    queryParameters:
      log_type?:
        type: string
        description: Type of the log
        displayName: log_type
        enum:
        - ''
        - plugin_sends_error
        - curlerror
        - modified_file
        - word_not_in_homepage
        - file_not_exists
        - update_available
        - new_extension
        - deleted_extension
        - extension_not_saved
        - modified_value_files
        - custom
      log_entry?:
        type: string
        description: Do a 'LIKE' search, you can also use '%'
        displayName: log_entry
      from?:
        type: string
        description: Logs after this date, format YYYY-MM-DD HH:MM:SS
        displayName: from
      to?:
        type: string
        description: Logs before this date, format YYYY-MM-DD HH:MM:SS
        displayName: to
      fields?:
        type: string
        description: 'Fields to return separate by comas: name,id'
        displayName: fields
      limit?:
        type: integer
        description: Number of object to return (max 100, default 25)
        displayName: limit
        format: int64
        minimum: 1
      limitstart?:
        type: integer
        description: Start of the return (default 0)
        displayName: limitstart
        format: int64
        minimum: 0
      order?:
        type: string
        description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        displayName: order
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Log
          application/xml:
            type: Log
          text/plain:
            type: Log
      403:
        description: Invalid API Key
/packages:
  post:
    description: Upload a ZIP package
    displayName: Upload a ZIP package
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Tag
          application/xml:
            type: Tag
          text/plain:
            type: Tag
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Invalid API Key
      404:
        description: Not saved
/reports:
  /sites:
    /{id}:
      uriParameters:
        id:
          type: integer
          description: ID that needs to be fetched
          displayName: id
          format: int64
          minimum: 1
      get:
        description: Returns a PDF report based on a site ID
        displayName: Returns a PDF report for a specific site
        queryParameters:
          from?:
            type: string
            description: 'Start of the report, format YYYY-MM-DD, default today-30day '
            displayName: from
          to?:
            type: string
            description: End of the report, format YYYY-MM-DD, default today
            displayName: to
          reports?:
            type: string
            description: 'Type of reports separate by comas: Ga,Logs,Uptime'
            displayName: reports
          log_type?:
            type: string
            description: Type of the log to show in the report
            displayName: log_type
            enum:
            - ''
            - plugin_sends_error
            - curlerror
            - modified_file
            - word_not_in_homepage
            - file_not_exists
            - update_available
            - new_extension
            - deleted_extension
            - extension_not_saved
            - modified_value_files
          compare?:
            type: integer
            description: Define if you want show previous values in Google Analytics graph
            displayName: compare
            enum: []
        responses:
          200:
            description: No response was specified
            body:
              application/pdf:
                type: object
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
  /tags:
    /{id}:
      uriParameters:
        id:
          type: integer
          description: ID that needs to be fetched
          displayName: id
          format: int64
          minimum: 1
      get:
        description: Returns a report based on a site ID
        displayName: Find sites by ID
        queryParameters:
          from?:
            type: string
            description: 'Start of the report, format YYYY-MM-DD, default today-30day '
            displayName: from
          to?:
            type: string
            description: End of the report, format YYYY-MM-DD, default today
            displayName: to
          reports?:
            type: string
            description: 'Type of reports separate by comas: Ga,Logs,Uptime'
            displayName: reports
          log_type?:
            type: string
            description: Type of the log to show in the report
            displayName: log_type
            enum:
            - ''
            - plugin_sends_error
            - curlerror
            - modified_file
            - word_not_in_homepage
            - file_not_exists
            - update_available
            - new_extension
            - deleted_extension
            - extension_not_saved
            - modified_value_files
          compare?:
            type: integer
            description: Define if you want show previous values in Google Analytics graph
            displayName: compare
            enum: []
        responses:
          200:
            description: No response was specified
            body:
              application/pdf:
                type: object
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
/sites:
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID that needs to be fetched
        displayName: id
        format: int64
        minimum: 1
    /audits:
      get:
        description: Return audits for a specific website
        displayName: Return audits for a specific website
        queryParameters:
          fields?:
            type: string
            description: 'Fields to return separate by comas: name,id'
            displayName: fields
          limit?:
            type: integer
            description: Number of object to return (max 100, default 25)
            displayName: limit
            format: int64
            minimum: 1
          limitstart?:
            type: integer
            description: Start of the return (default 0)
            displayName: limitstart
            format: int64
            minimum: 0
          order?:
            type: string
            description: ORDER by this field
            displayName: order
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Audits
              application/xml:
                type: Audits
              text/plain:
                type: Audits
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
      post:
        description: Create an audit for the site
        displayName: Create an audit for the site
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Audit
              application/xml:
                type: Audit
              text/plain:
                type: Audit
          201:
            description: Saved successfully
          400:
            description: Invalid data
          403:
            description: Invalid API Key
          404:
            description: Not saved
    /backupnow:
      post:
        description: Add the site to the backup queue
        displayName: Add the site to the backup queue
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Site
              application/xml:
                type: Site
              text/plain:
                type: Site
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /backupprofiles:
      get:
        description: Return backup profile
        displayName: Return backup profile
        responses:
          200:
            description: No response was specified
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /backups:
      get:
        description: List of latest backups
        displayName: List of latest backups
        responses:
          200:
            description: No response was specified
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /backupstart:
      post:
        description: Start a remote backup for the site
        displayName: Start a remote backup for the site
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Site
              application/xml:
                type: Site
              text/plain:
                type: Site
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /backupstep:
      post:
        description: Step (continue) a remote backup for the site
        displayName: Step (continue) a remote backup for the site
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Site
              application/xml:
                type: Site
              text/plain:
                type: Site
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /extensions:
      get:
        description: Get extensions for a site
        displayName: Get extensions for a site
        queryParameters:
          fields?:
            type: string
            description: 'Fields to return separate by comas: name,id'
            displayName: fields
          limit?:
            type: integer
            description: Number of object to return (max 100, default 25)
            displayName: limit
            format: int64
            minimum: 1
          limitstart?:
            type: integer
            description: Start of the return (default 0)
            displayName: limitstart
            format: int64
            minimum: 0
          order?:
            type: string
            description: ORDER by this field
            displayName: order
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Extension
              application/xml:
                type: Extension
              text/plain:
                type: Extension
          403:
            description: Invalid API Key
          404:
            description: Invalid
      post:
        displayName: Install extension
        queryParameters:
          url:
            type: commons.url
            description: URL to install the extension from
            displayName: url
        responses:
          200:
            description: No response was specified
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /logs:
      get:
        description: Return logs for a specific website
        displayName: Return logs for a specific website
        queryParameters:
          log_entry?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: log_entry
          log_type?:
            type: string
            description: Type of the log
            displayName: log_type
            enum:
            - ''
            - plugin_sends_error
            - curlerror
            - modified_file
            - word_not_in_homepage
            - file_not_exists
            - update_available
            - new_extension
            - deleted_extension
            - extension_not_saved
            - modified_value_files
          from?:
            type: string
            description: Logs after this date, format YYYY-MM-DD HH:MM:SS
            displayName: from
          to?:
            type: string
            description: Logs before this date, format YYYY-MM-DD HH:MM:SS
            displayName: to
          fields?:
            type: string
            description: 'Fields to return separate by comas: name,id'
            displayName: fields
          limit?:
            type: integer
            description: Number of object to return (max 100, default 25)
            displayName: limit
            format: int64
            minimum: 1
          limitstart?:
            type: integer
            description: Start of the return (default 0)
            displayName: limitstart
            format: int64
            minimum: 0
          order?:
            type: string
            description: 'ORDER by this field separete by comas. Add + / - after field
              for set ASC / DESC: type+,name-'
            displayName: order
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Log
              application/xml:
                type: Log
              text/plain:
                type: Log
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
      post:
        description: Create a custom log for a specific website
        displayName: Create a custom log for a specific website
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Log
              application/xml:
                type: Log
              text/plain:
                type: Log
          201:
            description: Saved successfully
          400:
            description: Invalid data
          403:
            description: Invalid API Key
          404:
            description: Not saved
    /monitor:
      delete:
        description: Return boolean
        displayName: Delete uptime monitor
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: object
              application/xml:
                type: object
              text/plain:
                type: object
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
      post:
        description: Return boolean
        displayName: Post uptime monitor
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: object
              application/xml:
                type: object
              text/plain:
                type: object
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /scanner:
      get:
        description: Scan the site for malware
        displayName: Scan the site for malware
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: string
              application/xml:
                type: string
              text/plain:
                type: string
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /tags:
      get:
        description: Return tags for a specific website
        displayName: Return tags for a specific website
        queryParameters:
          name?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: name
          type?:
            type: string
            description: Bootstrap color of the tag
            displayName: type
            enum:
            - ''
            - default
            - success
            - warning
            - important
            - info
            - inverse
          fields?:
            type: string
            description: 'Fields to return separate by comas: name,id'
            displayName: fields
          limit?:
            type: integer
            description: Number of object to return (max 100, default 25)
            displayName: limit
            format: int64
            minimum: 1
          limitstart?:
            type: integer
            description: Start of the return (default 0)
            displayName: limitstart
            format: int64
            minimum: 0
          order?:
            type: string
            description: ORDER by this field
            displayName: order
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Tag
              application/xml:
                type: Tag
              text/plain:
                type: Tag
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
      post:
        description: Add tags for a specific website
        displayName: Add tags for a specific website
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Site
              application/xml:
                type: Site
              text/plain:
                type: Site
          201:
            description: Saved successfully
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /updatejoomla:
      post:
        description: Update Joomla core on the remote site
        displayName: Update Joomla core on the remote site
        responses:
          200:
            description: Joomla core successfully updated
            body:
              application/json:
                type: string
              application/xml:
                type: string
              text/plain:
                type: string
          403:
            description: Invalid API Key
          404:
            description: Invalid ID or Joomla Update not found
    /uptime:
      get:
        description: Return uptime data
        displayName: Return uptime data
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: object
              application/xml:
                type: object
              text/plain:
                type: object
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /validate:
      get:
        description: validate the site
        displayName: validate the site, return the new logs
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Log
              application/xml:
                type: Log
              text/plain:
                type: Log
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    /validatedebug:
      get:
        displayName: validate the site, return the debug information
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Log
              application/xml:
                type: Log
              text/plain:
                type: Log
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    get:
      description: Return a site based on ID
      displayName: Find sites by ID
      queryParameters:
        fields?:
          type: string
          description: 'Fields to return separate by comas: name,id'
          displayName: fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: Site
            application/xml:
              type: Site
            text/plain:
              type: Site
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
    delete:
      description: Delete a specific Site
      displayName: Delete a specific Site
      responses:
        200:
          description: Deleted successfully
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
    put:
      description: Update a site
      displayName: Update a site
      responses:
        200:
          description: Updated successfully
          body:
            application/json:
              type: Site
            application/xml:
              type: Site
            text/plain:
              type: Site
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
  get:
    description: Returns a list of Sites
    displayName: Get a list of Sites
    queryParameters:
      siteids?:
        type: string
        description: List of sites id separated by comma
        displayName: siteids
      name?:
        type: string
        description: Site name. Do a 'LIKE' search, you can also use '%'
        displayName: name
      access_url?:
        type: string
        description: Access URL. Do a 'LIKE' search, you can also use '%'
        displayName: access_url
      j_version?:
        type: string
        description: Joomla version. Do a 'LIKE' search, you can also use '%'
        displayName: j_version
      ip?:
        type: string
        description: Ip address. Do a 'LIKE' search, you can also use '%'
        displayName: ip
      jUpdate?:
        type: integer
        description: 'Joomla core update status (1: update required, 0: update not
          required)'
        displayName: jUpdate
        enum: []
      canUpdate?:
        type: integer
        description: canUpdate
        displayName: canUpdate
        enum: []
      published?:
        type: integer
        description: Is published
        displayName: published
        enum: []
      error?:
        type: string
        description: Has errors
        displayName: error
      nbUpdates?:
        type: string
        displayName: nbUpdates
      up?:
        type: integer
        description: Is online
        displayName: up
        enum: []
      fields?:
        type: string
        description: Fields to return separated by commas (e.g. name,id)
        displayName: fields
      limit?:
        type: integer
        description: Number of objects to return (max 100, default 25)
        displayName: limit
        format: int64
        minimum: 1
      limitstart?:
        type: integer
        description: Start of the return (default 0)
        displayName: limitstart
        format: int64
        minimum: 0
      order?:
        type: string
        description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        displayName: order
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Site
          application/xml:
            type: Site
          text/plain:
            type: Site
      403:
        description: Invalid API Key
      404:
        description: Invalid ID
  post:
    description: Create a site
    displayName: Create a site
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Site
          application/xml:
            type: Site
          text/plain:
            type: Site
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Not allowed to add sites
      404:
        description: Not saved
/ssousers:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of SSO User that needs to be fetched
        displayName: id
        format: int64
        minimum: 1
    get:
      description: Returns a SSO User based on ID
      displayName: Find SSO User by ID
      queryParameters:
        fields?:
          type: string
          description: 'Fields to return separate by comas: name,id'
          displayName: fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: SsoUsers
            application/xml:
              type: SsoUsers
            text/plain:
              type: SsoUsers
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
    delete:
      description: Delete a specific SSO User
      displayName: Delete a specific SSO User
      responses:
        200:
          description: SSO User correctly deleted
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
    put:
      description: Update a SSO User
      displayName: Update a SSO User
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: SsoUsers
            application/xml:
              type: SsoUsers
            text/plain:
              type: SsoUsers
        201:
          description: Updated successfully
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Not saved
  get:
    description: Returns a list of SSO Users
    displayName: Get a list of SSO Users
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: SsoUsers
          application/xml:
            type: SsoUsers
          text/plain:
            type: SsoUsers
      403:
        description: Invalid API Key
  post:
    description: Create a SSO User
    displayName: Create a SSO User
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: SsoUsers
          application/xml:
            type: SsoUsers
          text/plain:
            type: SsoUsers
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Invalid API Key
      404:
        description: Not saved
/tags:
  /metadata:
    get:
      description: Returns a list of fields
      displayName: Get the list of fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of tag that needs to be fetched
        displayName: id
        format: int64
        minimum: 1
    /sites:
      get:
        description: Returns a list of sites based with a specific tag id
        displayName: Find sites by tag ID
        queryParameters:
          name?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: name
          access_url?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: access_url
          j_version?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: j_version
          ip?:
            type: string
            description: Do a 'LIKE' search, you can also use '%'
            displayName: ip
          jUpdate?:
            type: integer
            description: Joomla core update
            displayName: jUpdate
            enum: []
          published?:
            type: integer
            description: is published
            displayName: published
            enum: []
          error?:
            type: string
            description: have errors
            displayName: error
          nbUpdates?:
            type: string
            displayName: nbUpdates
          up?:
            type: integer
            description: is the website online
            displayName: up
            enum: []
          fields?:
            type: string
            description: 'Fields to return separate by comas: name,id'
            displayName: fields
          limit?:
            type: integer
            description: Number of object to return (max 100, default 25)
            displayName: limit
            format: int64
            minimum: 1
          limitstart?:
            type: integer
            description: Start of the return (default 0)
            displayName: limitstart
            format: int64
            minimum: 0
          order?:
            type: string
            description: 'ORDER by this field separete by comas. Add + / - after field
              for set ASC / DESC: type+,name-'
            displayName: order
        responses:
          200:
            description: No response was specified
            body:
              application/json:
                type: Site
              application/xml:
                type: Site
              text/plain:
                type: Site
          403:
            description: Invalid API Key
          404:
            description: Invalid ID
    get:
      description: Returns a tag based on ID
      displayName: Find tag by ID
      queryParameters:
        fields?:
          type: string
          description: 'Fields to return separate by comas: name,id'
          displayName: fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: Tag
            application/xml:
              type: Tag
            text/plain:
              type: Tag
        400:
          description: Invalid ID
        403:
          description: Invalid API Key
    delete:
      description: Delete a specific tag
      displayName: Delete a specific tag
      responses:
        200:
          description: Tag correctly deleted
          body:
            application/json:
              type: string
            application/xml:
              type: string
            text/plain:
              type: string
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
    put:
      description: Update a tag
      displayName: Update a tag
      responses:
        200:
          description: Updated successfully
          body:
            application/json:
              type: Tag
            application/xml:
              type: Tag
            text/plain:
              type: Tag
        400:
          description: Invalid data
        403:
          description: Invalid API Key
        404:
          description: Invalid ID
  get:
    description: Returns a list of tags
    displayName: Get a list of tags
    queryParameters:
      name?:
        type: string
        description: Do a 'LIKE' search, you can also use '%'
        displayName: name
      type?:
        type: string
        description: Bootstrap color of the tag
        displayName: type
        enum:
        - ''
        - default
        - success
        - warning
        - important
        - info
        - inverse
      fields?:
        type: string
        description: 'Fields to return separate by comas: name,id'
        displayName: fields
      limit?:
        type: integer
        description: Number of object to return (max 100, default 25)
        displayName: limit
        format: int64
        minimum: 1
      limitstart?:
        type: integer
        description: Start of the return (default 0)
        displayName: limitstart
        format: int64
        minimum: 0
      order?:
        type: string
        description: 'ORDER by this field separete by comas. Add + / - after field
          for set ASC / DESC: type+,name-'
        displayName: order
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Tag
          application/xml:
            type: Tag
          text/plain:
            type: Tag
      403:
        description: Invalid API Key
  post:
    description: Create a tag
    displayName: Create a tag
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: Tag
          application/xml:
            type: Tag
          text/plain:
            type: Tag
      201:
        description: Saved successfully
      400:
        description: Invalid data
      403:
        description: Invalid API Key
      404:
        description: Not saved
/versions:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of version that needs to be fetched
        displayName: id
        format: int64
        minimum: 1
    get:
      displayName: Find a version by ID
      queryParameters:
        fields?:
          type: string
          description: 'Fields to return separate by commas: name,id'
          displayName: fields
      responses:
        200:
          description: No response was specified
          body:
            application/json:
              type: object
            application/xml:
              type: object
            text/plain:
              type: object
  get:
    displayName: Get list of versions
    queryParameters:
      fields?:
        type: string
        description: 'Fields to return separate by comas: name,id'
        displayName: fields
    responses:
      200:
        description: No response was specified
        body:
          application/json:
            type: object
          application/xml:
            type: object
          text/plain:
            type: object
