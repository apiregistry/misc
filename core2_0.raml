#%RAML 1.0
title: CORE API v2
version: '2.0'
baseUri: core.ac.uk/api-v2
description: "<p style=\"text-align: justify;\">You can use the CORE API to access\
  \ the \n    resources harvested and enriched by CORE. If you encounter any problems\
  \ with the API, please <a href=\"/contact\">report them to us</a>.</p>\n\n<h2>Overview</h2>\n\
  <p style=\"text-align: justify;\">The API is organised by resource type. The resources\
  \ are <b>articles</b>, \n    <b>journals</b> and <b>repositories</b> and are represented\
  \ using JSON data format. Furthermore, \n    each resource has a list of methods.\
  \ The API also provides two global methods for accessing all resources at once.</p>\n\
  \n<h2>Response format</h2>\n<p style=\"text-align: justify;\">Response for each\
  \ query contains two fields: <b>status</b> and <b>data</b>.\n    In case of an error\
  \ status, the data field is empty. The data field contains a single object\n   \
  \ in case the request is for a specific identifier (e.g. CORE ID, CORE repository\
  \ ID, etc.), or  \n    contains a list of objects, for example for search queries.\
  \ In case of batch requests, the response\n    is an array of objects, each of which\
  \ contains its own <b>status</b> and <b>data</b> fields.\n    For search queries\
  \ the response contains an additional field <b>totalHits</b>, which is the \n  \
  \  total number of items which match the search criteria.</p>\n\n<h2>Search query\
  \ syntax</h2>\n\n<p style=\"text-align: justify\">Complex search queries can be\
  \ used in all of the API search methods.\n    The query can be a simple string or\
  \ it can be built using terms and operators described in Elasticsearch\n    <a href=\"\
  http://www.elastic.co/guide/en/elasticsearch/reference/1.4/query-dsl-query-string-query.html#query-string-syntax\"\
  >documentation</a>.\n    The usable field names are <strong>title</strong>, <strong>description</strong>,\
  \ <strong>fullText</strong>, \n    <strong>authorsString</strong>, <strong>publisher</strong>,\
  \ <strong>repositories.id</strong>, <strong>repositories.name</strong>, \n    <strong>doi</strong>,\
  \ <strong>oai</strong>, <strong>identifiers</strong> (which is a list of article\
  \ identifiers including OAI, URL, etc.), <strong>language.name</strong> \n    and\
  \ <strong>year</strong>. Some example queries:\n</p>\n\n<ul style=\"margin-left:\
  \ 30px;\">\n    <li><p>title:psychology and language.name:English</p></li>\n   \
  \ <li><p>repositories.id:86 AND year:2014</p></li>\n    <li><p>identifiers:\"oai:aura.abdn.ac.uk:2164/3837\"\
  \ OR identifiers:\"oai:aura.abdn.ac.uk:2164/3843\"</p></li>\n    <li><p>doi:\"10.1186/1471-2458-6-309\"\
  </p></li>\n</ul>\n\n<h2>Sort order</h2>\n\n<p style=\"text-align: justify;\">For\
  \ search queries, the results are ordered by relevance score. For batch \n    requests,\
  \ the results are retrieved in the order of the requests.</p>\n\n<h2>Parameters</h2>\n\
  <p style=\"text-align: justify;\">The API methods allow different parameters to\
  \ be passed. Additionally, there is an API key parameter which is common to all\
  \ API methods. For all API methods \n    the API key can be provided either as a\
  \ query parameter or in the request header. If the API key \n    is not provided,\
  \ the API will return HTTP 401 error. You can register for an API key <a href=\"\
  /services#api\">here</a>.</p>\n\n<h2>API methods</h2>"
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  apiKey:
    type: Pass Through
    describedBy:
      queryParameters:
        apiKey: string
types:
  Article:
    type: object
    properties:
      authors?:
        type: array
        description: List of article authors
        items:
          type: string
      citations?:
        type: array
        description: Citations found in the article
        items:
          type: Citation
      contributors?:
        type: array
        description: List of article contributors
        items:
          type: string
      datePublished?:
        type: string
        description: Date article published
      description?:
        type: string
        description: The abstract
      doi?:
        type: string
        description: The DOI of the article
      fulltext?:
        type: string
        description: Article full text
      fulltextIdentifier?:
        type: string
        description: The URL to the fulltext
      fulltextUrls?:
        type: array
        description: URLs of the fulltext version of this article
        items:
          type: string
      id:
        type: integer
        description: Article ID
      identifiers?:
        type: array
        description: List of document identifiers
        items:
          type: string
      journals?:
        type: array
        description: List of journals this article belongs to
        items:
          type: ArticleJournal
      language?:
        type: Language
        description: Language of the article
      oai?:
        type: string
        description: The OAI of the article
      publisher?:
        type: string
        description: Publisher of the article
      rawRecordXml?:
        type: RawRecordXml
        description: Raw XML metadata
      relations?:
        type: array
        description: URLs of relating articles, etc.
        items:
          type: string
      repositories?:
        type: array
        description: List of repositories this article belongs to
        items:
          type: Repository
      repositoryDocument?:
        type: object
        description: Information of CORE harvesting
      similarities?:
        type: array
        description: Similar articles
        items:
          type: Similar
      subjects?:
        type: array
        description: Article subjects
        items:
          type: string
      title?:
        type: string
        description: Article title
      topics?:
        type: array
        description: Article topics
        items:
          type: string
      types?:
        type: array
        description: Types, e.g. conference paper, journal paper, etc.
        items:
          type: string
      year?:
        type: integer
        description: Year the article was published
  ArticleHistoryResponse:
    type: object
    properties:
      data?:
        type: array
        description: List of article versions
        items:
          type: RawRecordXml
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
  ArticleJournal:
    type: object
    properties:
      identifiers?:
        type: array
        description: List of journal identifiers
        items:
          type: string
      title?:
        type: string
        description: Title of the journal
  ArticleResponse:
    type: object
    properties:
      data:
        type: Article
        description: The fetched article
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
  ArticleSearchResponse:
    type: object
    properties:
      data:
        type: array
        description: Search results
        items:
          type: Article
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
      totalHits:
        type: integer
        description: Total number of articles matching the search criteria
  ArticleSimilarResponse:
    type: object
    properties:
      data:
        type: array
        description: Similar articles
        items:
          type: Article
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
  Citation:
    type: object
    properties:
      authors?:
        type: string
        description: Authors of the article
      date?:
        type: string
        description: Date the cited article was published
      doi?:
        type: string
        description: Digital Object Identifier
      raw?:
        type: string
        description: Citation as raw string
      title?:
        type: string
        description: Title of the cited article
  Journal:
    type: object
    properties:
      identifiers:
        type: array
        description: List of journal identifiers (e.g. URL, OAI or ISSN). The type is prepended to the identifier string (e.g. 'issn:2296-0597')
        items:
          type: string
      language?:
        type: string
        description: Language of the journal
      publisher?:
        type: string
        description: Publisher of the journal
      rights?:
        type: string
        description: Copyright license of the journal
      subjects?:
        type: array
        description: List of journal subjects
        items:
          type: string
      title?:
        type: string
        description: Journal title
  JournalResponse:
    type: object
    properties:
      data?:
        type: Journal
        description: The fetched journal
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - NOT_FOUND
        - TOO_MANY_QUERIES
        - MISSING_PARAMETER
        - INVALID_PARAMETER
  JournalSearchResponse:
    type: object
    properties:
      data?:
        type: array
        description: Search results
        items:
          type: Journal
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - NOT_FOUND
        - TOO_MANY_QUERIES
        - MISSING_PARAMETER
        - INVALID_PARAMETER
      totalHits:
        type: integer
        description: Total number of journals matching the search criteria
  Language:
    type: object
    properties:
      code?:
        type: string
      name?:
        type: string
  RawRecordXml:
    type: object
    properties:
      datetime?:
        type: string
        description: Timestamp when CORE harvested the metadata
      metadata?:
        type: string
        description: The raw XML metadata
  Repository:
    type: object
    properties:
      id?:
        type: integer
        description: CORE repository ID
      name?:
        type: string
        description: Repository name
      openDoarId?:
        type: integer
        description: ID of the repository in Open DOAR
      repositoryLocation?:
        type: RepositoryLocation
        description: Location of the repository
      uri?:
        type: string
        description: Repository URI
  RepositoryLocation:
    type: object
    properties:
      country?:
        type: string
        description: Country name
      countryCode?:
        type: string
        description: Two letter country code
      id?:
        type: integer
        description: CORE repository ID
      latitude?:
        type: integer
      longitude?:
        type: integer
      repositoryName?:
        type: string
        description: Repository name
  RepositoryResponse:
    type: object
    properties:
      data?:
        type: Repository
        description: The fetched repository
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
  RepositorySearchResponse:
    type: object
    properties:
      data?:
        type: array
        description: Search results
        items:
          type: Repository
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
      totalHits:
        type: integer
        description: Total number of repositories matching the search criteria
  Resource:
    type: object
    properties:
      id:
        type: string
        description: Identifier of the resource
      type:
        type: string
        description: Type of the resource
        enum:
        - journal
        - article
        - repository
  SearchAllResponse:
    type: object
    properties:
      data:
        type: array
        description: List of relevant resources
        items:
          type: Resource
      status:
        type: string
        description: Operation status
        enum:
        - OK
        - Not found
        - Too many queries
        - Missing parameter
        - Invalid parameter
        - Parameter out of bounds
      totalHits:
        type: integer
        description: Total number of items matching the search criteria
  SearchRequest:
    type: object
    properties:
      page?:
        type: integer
        description: Which page of the search results should be retrieved. Can be any number from 1 to 100, default is 1 (first page)
        maximum: 100
        minimum: 1
      pageSize?:
        type: integer
        description: The number of results to return per page. Can be any number from 10 to 100, default is 10
        maximum: 100
        minimum: 10
      query:
        type: string
        description: Search query
  Similar:
    type: object
    properties:
      id:
        type: integer
        description: CORE ID of the similar article
      score:
        type: number
        description: Similarity score
        format: double
      title?:
        type: string
        description: Title of the similar article
  SimilarRequest:
    type: object
    properties:
      text:
        type: string
        description: Find Similar articles based on this string
    description: The text that requires similar articles to be calculated on
/articles:
  /get:
    /{coreId}:
      uriParameters:
        coreId:
          type: integer
          description: CORE ID of the article that needs to be fetched.
          displayName: coreId
          format: int64
      /download:
        /pdf:
          get:
            description: Method will retrieve an article based on given CORE ID.
            displayName: Get fulltext PDF by CORE ID
            responses:
              200:
                description: Successful operation
              401:
                description: Invalid or no API key provided
              404:
                description: No Article pdf found
              429:
                description: Too many requests in given amount of time
      /history:
        get:
          description: Method accepts a single CORE ID and returns a list of all historical versions of the article, which are stored in CORE database. The results are ordered from the newest one to the oldest one.
          displayName: Get article history by CORE ID
          queryParameters:
            page?:
              type: integer
              description: Which page of the history results should be retrieved. Can be any number betwen 1 and 100, default is 1 (first page).
              displayName: page
              default: 1
              format: int32
              minimum: 1
              maximum: 100
            pageSize?:
              type: integer
              description: The number of results to return per page. Can be any number between 10 and 100, default is 10.
              displayName: pageSize
              default: 10
              format: int32
              minimum: 10
              maximum: 100
          responses:
            200:
              description: Successful operation
              body:
                application/json:
                  type: ArticleHistoryResponse
            400:
              description: Parameter invalid or out of bounds
            401:
              description: Invalid or no API key provided
            429:
              description: Too many requests in given amount of time
      get:
        description: Method will retrieve an article based on given CORE ID.
        displayName: Get article by CORE ID
        queryParameters:
          metadata?:
            type: boolean
            description: Whether to retrieve the full article metadata or only the ID. The default value is true.
            displayName: metadata
            default: true
          fulltext?:
            type: boolean
            description: Whether to retrieve full text of the article. The default value is false
            displayName: fulltext
            default: false
          citations?:
            type: boolean
            description: Whether to retrieve citations found in the article. The default value is false
            displayName: citations
            default: false
          similar?:
            type: boolean
            description: Whether to retrieve a list of similar articles. The default value is false. Because the similar articles are calculated on demand, setting this parameter to true might slightly slow down the response time
            displayName: similar
            default: false
          duplicate?:
            type: boolean
            description: Whether to retrieve a list of CORE IDs of different versions of the article. The default value is false
            displayName: duplicate
            default: false
          urls?:
            type: boolean
            description: Whether to retrieve a list of URLs from which the article can be downloaded. This can include links to PDFs as well as HTML pages. The default value is false
            displayName: urls
            default: false
          faithfulMetadata?:
            type: boolean
            description: Returns the records raw XML metadata from the original repository. The default value is false
            displayName: faithfulMetadata
            default: false
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: ArticleResponse
          400:
            description: Invalid identifier supplied
          401:
            description: Invalid or no API key provided
          429:
            description: Too many requests in given amount of time
    post:
      description: Method accepts a JSON array of CORE IDs and retrieves a list of articles. The response array is ordered based on the order of the IDs in the request array.
      displayName: Batch operation for retrieving articles by CORE ID
      queryParameters:
        metadata?:
          type: boolean
          description: Whether to retrieve the full article metadata or only the IDs. The default value is true
          displayName: metadata
          default: true
        fulltext?:
          type: boolean
          description: Whether to retrieve fulltexts of the articles. The default value is false
          displayName: fulltext
          default: false
        citations?:
          type: boolean
          description: Whether to retrieve citations found in the articles. The default value is false
          displayName: citations
          default: false
        similar?:
          type: boolean
          description: Whether to retrieve lists of similar articles. The default value is false. Because the similar articles are calculated on demand, setting this parameter to true might slightly slow down the response time
          displayName: similar
          default: false
        duplicate?:
          type: boolean
          description: Whether to retrieve CORE IDs of different versions of the articles. The default value is false
          displayName: duplicate
          default: false
        urls?:
          type: boolean
          description: Whether to retrieve lists of URLs of the article fulltexts. The default value is false
          displayName: urls
          default: false
        faithfulMetadata?:
          type: boolean
          description: Returns the records raw XML metadata from the original repository. The default value is false
          displayName: faithfulMetadata
          default: false
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: array
              items:
                type: ArticleResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
  /search:
    /{query}:
      uriParameters:
        query:
          type: integer
          description: The search query
          displayName: query
          format: int64
      get:
        description: Searches through all articles and returns a JSON array with search results. Method searches through all article fields.
        displayName: Search through all documents
        queryParameters:
          page?:
            type: integer
            description: Which page of the search results should be retrieved. Can be any number betwen 1 and 100, default is 1 (first page).
            displayName: page
            default: 1
            format: int32
            minimum: 1
            maximum: 100
          pageSize?:
            type: integer
            description: The number of results to return per page. Can be any number between 10 and 100, default is 10.
            displayName: pageSize
            default: 10
            format: int32
            minimum: 10
            maximum: 100
          metadata?:
            type: boolean
            description: Whether to retrieve the full article metadata or only the ID. The default value is true.
            displayName: metadata
            default: true
          fulltext?:
            type: boolean
            description: Whether to retrieve full text of the article. The default value is false
            displayName: fulltext
            default: false
          citations?:
            type: boolean
            description: Whether to retrieve citations found in the article. The default value is false
            displayName: citations
            default: false
          similar?:
            type: boolean
            description: Whether to retrieve a list of similar articles. The default value is false. Because the similar articles are calculated on demand, setting this parameter to true might slightly slow down the response time
            displayName: similar
            default: false
          duplicate?:
            type: boolean
            description: Whether to retrieve a list of CORE IDs of different versions of the article. The default value is false
            displayName: duplicate
            default: false
          urls?:
            type: boolean
            description: Whether to retrieve a list of URLs from which the article can be downloaded. This can include links to PDFs as well as HTML pages. The default value is false
            displayName: urls
            default: false
          faithfulMetadata?:
            type: boolean
            description: Returns the records raw XML metadata from the original repository. The default value is false
            displayName: faithfulMetadata
            default: false
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: ArticleSearchResponse
          400:
            description: Parameter invalid or out of bounds
          401:
            description: Invalid or no API key provided
          429:
            description: Too many requests in given amount of time
    post:
      description: Method accepts a JSON array of search queries and parameters. It then searches through all articles and returns a JSON array of search results for each of the queries. Method searches through all article fields (title, authors, subjects, identifiers, etc.).
      displayName: Batch operation for search through articles
      queryParameters:
        metadata?:
          type: boolean
          description: Whether to retrieve the full article metadata or only the ID. The default value is true.
          displayName: metadata
          default: true
        fulltext?:
          type: boolean
          description: Whether to retrieve full text of the article. The default value is false
          displayName: fulltext
          default: false
        citations?:
          type: boolean
          description: Whether to retrieve citations found in the article. The default value is false
          displayName: citations
          default: false
        similar?:
          type: boolean
          description: Whether to retrieve a list of similar articles. The default value is false. Because the similar articles are calculated on demand, setting this parameter to true might slightly slow down the response time
          displayName: similar
          default: false
        duplicate?:
          type: boolean
          description: Whether to retrieve a list of CORE IDs of different versions of the article. The default value is false
          displayName: duplicate
          default: false
        urls?:
          type: boolean
          description: Whether to retrieve a list of URLs from which the article can be downloaded. This can include links to PDFs as well as HTML pages. The default value is false
          displayName: urls
          default: false
        faithfulMetadata?:
          type: boolean
          description: Whether to retrieve the raw XML metadata of the article. The default value is false
          displayName: faithfulMetadata
          default: false
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: array
              items:
                type: ArticleSearchResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
  /similar:
    post:
      description: Method accepts a text and retrieves a JSON array of articles which are similar to the given text. The response array is ordered based on similarity score, starting from the most similar.
      displayName: Get articles by similarity to a text
      queryParameters:
        limit?:
          type: integer
          description: How many similar articles to retrieve at most. Can be any number betwen 1 and 100, default is 10
          displayName: limit
          default: 10
          minimum: 1
          maximum: 100
        metadata?:
          type: boolean
          description: Whether to retrieve the full article metadata or only the IDs of the similar articles. The default value is true
          displayName: metadata
          default: true
        fulltext?:
          type: boolean
          description: Whether to retrieve fulltexts of the similar articles. The default value is false
          displayName: fulltext
          default: false
        citations?:
          type: boolean
          description: Whether to retrieve citations found in the articles. The default value is false
          displayName: citations
          default: false
        similar?:
          type: boolean
          description: Whether to retrieve lists of similar articles. The default value is false. Because the similar articles are calculated on demand, setting this parameter to true might slightly slow down the response time
          displayName: similar
          default: false
        duplicate?:
          type: boolean
          description: Whether to retrieve CORE IDs of different versions of the articles. The default value is false
          displayName: duplicate
          default: false
        urls?:
          type: boolean
          description: Whether to retrieve lists of URLs of the article fulltexts. The default value is false
          displayName: urls
          default: false
        faithfulMetadata?:
          type: boolean
          description: Whether to retrieve the raw XML metadata of the articles. The default value is false
          displayName: faithfulMetadata
          default: false
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: ArticleSimilarResponse
        400:
          description: Missing text in request body or parameter out of bounds or invalid parameter
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
/journals:
  /get:
    /{issn}:
      uriParameters:
        issn:
          type: string
          description: ISSN identifier of journal that needs to be fetched.
          displayName: issn
      get:
        description: Returns a journal with given ISSN identifier.
        displayName: Find journal by ISSN
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: JournalResponse
          400:
            description: Invalid ISSN identifier supplied
          401:
            description: Invalid or no API key provided
    post:
      description: Method accepts a JSON array of ISSNs and retrieves a list of journals.
      displayName: Batch operation for retrieving journals by ISSN
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: array
              items:
                type: JournalResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
  /search:
    /{query}:
      uriParameters:
        query:
          type: string
          description: Search query
          displayName: query
      get:
        description: Searches through all journals and returns a JSON array of search results. Method searches through all journal fields (title, identifiers, subjects, language, rights and publisher).
        displayName: Search through journals
        queryParameters:
          page?:
            type: integer
            description: Which page of the search results should be retrieved. Can be any number betwen 1 and 100, default is 1 (first page).
            displayName: page
            default: 1
            format: int32
            minimum: 1
            maximum: 100
          pageSize?:
            type: integer
            description: The number of results to return per page. Can be any number between 10 and 100, default is 10.
            displayName: pageSize
            default: 10
            format: int32
            minimum: 10
            maximum: 100
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: JournalSearchResponse
          400:
            description: Parameter invalid or out of bounds
          401:
            description: Invalid or no API key provided
    post:
      description: Method accepts a JSON array of search queries and parameters. It then searches through all journals and returns a JSON array of search results for each of the queries. Method searches through all journal fields (title, identifiers, subjects, language, rights and publisher).
      displayName: Batch operation for search through journals
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: array
              items:
                type: JournalResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
/repositories:
  /get:
    /{repositoryId}:
      uriParameters:
        repositoryId:
          type: integer
          description: CORE repository ID of the article that needs to be fetched.
          displayName: repositoryId
      get:
        description: Method will retrieve a repository based on given CORE repository ID.
        displayName: Get repository by CORE repository ID
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: RepositoryResponse
          400:
            description: Invalid identifier supplied
          401:
            description: Invalid or no API key provided
          429:
            description: Too many requests in given amount of time
    post:
      description: Method accepts a JSON array of CORE repository IDs and retrieves a list of repositories. The response array is ordered based on the order of the IDs in the request array. The maximum number of IDs in request is 100.
      displayName: Batch operation for retrieving repositories by CORE repository ID
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: array
              items:
                type: RepositoryResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
  /search:
    /{query}:
      uriParameters:
        query:
          type: string
          description: The search query
          displayName: query
      get:
        description: Searches through all repositories and returns a JSON array with search results. Method searches through all repository fields.
        displayName: Search through all repositories
        queryParameters:
          page?:
            type: integer
            description: Which page of the search results should be retrieved. Can be any number betwen 1 and 100, default is 1 (first page).
            displayName: page
            default: 1
            format: int32
            minimum: 1
            maximum: 100
          pageSize?:
            type: integer
            description: The number of results to return per page. Can be any number between 10 and 100, default is 10.
            displayName: pageSize
            default: 10
            format: int32
            minimum: 10
            maximum: 100
        responses:
          200:
            description: Successful operation
            body:
              application/json:
                type: RepositorySearchResponse
          400:
            description: Parameter invalid or out of bounds
          401:
            description: Invalid or no API key provided
          429:
            description: Too many requests in given amount of time
    post:
      description: Method accepts a JSON array of search queries and parameters. It then searches through all repositories and returns a JSON array of search results for each of the queries. Method searches through all repository fields.
      displayName: Batch operation for searching through repositories
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: RepositorySearchResponse
        400:
          description: Missing or malformed JSON in request body
        401:
          description: Invalid or no API key provided
        403:
          description: Too many queries in request body
        429:
          description: Too many requests in given amount of time
/search:
  /{query}:
    uriParameters:
      query:
        type: string
        description: The search query
        displayName: query
    get:
      description: Searches through all resources and returns a JSON array with search results. Method searches through all resources and all fields. The results are ordered by relevance score and contain type of the relevant resource and its ID. The metadata of each resource need to be obtained through an appropriate method.
      displayName: Search through all resources
      queryParameters:
        page?:
          type: integer
          description: Which page of the search results should be retrieved. Can be any number betwen 1 and 100, default is 1 (first page).
          displayName: page
          default: 1
          format: int32
          minimum: 1
          maximum: 100
        pageSize?:
          type: integer
          description: The number of results to return per page. Can be any number between 10 and 100, default is 10.
          displayName: pageSize
          default: 10
          format: int32
          minimum: 10
          maximum: 100
      responses:
        200:
          description: Successful operation
          body:
            application/json:
              type: SearchAllResponse
        400:
          description: Parameter invalid or out of bounds
        401:
          description: Invalid or no API key provided
        429:
          description: Too many requests in given amount of time
  post:
    description: Method accepts a JSON array of search queries. It searches through all resources and returns a JSON array with search results for each of the queries. Method searches through all resources and all fields. The results are ordered by relevance score and contain type of the relevant resource and its ID. Furthermore, the responses are oredered based on the order of the request items. The metadata of each resource need to be obtained through an appropriate method.
    displayName: Batch operation for search through all resources
    responses:
      200:
        description: Successful operation
        body:
          application/json:
            type: array
            items:
              type: SearchAllResponse
      400:
        description: Missing or malformed JSON in request body
      401:
        description: Invalid or no API key provided
      403:
        description: Too many queries in request body
      429:
        description: Too many requests in given amount of time
