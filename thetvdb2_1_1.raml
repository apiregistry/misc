#%RAML 1.0
title: TheTVDB API v2
version: 2.1.1
baseUri: api-dev.thetvdb.com/
description: |-
  API v2 targets v1 functionality with a few minor additions. The API is accessible via https://api.thetvdb.com and provides the following REST endpoints in JSON format.


  How to use this API documentation
  ----------------


  You may browse the API routes without authentication, but if you wish to send requests to the API and see response data, then you must authenticate.
  1. Obtain a JWT token by `POST`ing  to the `/login` route in the `Authentication` section with your API key and credentials.
  1. Paste the JWT token from the response into the "JWT Token" field at the top of the page and click the 'Add Token' button.


  You will now be able to use the remaining routes to send requests to the API and get a response.


  Language Selection
  ----------------


  Language selection is done via the `Accept-Language` header. At the moment, you may only pass one language abbreviation in the header at a time. Valid language abbreviations can be found at the `/languages` route..


  Authentication
  ----------------


  Authentication to use the API is similar to the How-to section above. Users must `POST` to the `/login` route with their API key and credentials in the following format in order to obtain a JWT token.

  `{"apikey":"APIKEY","username":"USERNAME","userkey":"USERKEY"}`

  Note that the username and key are ONLY required for the `/user` routes. The user's key is labled `Account Identifier` in the account section of the main site.
  The token is then used in all subsequent requests by providing it in the `Authorization` header. The header will look like: `Authorization: Bearer <yourJWTtoken>`. Currently, the token expires after 24 hours. You can `GET` the `/refresh_token` route to extend that expiration date.


  Versioning
  ----------------


  You may request a different version of the API by including an `Accept` header in your request with the following format: `Accept:application/vnd.thetvdb.v$VERSION`. This documentation automatically uses the version seen at the top and bottom of the page.
mediaType:
- application/json
uses:
  commons: https://raw.githubusercontent.com/apiregistry/commons/master/commons.raml
  extras: https://raw.githubusercontent.com/apiregistry/typesExtras/master/typeExtras.raml
securitySchemes:
  jwtToken:
    type: Pass Through
types:
  Auth:
    type: object
    properties:
      apikey?:
        type: string
      userkey?:
        type: string
      username?:
        type: string
    description: JSON string containing your authentication details.
  BasicEpisode:
    type: object
    properties:
      absoluteNumber?:
        type: integer
      airedEpisodeNumber?:
        type: integer
      airedSeason?:
        type: integer
      dvdEpisodeNumber?:
        type: integer
      dvdSeason?:
        type: integer
      episodeName?:
        type: string
      id?:
        type: integer
      overview?:
        type: string
  Conflict:
    type: object
    properties:
      Error?:
        type: string
  Episode:
    type: object
    properties:
      absoluteNumber?:
        type: integer
      airedEpisodeNumber?:
        type: integer
      airedSeason?:
        type: integer
      airsAfterSeason?:
        type: integer
      airsBeforeEpisode?:
        type: integer
      airsBeforeSeason?:
        type: integer
      director?:
        type: string
      directors?:
        type: array
        items:
          type: string
      dvdChapter?:
        type: number
      dvdDiscid?:
        type: string
      dvdEpisodeNumber?:
        type: number
      dvdSeason?:
        type: integer
      episodeName?:
        type: string
      filename?:
        type: string
      firstAired?:
        type: string
      guestStars?:
        type: array
        items:
          type: string
      id?:
        type: integer
      imdbId?:
        type: string
      lastUpdated?:
        type: integer
      lastUpdatedBy?:
        type: string
      overview?:
        type: string
      productionCode?:
        type: string
      seriesId?:
        type: string
      showUrl?:
        type: string
      siteRating?:
        type: number
      siteRatingCount?:
        type: integer
      thumbAdded?:
        type: string
      thumbAuthor?:
        type: integer
      thumbHeight?:
        type: string
      thumbWidth?:
        type: string
      writers?:
        type: array
        items:
          type: string
  EpisodeDataQueryParams:
    type: object
    properties:
      data?:
        type: array
        items:
          type: string
  EpisodeRecordData:
    type: object
    properties:
      data?:
        type: Episode
      errors?:
        type: JSONErrors
  FilterKeys:
    type: object
    properties:
      data?:
        type: array
        items:
          type: string
  JSONErrors:
    type: object
    properties:
      invalidFilters?:
        type: array
        description: Invalid filters passed to route
        items:
          type: string
      invalidLanguage?:
        type: string
        description: Invalid language or translation missing
      invalidQueryParams?:
        type: array
        description: Invalid query params passed to route
        items:
          type: string
  Language:
    type: object
    properties:
      abbreviation?:
        type: string
      englishName?:
        type: string
      id?:
        type: integer
      name?:
        type: string
  LanguageData:
    type: object
    properties:
      data?:
        type: array
        items:
          type: Language
  Links:
    type: object
    properties:
      first?:
        type: integer
      last?:
        type: integer
      next?:
        type: integer
      previous?:
        type: integer
  NotAuthorized:
    type: object
    properties:
      Error?:
        type: string
  NotFound:
    type: object
    properties:
      Error?:
        type: string
  Series:
    type: object
    properties:
      added?:
        type: string
      airsDayOfWeek?:
        type: string
      airsTime?:
        type: string
      aliases?:
        type: array
        items:
          type: string
      banner?:
        type: string
      firstAired?:
        type: string
      genre?:
        type: array
        items:
          type: string
      id?:
        type: integer
      imdbId?:
        type: string
      lastUpdated?:
        type: integer
      network?:
        type: string
      networkId?:
        type: string
      overview?:
        type: string
      rating?:
        type: string
      runtime?:
        type: string
      seriesId?:
        type: integer
      seriesName?:
        type: string
      siteRating?:
        type: number
      siteRatingCount?:
        type: integer
      status?:
        type: string
      zap2itId?:
        type: string
  SeriesActors:
    type: object
    properties:
      data?:
        type: array
        items:
          type: SeriesActorsData
      errors?:
        type: JSONErrors
  SeriesActorsData:
    type: object
    properties:
      id?:
        type: integer
      image?:
        type: string
      imageAdded?:
        type: string
      imageAuthor?:
        type: integer
      lastUpdated?:
        type: string
      name?:
        type: string
      role?:
        type: string
      seriesId?:
        type: integer
      sortOrder?:
        type: integer
  SeriesData:
    type: object
    properties:
      data?:
        type: Series
      errors?:
        type: JSONErrors
        description: Informative error messages (optional)
  SeriesEpisodes:
    type: object
    properties:
      data?:
        type: array
        items:
          type: BasicEpisode
      errors?:
        type: JSONErrors
      links?:
        type: Links
  SeriesEpisodesQuery:
    type: object
    properties:
      data?:
        type: array
        items:
          type: BasicEpisode
      errors?:
        type: JSONErrors
      links?:
        type: Links
  SeriesEpisodesQueryParams:
    type: object
    properties:
      data?:
        type: array
        items:
          type: string
  SeriesEpisodesSummary:
    type: object
    properties:
      airedEpisodes?:
        type: string
        description: Number of all aired episodes for this series
      airedSeasons?:
        type: array
        items:
          type: string
      dvdEpisodes?:
        type: string
        description: Number of all dvd episodes for this series
      dvdSeasons?:
        type: array
        items:
          type: string
  SeriesImageQueryResult:
    type: object
    properties:
      fileName?:
        type: string
      id?:
        type: integer
      keyType?:
        type: string
      languageId?:
        type: integer
      ratingsInfo?:
        type: object
        properties:
          average?:
            type: number
            description: Average rating for the given record.
          count?:
            type: integer
            description: Number of ratings for the given record.
      resolution?:
        type: string
      subKey?:
        type: string
      thumbnail?:
        type: string
  SeriesImageQueryResults:
    type: object
    properties:
      data?:
        type: array
        items:
          type: SeriesImageQueryResult
      errors?:
        type: JSONErrors
  SeriesImagesCount:
    type: object
    properties:
      fanart?:
        type: integer
      poster?:
        type: integer
      season?:
        type: integer
      seasonwide?:
        type: integer
      series?:
        type: integer
  SeriesImagesCounts:
    type: object
    properties:
      data?:
        type: SeriesImagesCount
  SeriesImagesQueryParam:
    type: object
    properties:
      keyType?:
        type: string
      languageId?:
        type: string
      resolution?:
        type: array
        items:
          type: string
      subKey?:
        type: array
        items:
          type: string
  SeriesImagesQueryParams:
    type: object
    properties:
      data?:
        type: array
        items:
          type: SeriesImagesQueryParam
  SeriesSearchData:
    type: object
    properties:
      aliases?:
        type: array
        items:
          type: string
      banner?:
        type: string
      firstAired?:
        type: string
      id?:
        type: integer
      network?:
        type: string
      overview?:
        type: string
      seriesName?:
        type: string
      status?:
        type: string
  Token:
    type: object
    properties:
      token?:
        type: string
  Update:
    type: object
    properties:
      id?:
        type: integer
      lastUpdated?:
        type: integer
  UpdateData:
    type: object
    properties:
      data?:
        type: array
        items:
          type: Update
      errors?:
        type: JSONErrors
  UpdateDataQueryParams:
    type: object
    properties:
      data?:
        type: array
        items:
          type: string
  User:
    type: object
    properties:
      favoritesDisplaymode?:
        type: string
      language?:
        type: string
      userName?:
        type: string
  UserData:
    type: object
    properties:
      data?:
        type: User
  UserFavorites:
    type: object
    properties:
      favorites?:
        type: array
        items:
          type: string
  UserFavoritesData:
    type: object
    properties:
      data?:
        type: UserFavorites
      errors?:
        type: JSONErrors
  UserRatings:
    type: object
    properties:
      rating?:
        type: integer
      ratingItemId?:
        type: integer
      ratingType?:
        type: string
  UserRatingsData:
    type: object
    properties:
      data?:
        type: array
        items:
          type: UserRatings
      errors?:
        type: JSONErrors
      links?:
        type: Links
  UserRatingsDataNoLinks:
    type: object
    properties:
      data?:
        type: array
        items:
          type: UserRatings
  UserRatingsDataNoLinksEmptyArray:
    type: object
    properties:
      data?:
        type: array
  UserRatingsQueryParams:
    type: object
    properties:
      data?:
        type: array
        items:
          type: string
/episodes:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of the episode
        displayName: id
        format: int64
    get:
      description: Returns the full information for a given episode id. __Deprecation Warning:__ The _director_ key will be deprecated in favor of the new _directors_ key in a future release.
      headers:
        Accept-Language?:
          type: string
          description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
          displayName: Accept-Language
      responses:
        200:
          description: An array of query keys as strings
          body:
            application/json:
              type: EpisodeRecordData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if the given episode ID does not exist.
          body:
            application/json:
              type: NotFound
/languages:
  /{id}:
    uriParameters:
      id:
        type: string
        description: ID of the language
        displayName: id
    get:
      description: Information about a particular language, given the language ID.
      responses:
        200:
          description: An array of language objects.
          body:
            application/json:
              type: Language
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if the given language ID does not exist.
          body:
            application/json:
              type: NotFound
  get:
    description: All available languages. These language abbreviations can be used in the `Accept-Language` header for routes that return translation records.
    responses:
      200:
        description: An array of language objects.
        body:
          application/json:
            type: LanguageData
      401:
        description: Returned if your JWT token is missing or expired
        body:
          application/json:
            type: NotAuthorized
/login:
  post:
    description: Returns a session token to be included in the rest of the requests. Note that API key authentication is required for all subsequent requests and user auth is required for routes in the `User` section
    body:
      application/json: Auth
    responses:
      200:
        description: Returns a JWT token for use with the rest of the API routes
        body:
          application/json:
            type: Token
      401:
        description: Invalid credentials and/or API token
        body:
          application/json:
            type: NotAuthorized
/refresh_token:
  get:
    description: Refreshes your current, valid JWT token and returns a new token. Hit this route so that you do not have to post to `/login` with your API key and credentials once you have already been authenticated.
    responses:
      200:
        description: Returns a new token to use in your subsequent requests
        body:
          application/json:
            type: Token
      401:
        description: Returned if your JWT token is missing or expired
        body:
          application/json:
            type: NotAuthorized
/search:
  /series:
    /params:
      get:
        description: Returns an array of parameters to query by in the `/search/series` route.
        responses:
          200:
            description: An array of query keys as strings
            body:
              application/json:
                type: EpisodeDataQueryParams
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
    get:
      description: Allows the user to search for a series based on the following parameters.
      queryParameters:
        name?:
          type: string
          description: Name of the series to search for.
          displayName: name
        imdbId?:
          type: string
          description: IMDB id of the series
          displayName: imdbId
        zap2itId?:
          type: string
          description: Zap2it ID of the series to search for.
          displayName: zap2itId
      headers:
        Accept-Language?:
          type: string
          description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
          displayName: Accept-Language
      responses:
        200:
          description: An array of results that match the provided query.
          body:
            application/json:
              type: SeriesSearchData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if no records are found that match your query.
          body:
            application/json:
              type: NotFound
/series:
  /{id}:
    uriParameters:
      id:
        type: integer
        description: ID of the series
        displayName: id
        format: int64
    /actors:
      get:
        description: Returns actors for the given series id
        responses:
          200:
            description: An array of actor objects for the given series id.
            body:
              application/json:
                type: SeriesActors
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if the given series ID does not exist
            body:
              application/json:
                type: NotFound
    /episodes:
      /query:
        /params:
          get:
            description: Returns the allowed query keys for the `/series/{id}/episodes/query` route
            responses:
              200:
                description: An array of query keys as strings
                body:
                  application/json:
                    type: SeriesEpisodesQueryParams
              401:
                description: Returned if your JWT token is missing or expired
                body:
                  application/json:
                    type: NotAuthorized
              404:
                description: Returned if the given series ID does not exist or the query returns no results.
                body:
                  application/json:
                    type: NotFound
        get:
          description: This route allows the user to query against episodes for the given series. The response is a paginated array of episode records that have been filtered down to basic information.
          queryParameters:
            absoluteNumber?:
              type: string
              description: Absolute number of the episode
              displayName: absoluteNumber
            airedSeason?:
              type: string
              description: Aired season number
              displayName: airedSeason
            airedEpisode?:
              type: string
              description: Aired episode number
              displayName: airedEpisode
            dvdSeason?:
              type: string
              description: DVD season number
              displayName: dvdSeason
            dvdEpisode?:
              type: string
              description: DVD episode number
              displayName: dvdEpisode
            imdbId?:
              type: string
              description: IMDB id of the series
              displayName: imdbId
            page?:
              type: string
              description: Page of results to fetch. Defaults to page 1 if not provided.
              displayName: page
          headers:
            Accept-Language?:
              type: string
              description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
              displayName: Accept-Language
          responses:
            200:
              description: An array of basic Episode results that matched the query
              body:
                application/json:
                  type: SeriesEpisodesQuery
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if the given series ID does not exist or the query returns no results.
              body:
                application/json:
                  type: NotFound
      /summary:
        get:
          description: |-
            Returns a summary of the episodes and seasons available for the series.

            __Note__: Season "0" is for all episodes that are considered to be specials.
          responses:
            200:
              description: A summary of the episodes and seasons avaialable for the given series.
              body:
                application/json:
                  type: SeriesEpisodesSummary
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if the given series ID does not exist
              body:
                application/json:
                  type: NotFound
      get:
        description: All episodes for a given series. Paginated with 100 results per page.
        queryParameters:
          page?:
            type: string
            description: Page of results to fetch. Defaults to page 1 if not provided.
            displayName: page
        responses:
          200:
            description: An array of episode objects for the given series id.
            body:
              application/json:
                type: SeriesEpisodes
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if the given series ID does not exist
            body:
              application/json:
                type: NotFound
    /filter:
      /params:
        get:
          description: Returns the list of keys available for the `/series/{id}/filter` route
          headers:
            Accept-Language?:
              type: string
              description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
              displayName: Accept-Language
          responses:
            200:
              description: A list of keys to filter by
              body:
                application/json:
                  type: FilterKeys
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if the given series ID does not exist
              body:
                application/json:
                  type: NotFound
      get:
        description: Returns a series records, filtered by the supplied comma-separated list of keys. Query keys can be found at the `/series/{id}/filter/params` route.
        queryParameters:
          keys:
            type: string
            description: Comma-separated list of keys to filter by
            displayName: keys
        headers:
          Accept-Language?:
            type: string
            description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
            displayName: Accept-Language
        responses:
          200:
            description: A filtered series record
            body:
              application/json:
                type: SeriesData
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if the given series ID does not exist
            body:
              application/json:
                type: NotFound
    /images:
      /query:
        /params:
          get:
            description: Returns the allowed query keys for the `/series/{id}/images/query` route. Contains a parameter record for each unique `keyType`, listing values that will return results.
            headers:
              Accept-Language?:
                type: string
                description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
                displayName: Accept-Language
            responses:
              200:
                description: An array of query keys as strings
                body:
                  application/json:
                    type: SeriesImagesQueryParams
              401:
                description: Returned if your JWT token is missing or expired
                body:
                  application/json:
                    type: NotAuthorized
              404:
                description: Returned if the given series ID does not exist or the query returns no results.
                body:
                  application/json:
                    type: NotFound
        get:
          description: Query images for the given series ID.
          queryParameters:
            keyType?:
              type: string
              description: Type of image you're querying for (fanart, poster, etc. See ../images/query/params for more details).
              displayName: keyType
            resolution?:
              type: string
              description: Resolution to filter by (1280x1024, for example)
              displayName: resolution
            subKey?:
              type: string
              description: Subkey for the above query keys. See /series/{id}/images/query/params for more information
              displayName: subKey
          headers:
            Accept-Language?:
              type: string
              description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
              displayName: Accept-Language
          responses:
            200:
              description: An array of basic Episode results that matched the query
              body:
                application/json:
                  type: SeriesImageQueryResults
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if the given series ID does not exist or the query returns no results.
              body:
                application/json:
                  type: NotFound
      get:
        description: Returns a summary of the images for a particular series
        headers:
          Accept-Language?:
            type: string
            description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
            displayName: Accept-Language
        responses:
          200:
            description: A summary of the image types and counts available for the given series.
            body:
              application/json:
                type: SeriesImagesCounts
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if the given series ID does not exist
            body:
              application/json:
                type: NotFound
    get:
      description: Returns a series records that contains all information known about a particular series id.
      headers:
        Accept-Language?:
          type: string
          description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
          displayName: Accept-Language
      responses:
        200:
          description: A series record.
          body:
            application/json:
              type: SeriesData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if the given series ID does not exist
          body:
            application/json:
              type: NotFound
    head:
      description: Returns header information only about the given series ID.
      headers:
        Accept-Language?:
          type: string
          description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
          displayName: Accept-Language
      responses:
        200:
          description: Series header information. Good for getting the Last-Updated header to find out when the series was last modified.
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if the given series ID does not exist
          body:
            application/json:
              type: NotFound
/updated:
  /query:
    /params:
      get:
        description: Returns an array of valid query keys for the `/updated/query/params` route.
        responses:
          200:
            description: An array of Update objects that match the given timeframe.
            body:
              application/json:
                type: UpdateDataQueryParams
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if no records exist for the given timespan
            body:
              application/json:
                type: NotFound
    get:
      description: |-
        Returns an array of series that have changed in a maximum of one week blocks since the provided `fromTime`.


        The user may specify a `toTime` to grab results for less than a week. Any timespan larger than a week will be reduced down to one week automatically.
      queryParameters:
        fromTime:
          type: string
          description: Epoch time to start your date range.
          displayName: fromTime
        toTime?:
          type: string
          description: Epoch time to end your date range. Must be one week from `fromTime`.
          displayName: toTime
      headers:
        Accept-Language?:
          type: string
          description: Records are returned with the Episode name and Overview in the desired language, if it exists. If there is no translation for the given language, then the record is still returned but with empty values for the translated fields.
          displayName: Accept-Language
      responses:
        200:
          description: An array of Update objects that match the given timeframe.
          body:
            application/json:
              type: UpdateData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if no records exist for the given timespan
          body:
            application/json:
              type: NotFound
/user:
  /favorites:
    /{id}:
      uriParameters:
        id:
          type: integer
          description: ID of the series
          displayName: id
          format: int64
      delete:
        description: Deletes the given series ID from the userâs favoriteâs list and returns the updated list.
        responses:
          200:
            description: List of user favorites.
            body:
              application/json:
                type: UserFavoritesData
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if no information exists for the current user
            body:
              application/json:
                type: NotFound
          409:
            description: Returned if requested record could not be deleted
            body:
              application/json:
                type: Conflict
      put:
        description: Adds the supplied series ID to the userâs favoriteâs list and returns the updated list.
        responses:
          200:
            description: List of user favorites.
            body:
              application/json:
                type: UserFavoritesData
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if no information exists for the current user
            body:
              application/json:
                type: NotFound
          409:
            description: Returned if requested record could not be updated
            body:
              application/json:
                type: Conflict
    get:
      description: Returns an array of favorite series for a given user, will be a blank array if no favorites exist.
      responses:
        200:
          description: User favorites.
          body:
            application/json:
              type: UserFavoritesData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if no information exists for the current user
          body:
            application/json:
              type: NotFound
  /ratings:
    /query:
      /params:
        get:
          description: Returns a list of query params for use in the `/user/ratings/query` route.
          responses:
            200:
              description: Parameters to use for querying.
              body:
                application/json:
                  type: UserRatingsQueryParams
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if no information exists for the current user
              body:
                application/json:
                  type: NotFound
      get:
        description: Returns an array of ratings for a given user that match the query.
        queryParameters:
          itemType?:
            type: string
            description: Item to query. Can be either 'series', 'episode', or 'banner'
            displayName: itemType
        responses:
          200:
            description: List of user ratings that match the given query.
            body:
              application/json:
                type: UserRatingsData
          401:
            description: Returned if your JWT token is missing or expired
            body:
              application/json:
                type: NotAuthorized
          404:
            description: Returned if no information exists for the current user
            body:
              application/json:
                type: NotFound
    /{itemType}:
      uriParameters:
        itemType:
          type: string
          description: Item to update. Can be either 'series', 'episode', or 'image'
          displayName: itemType
      /{itemId}:
        uriParameters:
          itemId:
            type: integer
            description: ID of the ratings record that you wish to modify
            displayName: itemId
            format: int64
        /{itemRating}:
          uriParameters:
            itemRating:
              type: integer
              description: The updated rating number
              displayName: itemRating
              format: int64
          put:
            description: This route updates a given rating of a given type.
            responses:
              200:
                description: Update OK if the update was successful
                body:
                  application/json:
                    type: UserRatingsDataNoLinks
              401:
                description: Returned if your JWT token is missing or expired
                body:
                  application/json:
                    type: NotAuthorized
              404:
                description: Returned if no rating is found that matches your given parameters
                body:
                  application/json:
                    type: NotFound
        delete:
          description: This route deletes a given rating of a given type.
          responses:
            200:
              description: Returns OK if the delete was successful
              body:
                application/json:
                  type: UserRatingsDataNoLinksEmptyArray
            401:
              description: Returned if your JWT token is missing or expired
              body:
                application/json:
                  type: NotAuthorized
            404:
              description: Returned if no rating is found that matches your given parameters
              body:
                application/json:
                  type: NotFound
    get:
      description: Returns an array of ratings for the given user.
      responses:
        200:
          description: Array of user ratings.
          body:
            application/json:
              type: UserRatingsData
        401:
          description: Returned if your JWT token is missing or expired
          body:
            application/json:
              type: NotAuthorized
        404:
          description: Returned if no information exists for the current user
          body:
            application/json:
              type: NotFound
  get:
    description: Returns basic information about the currently authenticated user.
    responses:
      200:
        description: User information.
        body:
          application/json:
            type: UserData
      401:
        description: Returned if your JWT token is missing or expired
        body:
          application/json:
            type: NotAuthorized
      404:
        description: Returned if no information exists for the current user
        body:
          application/json:
            type: NotFound
